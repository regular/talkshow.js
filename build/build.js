;(function(){

/**
 * Require the given path.
 *
 * @param {String} path
 * @return {Object} exports
 * @api public
 */

function require(path, parent, orig) {
  var resolved = require.resolve(path);

  // lookup failed
  if (null == resolved) {
    orig = orig || path;
    parent = parent || 'root';
    var err = new Error('Failed to require "' + orig + '" from "' + parent + '"');
    err.path = orig;
    err.parent = parent;
    err.require = true;
    throw err;
  }

  var module = require.modules[resolved];

  // perform real require()
  // by invoking the module's
  // registered function
  if (!module.exports) {
    module.exports = {};
    module.client = module.component = true;
    module.call(this, module.exports, require.relative(resolved), module);
  }

  return module.exports;
}

/**
 * Registered modules.
 */

require.modules = {};

/**
 * Registered aliases.
 */

require.aliases = {};

/**
 * Resolve `path`.
 *
 * Lookup:
 *
 *   - PATH/index.js
 *   - PATH.js
 *   - PATH
 *
 * @param {String} path
 * @return {String} path or null
 * @api private
 */

require.resolve = function(path) {
  if (path.charAt(0) === '/') path = path.slice(1);
  var index = path + '/index.js';

  var paths = [
    path,
    path + '.js',
    path + '.json',
    path + '/index.js',
    path + '/index.json'
  ];

  for (var i = 0; i < paths.length; i++) {
    var path = paths[i];
    if (require.modules.hasOwnProperty(path)) return path;
  }

  if (require.aliases.hasOwnProperty(index)) {
    return require.aliases[index];
  }
};

/**
 * Normalize `path` relative to the current path.
 *
 * @param {String} curr
 * @param {String} path
 * @return {String}
 * @api private
 */

require.normalize = function(curr, path) {
  var segs = [];

  if ('.' != path.charAt(0)) return path;

  curr = curr.split('/');
  path = path.split('/');

  for (var i = 0; i < path.length; ++i) {
    if ('..' == path[i]) {
      curr.pop();
    } else if ('.' != path[i] && '' != path[i]) {
      segs.push(path[i]);
    }
  }

  return curr.concat(segs).join('/');
};

/**
 * Register module at `path` with callback `definition`.
 *
 * @param {String} path
 * @param {Function} definition
 * @api private
 */

require.register = function(path, definition) {
  require.modules[path] = definition;
};

/**
 * Alias a module definition.
 *
 * @param {String} from
 * @param {String} to
 * @api private
 */

require.alias = function(from, to) {
  if (!require.modules.hasOwnProperty(from)) {
    throw new Error('Failed to alias "' + from + '", it does not exist');
  }
  require.aliases[to] = from;
};

/**
 * Return a require function relative to the `parent` path.
 *
 * @param {String} parent
 * @return {Function}
 * @api private
 */

require.relative = function(parent) {
  var p = require.normalize(parent, '..');

  /**
   * lastIndexOf helper.
   */

  function lastIndexOf(arr, obj) {
    var i = arr.length;
    while (i--) {
      if (arr[i] === obj) return i;
    }
    return -1;
  }

  /**
   * The relative require() itself.
   */

  function localRequire(path) {
    var resolved = localRequire.resolve(path);
    return require(resolved, parent, path);
  }

  /**
   * Resolve relative to the parent.
   */

  localRequire.resolve = function(path) {
    var c = path.charAt(0);
    if ('/' == c) return path.slice(1);
    if ('.' == c) return require.normalize(p, path);

    // resolve deps by returning
    // the dep in the nearest "deps"
    // directory
    var segs = parent.split('/');
    var i = lastIndexOf(segs, 'deps') + 1;
    if (!i) i = 0;
    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;
    return path;
  };

  /**
   * Check if module is defined at `path`.
   */

  localRequire.exists = function(path) {
    return require.modules.hasOwnProperty(localRequire.resolve(path));
  };

  return localRequire;
};
require.register("visionmedia-mocha/mocha.js", Function("exports, require, module",
";(function(){\n\n// CommonJS require()\n\nfunction require(p){\n    var path = require.resolve(p)\n      , mod = require.modules[path];\n    if (!mod) throw new Error('failed to require \"' + p + '\"');\n    if (!mod.exports) {\n      mod.exports = {};\n      mod.call(mod.exports, mod, mod.exports, require.relative(path));\n    }\n    return mod.exports;\n  }\n\nrequire.modules = {};\n\nrequire.resolve = function (path){\n    var orig = path\n      , reg = path + '.js'\n      , index = path + '/index.js';\n    return require.modules[reg] && reg\n      || require.modules[index] && index\n      || orig;\n  };\n\nrequire.register = function (path, fn){\n    require.modules[path] = fn;\n  };\n\nrequire.relative = function (parent) {\n    return function(p){\n      if ('.' != p.charAt(0)) return require(p);\n\n      var path = parent.split('/')\n        , segs = p.split('/');\n      path.pop();\n\n      for (var i = 0; i < segs.length; i++) {\n        var seg = segs[i];\n        if ('..' == seg) path.pop();\n        else if ('.' != seg) path.push(seg);\n      }\n\n      return require(path.join('/'));\n    };\n  };\n\n\nrequire.register(\"browser/debug.js\", function(module, exports, require){\n\nmodule.exports = function(type){\n  return function(){\n  }\n};\n\n}); // module: browser/debug.js\n\nrequire.register(\"browser/diff.js\", function(module, exports, require){\n/* See license.txt for terms of usage */\n\n/*\n * Text diff implementation.\n * \n * This library supports the following APIS:\n * JsDiff.diffChars: Character by character diff\n * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * JsDiff.diffLines: Line based diff\n * \n * JsDiff.diffCss: Diff targeted at CSS content\n * \n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nvar JsDiff = (function() {\n  function clonePath(path) {\n    return { newPos: path.newPos, components: path.components.slice(0) };\n  }\n  function removeEmpty(array) {\n    var ret = [];\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  }\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, \"&amp;\");\n    n = n.replace(/</g, \"&lt;\");\n    n = n.replace(/>/g, \"&gt;\");\n    n = n.replace(/\"/g, \"&quot;\");\n\n    return n;\n  }\n\n\n  var fbDiff = function(ignoreWhitespace) {\n    this.ignoreWhitespace = ignoreWhitespace;\n  };\n  fbDiff.prototype = {\n      diff: function(oldString, newString) {\n        // Handle the identity case (this is due to unrolling editLength == 0\n        if (newString == oldString) {\n          return [{ value: newString }];\n        }\n        if (!newString) {\n          return [{ value: oldString, removed: true }];\n        }\n        if (!oldString) {\n          return [{ value: newString, added: true }];\n        }\n\n        newString = this.tokenize(newString);\n        oldString = this.tokenize(oldString);\n\n        var newLen = newString.length, oldLen = oldString.length;\n        var maxEditLength = newLen + oldLen;\n        var bestPath = [{ newPos: -1, components: [] }];\n\n        // Seed editLength = 0\n        var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n        if (bestPath[0].newPos+1 >= newLen && oldPos+1 >= oldLen) {\n          return bestPath[0].components;\n        }\n\n        for (var editLength = 1; editLength <= maxEditLength; editLength++) {\n          for (var diagonalPath = -1*editLength; diagonalPath <= editLength; diagonalPath+=2) {\n            var basePath;\n            var addPath = bestPath[diagonalPath-1],\n                removePath = bestPath[diagonalPath+1];\n            oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n            if (addPath) {\n              // No one else is going to attempt to use this value, clear it\n              bestPath[diagonalPath-1] = undefined;\n            }\n\n            var canAdd = addPath && addPath.newPos+1 < newLen;\n            var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n            if (!canAdd && !canRemove) {\n              bestPath[diagonalPath] = undefined;\n              continue;\n            }\n\n            // Select the diagonal that we want to branch from. We select the prior\n            // path whose position in the new string is the farthest from the origin\n            // and does not pass the bounds of the diff graph\n            if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n              basePath = clonePath(removePath);\n              this.pushComponent(basePath.components, oldString[oldPos], undefined, true);\n            } else {\n              basePath = clonePath(addPath);\n              basePath.newPos++;\n              this.pushComponent(basePath.components, newString[basePath.newPos], true, undefined);\n            }\n\n            var oldPos = this.extractCommon(basePath, newString, oldString, diagonalPath);\n\n            if (basePath.newPos+1 >= newLen && oldPos+1 >= oldLen) {\n              return basePath.components;\n            } else {\n              bestPath[diagonalPath] = basePath;\n            }\n          }\n        }\n      },\n\n      pushComponent: function(components, value, added, removed) {\n        var last = components[components.length-1];\n        if (last && last.added === added && last.removed === removed) {\n          // We need to clone here as the component clone operation is just\n          // as shallow array clone\n          components[components.length-1] =\n            {value: this.join(last.value, value), added: added, removed: removed };\n        } else {\n          components.push({value: value, added: added, removed: removed });\n        }\n      },\n      extractCommon: function(basePath, newString, oldString, diagonalPath) {\n        var newLen = newString.length,\n            oldLen = oldString.length,\n            newPos = basePath.newPos,\n            oldPos = newPos - diagonalPath;\n        while (newPos+1 < newLen && oldPos+1 < oldLen && this.equals(newString[newPos+1], oldString[oldPos+1])) {\n          newPos++;\n          oldPos++;\n          \n          this.pushComponent(basePath.components, newString[newPos], undefined, undefined);\n        }\n        basePath.newPos = newPos;\n        return oldPos;\n      },\n\n      equals: function(left, right) {\n        var reWhitespace = /\\S/;\n        if (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right)) {\n          return true;\n        } else {\n          return left == right;\n        }\n      },\n      join: function(left, right) {\n        return left + right;\n      },\n      tokenize: function(value) {\n        return value;\n      }\n  };\n  \n  var CharDiff = new fbDiff();\n  \n  var WordDiff = new fbDiff(true);\n  WordDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/(\\s+|\\b)/));\n  };\n  \n  var CssDiff = new fbDiff(true);\n  CssDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/([{}:;,]|\\s+)/));\n  };\n  \n  var LineDiff = new fbDiff();\n  LineDiff.tokenize = function(value) {\n    return value.split(/^/m);\n  };\n  \n  return {\n    diffChars: function(oldStr, newStr) { return CharDiff.diff(oldStr, newStr); },\n    diffWords: function(oldStr, newStr) { return WordDiff.diff(oldStr, newStr); },\n    diffLines: function(oldStr, newStr) { return LineDiff.diff(oldStr, newStr); },\n\n    diffCss: function(oldStr, newStr) { return CssDiff.diff(oldStr, newStr); },\n\n    createPatch: function(fileName, oldStr, newStr, oldHeader, newHeader) {\n      var ret = [];\n\n      ret.push(\"Index: \" + fileName);\n      ret.push(\"===================================================================\");\n      ret.push(\"--- \" + fileName + (typeof oldHeader === \"undefined\" ? \"\" : \"\\t\" + oldHeader));\n      ret.push(\"+++ \" + fileName + (typeof newHeader === \"undefined\" ? \"\" : \"\\t\" + newHeader));\n\n      var diff = LineDiff.diff(oldStr, newStr);\n      if (!diff[diff.length-1].value) {\n        diff.pop();   // Remove trailing newline add\n      }\n      diff.push({value: \"\", lines: []});   // Append an empty value to make cleanup easier\n\n      function contextLines(lines) {\n        return lines.map(function(entry) { return ' ' + entry; });\n      }\n      function eofNL(curRange, i, current) {\n        var last = diff[diff.length-2],\n            isLast = i === diff.length-2,\n            isLastOfType = i === diff.length-3 && (current.added === !last.added || current.removed === !last.removed);\n\n        // Figure out if this is the last line for the given file and missing NL\n        if (!/\\n$/.test(current.value) && (isLast || isLastOfType)) {\n          curRange.push('\\\\ No newline at end of file');\n        }\n      }\n\n      var oldRangeStart = 0, newRangeStart = 0, curRange = [],\n          oldLine = 1, newLine = 1;\n      for (var i = 0; i < diff.length; i++) {\n        var current = diff[i],\n            lines = current.lines || current.value.replace(/\\n$/, \"\").split(\"\\n\");\n        current.lines = lines;\n\n        if (current.added || current.removed) {\n          if (!oldRangeStart) {\n            var prev = diff[i-1];\n            oldRangeStart = oldLine;\n            newRangeStart = newLine;\n            \n            if (prev) {\n              curRange = contextLines(prev.lines.slice(-4));\n              oldRangeStart -= curRange.length;\n              newRangeStart -= curRange.length;\n            }\n          }\n          curRange.push.apply(curRange, lines.map(function(entry) { return (current.added?\"+\":\"-\") + entry; }));\n          eofNL(curRange, i, current);\n\n          if (current.added) {\n            newLine += lines.length;\n          } else {\n            oldLine += lines.length;\n          }\n        } else {\n          if (oldRangeStart) {\n            // Close out any changes that have been output (or join overlapping)\n            if (lines.length <= 8 && i < diff.length-2) {\n              // Overlapping\n              curRange.push.apply(curRange, contextLines(lines));\n            } else {\n              // end the range and output\n              var contextSize = Math.min(lines.length, 4);\n              ret.push(\n                  \"@@ -\" + oldRangeStart + \",\" + (oldLine-oldRangeStart+contextSize)\n                  + \" +\" + newRangeStart + \",\" + (newLine-newRangeStart+contextSize)\n                  + \" @@\");\n              ret.push.apply(ret, curRange);\n              ret.push.apply(ret, contextLines(lines.slice(0, contextSize)));\n              if (lines.length <= 4) {\n                eofNL(ret, i, current);\n              }\n\n              oldRangeStart = 0;  newRangeStart = 0; curRange = [];\n            }\n          }\n          oldLine += lines.length;\n          newLine += lines.length;\n        }\n      }\n\n      return ret.join('\\n') + '\\n';\n    },\n\n    convertChangesToXML: function(changes){\n      var ret = [];\n      for ( var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n        if (change.added) {\n          ret.push(\"<ins>\");\n        } else if (change.removed) {\n          ret.push(\"<del>\");\n        }\n\n        ret.push(escapeHTML(change.value));\n\n        if (change.added) {\n          ret.push(\"</ins>\");\n        } else if (change.removed) {\n          ret.push(\"</del>\");\n        }\n      }\n      return ret.join(\"\");\n    }\n  };\n})();\n\nif (typeof module !== \"undefined\") {\n    module.exports = JsDiff;\n}\n\n}); // module: browser/diff.js\n\nrequire.register(\"browser/events.js\", function(module, exports, require){\n\n/**\n * Module exports.\n */\n\nexports.EventEmitter = EventEmitter;\n\n/**\n * Check if `obj` is an array.\n */\n\nfunction isArray(obj) {\n  return '[object Array]' == {}.toString.call(obj);\n}\n\n/**\n * Event emitter constructor.\n *\n * @api public\n */\n\nfunction EventEmitter(){};\n\n/**\n * Adds a listener.\n *\n * @api public\n */\n\nEventEmitter.prototype.on = function (name, fn) {\n  if (!this.$events) {\n    this.$events = {};\n  }\n\n  if (!this.$events[name]) {\n    this.$events[name] = fn;\n  } else if (isArray(this.$events[name])) {\n    this.$events[name].push(fn);\n  } else {\n    this.$events[name] = [this.$events[name], fn];\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n/**\n * Adds a volatile listener.\n *\n * @api public\n */\n\nEventEmitter.prototype.once = function (name, fn) {\n  var self = this;\n\n  function on () {\n    self.removeListener(name, on);\n    fn.apply(this, arguments);\n  };\n\n  on.listener = fn;\n  this.on(name, on);\n\n  return this;\n};\n\n/**\n * Removes a listener.\n *\n * @api public\n */\n\nEventEmitter.prototype.removeListener = function (name, fn) {\n  if (this.$events && this.$events[name]) {\n    var list = this.$events[name];\n\n    if (isArray(list)) {\n      var pos = -1;\n\n      for (var i = 0, l = list.length; i < l; i++) {\n        if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\n          pos = i;\n          break;\n        }\n      }\n\n      if (pos < 0) {\n        return this;\n      }\n\n      list.splice(pos, 1);\n\n      if (!list.length) {\n        delete this.$events[name];\n      }\n    } else if (list === fn || (list.listener && list.listener === fn)) {\n      delete this.$events[name];\n    }\n  }\n\n  return this;\n};\n\n/**\n * Removes all listeners for an event.\n *\n * @api public\n */\n\nEventEmitter.prototype.removeAllListeners = function (name) {\n  if (name === undefined) {\n    this.$events = {};\n    return this;\n  }\n\n  if (this.$events && this.$events[name]) {\n    this.$events[name] = null;\n  }\n\n  return this;\n};\n\n/**\n * Gets all listeners for a certain event.\n *\n * @api public\n */\n\nEventEmitter.prototype.listeners = function (name) {\n  if (!this.$events) {\n    this.$events = {};\n  }\n\n  if (!this.$events[name]) {\n    this.$events[name] = [];\n  }\n\n  if (!isArray(this.$events[name])) {\n    this.$events[name] = [this.$events[name]];\n  }\n\n  return this.$events[name];\n};\n\n/**\n * Emits an event.\n *\n * @api public\n */\n\nEventEmitter.prototype.emit = function (name) {\n  if (!this.$events) {\n    return false;\n  }\n\n  var handler = this.$events[name];\n\n  if (!handler) {\n    return false;\n  }\n\n  var args = [].slice.call(arguments, 1);\n\n  if ('function' == typeof handler) {\n    handler.apply(this, args);\n  } else if (isArray(handler)) {\n    var listeners = handler.slice();\n\n    for (var i = 0, l = listeners.length; i < l; i++) {\n      listeners[i].apply(this, args);\n    }\n  } else {\n    return false;\n  }\n\n  return true;\n};\n}); // module: browser/events.js\n\nrequire.register(\"browser/fs.js\", function(module, exports, require){\n\n}); // module: browser/fs.js\n\nrequire.register(\"browser/path.js\", function(module, exports, require){\n\n}); // module: browser/path.js\n\nrequire.register(\"browser/progress.js\", function(module, exports, require){\n\n/**\n * Expose `Progress`.\n */\n\nmodule.exports = Progress;\n\n/**\n * Initialize a new `Progress` indicator.\n */\n\nfunction Progress() {\n  this.percent = 0;\n  this.size(0);\n  this.fontSize(11);\n  this.font('helvetica, arial, sans-serif');\n}\n\n/**\n * Set progress size to `n`.\n *\n * @param {Number} n\n * @return {Progress} for chaining\n * @api public\n */\n\nProgress.prototype.size = function(n){\n  this._size = n;\n  return this;\n};\n\n/**\n * Set text to `str`.\n *\n * @param {String} str\n * @return {Progress} for chaining\n * @api public\n */\n\nProgress.prototype.text = function(str){\n  this._text = str;\n  return this;\n};\n\n/**\n * Set font size to `n`.\n *\n * @param {Number} n\n * @return {Progress} for chaining\n * @api public\n */\n\nProgress.prototype.fontSize = function(n){\n  this._fontSize = n;\n  return this;\n};\n\n/**\n * Set font `family`.\n *\n * @param {String} family\n * @return {Progress} for chaining\n */\n\nProgress.prototype.font = function(family){\n  this._font = family;\n  return this;\n};\n\n/**\n * Update percentage to `n`.\n *\n * @param {Number} n\n * @return {Progress} for chaining\n */\n\nProgress.prototype.update = function(n){\n  this.percent = n;\n  return this;\n};\n\n/**\n * Draw on `ctx`.\n *\n * @param {CanvasRenderingContext2d} ctx\n * @return {Progress} for chaining\n */\n\nProgress.prototype.draw = function(ctx){\n  var percent = Math.min(this.percent, 100)\n    , size = this._size\n    , half = size / 2\n    , x = half\n    , y = half\n    , rad = half - 1\n    , fontSize = this._fontSize;\n\n  ctx.font = fontSize + 'px ' + this._font;\n\n  var angle = Math.PI * 2 * (percent / 100);\n  ctx.clearRect(0, 0, size, size);\n\n  // outer circle\n  ctx.strokeStyle = '#9f9f9f';\n  ctx.beginPath();\n  ctx.arc(x, y, rad, 0, angle, false);\n  ctx.stroke();\n\n  // inner circle\n  ctx.strokeStyle = '#eee';\n  ctx.beginPath();\n  ctx.arc(x, y, rad - 1, 0, angle, true);\n  ctx.stroke();\n\n  // text\n  var text = this._text || (percent | 0) + '%'\n    , w = ctx.measureText(text).width;\n\n  ctx.fillText(\n      text\n    , x - w / 2 + 1\n    , y + fontSize / 2 - 1);\n\n  return this;\n};\n\n}); // module: browser/progress.js\n\nrequire.register(\"browser/tty.js\", function(module, exports, require){\n\nexports.isatty = function(){\n  return true;\n};\n\nexports.getWindowSize = function(){\n  return [window.innerHeight, window.innerWidth];\n};\n}); // module: browser/tty.js\n\nrequire.register(\"context.js\", function(module, exports, require){\n\n/**\n * Expose `Context`.\n */\n\nmodule.exports = Context;\n\n/**\n * Initialize a new `Context`.\n *\n * @api private\n */\n\nfunction Context(){}\n\n/**\n * Set or get the context `Runnable` to `runnable`.\n *\n * @param {Runnable} runnable\n * @return {Context}\n * @api private\n */\n\nContext.prototype.runnable = function(runnable){\n  if (0 == arguments.length) return this._runnable;\n  this.test = this._runnable = runnable;\n  return this;\n};\n\n/**\n * Set test timeout `ms`.\n *\n * @param {Number} ms\n * @return {Context} self\n * @api private\n */\n\nContext.prototype.timeout = function(ms){\n  this.runnable().timeout(ms);\n  return this;\n};\n\n/**\n * Set test slowness threshold `ms`.\n *\n * @param {Number} ms\n * @return {Context} self\n * @api private\n */\n\nContext.prototype.slow = function(ms){\n  this.runnable().slow(ms);\n  return this;\n};\n\n/**\n * Inspect the context void of `._runnable`.\n *\n * @return {String}\n * @api private\n */\n\nContext.prototype.inspect = function(){\n  return JSON.stringify(this, function(key, val){\n    if ('_runnable' == key) return;\n    if ('test' == key) return;\n    return val;\n  }, 2);\n};\n\n}); // module: context.js\n\nrequire.register(\"hook.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\n\n/**\n * Expose `Hook`.\n */\n\nmodule.exports = Hook;\n\n/**\n * Initialize a new `Hook` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n */\n\nfunction Hook(title, fn) {\n  Runnable.call(this, title, fn);\n  this.type = 'hook';\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\n\nfunction F(){};\nF.prototype = Runnable.prototype;\nHook.prototype = new F;\nHook.prototype.constructor = Hook;\n\n\n/**\n * Get or set the test `err`.\n *\n * @param {Error} err\n * @return {Error}\n * @api public\n */\n\nHook.prototype.error = function(err){\n  if (0 == arguments.length) {\n    var err = this._error;\n    this._error = null;\n    return err;\n  }\n\n  this._error = err;\n};\n\n}); // module: hook.js\n\nrequire.register(\"interfaces/bdd.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite')\n  , Test = require('../test');\n\n/**\n * BDD-style interface:\n *\n *      describe('Array', function(){\n *        describe('#indexOf()', function(){\n *          it('should return -1 when not present', function(){\n *\n *          });\n *\n *          it('should return the index when present', function(){\n *\n *          });\n *        });\n *      });\n *\n */\n\nmodule.exports = function(suite){\n  var suites = [suite];\n\n  suite.on('pre-require', function(context, file, mocha){\n\n    /**\n     * Execute before running tests.\n     */\n\n    context.before = function(fn){\n      suites[0].beforeAll(fn);\n    };\n\n    /**\n     * Execute after running tests.\n     */\n\n    context.after = function(fn){\n      suites[0].afterAll(fn);\n    };\n\n    /**\n     * Execute before each test case.\n     */\n\n    context.beforeEach = function(fn){\n      suites[0].beforeEach(fn);\n    };\n\n    /**\n     * Execute after each test case.\n     */\n\n    context.afterEach = function(fn){\n      suites[0].afterEach(fn);\n    };\n\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.describe = context.context = function(title, fn){\n      var suite = Suite.create(suites[0], title);\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n      return suite;\n    };\n\n    /**\n     * Pending describe.\n     */\n\n    context.xdescribe =\n    context.xcontext =\n    context.describe.skip = function(title, fn){\n      var suite = Suite.create(suites[0], title);\n      suite.pending = true;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n    };\n\n    /**\n     * Exclusive suite.\n     */\n\n    context.describe.only = function(title, fn){\n      var suite = context.describe(title, fn);\n      mocha.grep(suite.fullTitle());\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.it = context.specify = function(title, fn){\n      var suite = suites[0];\n      if (suite.pending) var fn = null;\n      var test = new Test(title, fn);\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.it.only = function(title, fn){\n      var test = context.it(title, fn);\n      mocha.grep(test.fullTitle());\n    };\n\n    /**\n     * Pending test case.\n     */\n\n    context.xit =\n    context.xspecify =\n    context.it.skip = function(title){\n      context.it(title);\n    };\n  });\n};\n\n}); // module: interfaces/bdd.js\n\nrequire.register(\"interfaces/exports.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite')\n  , Test = require('../test');\n\n/**\n * TDD-style interface:\n *\n *     exports.Array = {\n *       '#indexOf()': {\n *         'should return -1 when the value is not present': function(){\n *\n *         },\n *\n *         'should return the correct index when the value is present': function(){\n *\n *         }\n *       }\n *     };\n *\n */\n\nmodule.exports = function(suite){\n  var suites = [suite];\n\n  suite.on('require', visit);\n\n  function visit(obj) {\n    var suite;\n    for (var key in obj) {\n      if ('function' == typeof obj[key]) {\n        var fn = obj[key];\n        switch (key) {\n          case 'before':\n            suites[0].beforeAll(fn);\n            break;\n          case 'after':\n            suites[0].afterAll(fn);\n            break;\n          case 'beforeEach':\n            suites[0].beforeEach(fn);\n            break;\n          case 'afterEach':\n            suites[0].afterEach(fn);\n            break;\n          default:\n            suites[0].addTest(new Test(key, fn));\n        }\n      } else {\n        var suite = Suite.create(suites[0], key);\n        suites.unshift(suite);\n        visit(obj[key]);\n        suites.shift();\n      }\n    }\n  }\n};\n\n}); // module: interfaces/exports.js\n\nrequire.register(\"interfaces/index.js\", function(module, exports, require){\n\nexports.bdd = require('./bdd');\nexports.tdd = require('./tdd');\nexports.qunit = require('./qunit');\nexports.exports = require('./exports');\n\n}); // module: interfaces/index.js\n\nrequire.register(\"interfaces/qunit.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite')\n  , Test = require('../test');\n\n/**\n * QUnit-style interface:\n *\n *     suite('Array');\n *\n *     test('#length', function(){\n *       var arr = [1,2,3];\n *       ok(arr.length == 3);\n *     });\n *\n *     test('#indexOf()', function(){\n *       var arr = [1,2,3];\n *       ok(arr.indexOf(1) == 0);\n *       ok(arr.indexOf(2) == 1);\n *       ok(arr.indexOf(3) == 2);\n *     });\n *\n *     suite('String');\n *\n *     test('#length', function(){\n *       ok('foo'.length == 3);\n *     });\n *\n */\n\nmodule.exports = function(suite){\n  var suites = [suite];\n\n  suite.on('pre-require', function(context){\n\n    /**\n     * Execute before running tests.\n     */\n\n    context.before = function(fn){\n      suites[0].beforeAll(fn);\n    };\n\n    /**\n     * Execute after running tests.\n     */\n\n    context.after = function(fn){\n      suites[0].afterAll(fn);\n    };\n\n    /**\n     * Execute before each test case.\n     */\n\n    context.beforeEach = function(fn){\n      suites[0].beforeEach(fn);\n    };\n\n    /**\n     * Execute after each test case.\n     */\n\n    context.afterEach = function(fn){\n      suites[0].afterEach(fn);\n    };\n\n    /**\n     * Describe a \"suite\" with the given `title`.\n     */\n\n    context.suite = function(title){\n      if (suites.length > 1) suites.shift();\n      var suite = Suite.create(suites[0], title);\n      suites.unshift(suite);\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.test = function(title, fn){\n      suites[0].addTest(new Test(title, fn));\n    };\n  });\n};\n\n}); // module: interfaces/qunit.js\n\nrequire.register(\"interfaces/tdd.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite')\n  , Test = require('../test');\n\n/**\n * TDD-style interface:\n *\n *      suite('Array', function(){\n *        suite('#indexOf()', function(){\n *          suiteSetup(function(){\n *\n *          });\n *\n *          test('should return -1 when not present', function(){\n *\n *          });\n *\n *          test('should return the index when present', function(){\n *\n *          });\n *\n *          suiteTeardown(function(){\n *\n *          });\n *        });\n *      });\n *\n */\n\nmodule.exports = function(suite){\n  var suites = [suite];\n\n  suite.on('pre-require', function(context, file, mocha){\n\n    /**\n     * Execute before each test case.\n     */\n\n    context.setup = function(fn){\n      suites[0].beforeEach(fn);\n    };\n\n    /**\n     * Execute after each test case.\n     */\n\n    context.teardown = function(fn){\n      suites[0].afterEach(fn);\n    };\n\n    /**\n     * Execute before the suite.\n     */\n\n    context.suiteSetup = function(fn){\n      suites[0].beforeAll(fn);\n    };\n\n    /**\n     * Execute after the suite.\n     */\n\n    context.suiteTeardown = function(fn){\n      suites[0].afterAll(fn);\n    };\n\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.suite = function(title, fn){\n      var suite = Suite.create(suites[0], title);\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n      return suite;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.suite.only = function(title, fn){\n      var suite = context.suite(title, fn);\n      mocha.grep(suite.fullTitle());\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.test = function(title, fn){\n      var test = new Test(title, fn);\n      suites[0].addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.test.only = function(title, fn){\n      var test = context.test(title, fn);\n      mocha.grep(test.fullTitle());\n    };\n\n    /**\n     * Pending test case.\n     */\n\n    context.test.skip = function(title){\n      context.test(title);\n    };\n  });\n};\n\n}); // module: interfaces/tdd.js\n\nrequire.register(\"mocha.js\", function(module, exports, require){\n/*!\n * mocha\n * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar path = require('browser/path')\n  , utils = require('./utils');\n\n/**\n * Expose `Mocha`.\n */\n\nexports = module.exports = Mocha;\n\n/**\n * Expose internals.\n */\n\nexports.utils = utils;\nexports.interfaces = require('./interfaces');\nexports.reporters = require('./reporters');\nexports.Runnable = require('./runnable');\nexports.Context = require('./context');\nexports.Runner = require('./runner');\nexports.Suite = require('./suite');\nexports.Hook = require('./hook');\nexports.Test = require('./test');\n\n/**\n * Return image `name` path.\n *\n * @param {String} name\n * @return {String}\n * @api private\n */\n\nfunction image(name) {\n  return __dirname + '/../images/' + name + '.png';\n}\n\n/**\n * Setup mocha with `options`.\n *\n * Options:\n *\n *   - `ui` name \"bdd\", \"tdd\", \"exports\" etc\n *   - `reporter` reporter instance, defaults to `mocha.reporters.Dot`\n *   - `globals` array of accepted globals\n *   - `timeout` timeout in milliseconds\n *   - `bail` bail on the first test failure\n *   - `slow` milliseconds to wait before considering a test slow\n *   - `ignoreLeaks` ignore global leaks\n *   - `grep` string or regexp to filter tests with\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Mocha(options) {\n  options = options || {};\n  this.files = [];\n  this.options = options;\n  this.grep(options.grep);\n  this.suite = new exports.Suite('', new exports.Context);\n  this.ui(options.ui);\n  this.bail(options.bail);\n  this.reporter(options.reporter);\n  if (options.timeout) this.timeout(options.timeout);\n  if (options.slow) this.slow(options.slow);\n}\n\n/**\n * Enable or disable bailing on the first failure.\n *\n * @param {Boolean} [bail]\n * @api public\n */\n\nMocha.prototype.bail = function(bail){\n  if (0 == arguments.length) bail = true;\n  this.suite.bail(bail);\n  return this;\n};\n\n/**\n * Add test `file`.\n *\n * @param {String} file\n * @api public\n */\n\nMocha.prototype.addFile = function(file){\n  this.files.push(file);\n  return this;\n};\n\n/**\n * Set reporter to `reporter`, defaults to \"dot\".\n *\n * @param {String|Function} reporter name or constructor\n * @api public\n */\n\nMocha.prototype.reporter = function(reporter){\n  if ('function' == typeof reporter) {\n    this._reporter = reporter;\n  } else {\n    reporter = reporter || 'dot';\n    try {\n      this._reporter = require('./reporters/' + reporter);\n    } catch (err) {\n      this._reporter = require(reporter);\n    }\n    if (!this._reporter) throw new Error('invalid reporter \"' + reporter + '\"');\n  }\n  return this;\n};\n\n/**\n * Set test UI `name`, defaults to \"bdd\".\n *\n * @param {String} bdd\n * @api public\n */\n\nMocha.prototype.ui = function(name){\n  name = name || 'bdd';\n  this._ui = exports.interfaces[name];\n  if (!this._ui) throw new Error('invalid interface \"' + name + '\"');\n  this._ui = this._ui(this.suite);\n  return this;\n};\n\n/**\n * Load registered files.\n *\n * @api private\n */\n\nMocha.prototype.loadFiles = function(fn){\n  var self = this;\n  var suite = this.suite;\n  var pending = this.files.length;\n  this.files.forEach(function(file){\n    file = path.resolve(file);\n    suite.emit('pre-require', global, file, self);\n    suite.emit('require', require(file), file, self);\n    suite.emit('post-require', global, file, self);\n    --pending || (fn && fn());\n  });\n};\n\n/**\n * Enable growl support.\n *\n * @api private\n */\n\nMocha.prototype._growl = function(runner, reporter) {\n  var notify = require('growl');\n\n  runner.on('end', function(){\n    var stats = reporter.stats;\n    if (stats.failures) {\n      var msg = stats.failures + ' of ' + runner.total + ' tests failed';\n      notify(msg, { name: 'mocha', title: 'Failed', image: image('error') });\n    } else {\n      notify(stats.passes + ' tests passed in ' + stats.duration + 'ms', {\n          name: 'mocha'\n        , title: 'Passed'\n        , image: image('ok')\n      });\n    }\n  });\n};\n\n/**\n * Add regexp to grep, if `re` is a string it is escaped.\n *\n * @param {RegExp|String} re\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.grep = function(re){\n  this.options.grep = 'string' == typeof re\n    ? new RegExp(utils.escapeRegexp(re))\n    : re;\n  return this;\n};\n\n/**\n * Invert `.grep()` matches.\n *\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.invert = function(){\n  this.options.invert = true;\n  return this;\n};\n\n/**\n * Ignore global leaks.\n *\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.ignoreLeaks = function(){\n  this.options.ignoreLeaks = true;\n  return this;\n};\n\n/**\n * Enable global leak checking.\n *\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.checkLeaks = function(){\n  this.options.ignoreLeaks = false;\n  return this;\n};\n\n/**\n * Enable growl support.\n *\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.growl = function(){\n  this.options.growl = true;\n  return this;\n};\n\n/**\n * Ignore `globals` array or string.\n *\n * @param {Array|String} globals\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.globals = function(globals){\n  this.options.globals = (this.options.globals || []).concat(globals);\n  return this;\n};\n\n/**\n * Set the timeout in milliseconds.\n *\n * @param {Number} timeout\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.timeout = function(timeout){\n  this.suite.timeout(timeout);\n  return this;\n};\n\n/**\n * Set slowness threshold in milliseconds.\n *\n * @param {Number} slow\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.slow = function(slow){\n  this.suite.slow(slow);\n  return this;\n};\n\n/**\n * Makes all tests async (accepting a callback)\n *\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.asyncOnly = function(){\n  this.options.asyncOnly = true;\n  return this;\n};\n\n/**\n * Run tests and invoke `fn()` when complete.\n *\n * @param {Function} fn\n * @return {Runner}\n * @api public\n */\n\nMocha.prototype.run = function(fn){\n  if (this.files.length) this.loadFiles();\n  var suite = this.suite;\n  var options = this.options;\n  var runner = new exports.Runner(suite);\n  var reporter = new this._reporter(runner);\n  runner.ignoreLeaks = false !== options.ignoreLeaks;\n  runner.asyncOnly = options.asyncOnly;\n  if (options.grep) runner.grep(options.grep, options.invert);\n  if (options.globals) runner.globals(options.globals);\n  if (options.growl) this._growl(runner, reporter);\n  return runner.run(fn);\n};\n\n}); // module: mocha.js\n\nrequire.register(\"ms.js\", function(module, exports, require){\n\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\n\n/**\n * Parse or format the given `val`.\n *\n * @param {String|Number} val\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val){\n  if ('string' == typeof val) return parse(val);\n  return format(val);\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  var m = /^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);\n  if (!m) return;\n  var n = parseFloat(m[1]);\n  var type = (m[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * 31557600000;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * 86400000;\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * 3600000;\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * 60000;\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * 1000;\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Format the given `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api public\n */\n\nfunction format(ms) {\n  if (ms == d) return Math.round(ms / d) + ' day';\n  if (ms > d) return Math.round(ms / d) + ' days';\n  if (ms == h) return Math.round(ms / h) + ' hour';\n  if (ms > h) return Math.round(ms / h) + ' hours';\n  if (ms == m) return Math.round(ms / m) + ' minute';\n  if (ms > m) return Math.round(ms / m) + ' minutes';\n  if (ms == s) return Math.round(ms / s) + ' second';\n  if (ms > s) return Math.round(ms / s) + ' seconds';\n  return ms + ' ms';\n}\n}); // module: ms.js\n\nrequire.register(\"reporters/base.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar tty = require('browser/tty')\n  , diff = require('browser/diff')\n  , ms = require('../ms');\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\nvar Date = global.Date\n  , setTimeout = global.setTimeout\n  , setInterval = global.setInterval\n  , clearTimeout = global.clearTimeout\n  , clearInterval = global.clearInterval;\n\n/**\n * Check if both stdio streams are associated with a tty.\n */\n\nvar isatty = tty.isatty(1) && tty.isatty(2);\n\n/**\n * Expose `Base`.\n */\n\nexports = module.exports = Base;\n\n/**\n * Enable coloring by default.\n */\n\nexports.useColors = isatty;\n\n/**\n * Default color map.\n */\n\nexports.colors = {\n    'pass': 90\n  , 'fail': 31\n  , 'bright pass': 92\n  , 'bright fail': 91\n  , 'bright yellow': 93\n  , 'pending': 36\n  , 'suite': 0\n  , 'error title': 0\n  , 'error message': 31\n  , 'error stack': 90\n  , 'checkmark': 32\n  , 'fast': 90\n  , 'medium': 33\n  , 'slow': 31\n  , 'green': 32\n  , 'light': 90\n  , 'diff gutter': 90\n  , 'diff added': 42\n  , 'diff removed': 41\n};\n\n/**\n * Default symbol map.\n */\n\nexports.symbols = {\n  ok: '✓',\n  err: '✖',\n  dot: '․'\n};\n\n// With node.js on Windows: use symbols available in terminal default fonts\nif ('win32' == process.platform) {\n  exports.symbols.ok = '\\u221A';\n  exports.symbols.err = '\\u00D7';\n  exports.symbols.dot = '.';\n}\n\n/**\n * Color `str` with the given `type`,\n * allowing colors to be disabled,\n * as well as user-defined color\n * schemes.\n *\n * @param {String} type\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nvar color = exports.color = function(type, str) {\n  if (!exports.useColors) return str;\n  return '\\u001b[' + exports.colors[type] + 'm' + str + '\\u001b[0m';\n};\n\n/**\n * Expose term window size, with some\n * defaults for when stderr is not a tty.\n */\n\nexports.window = {\n  width: isatty\n    ? process.stdout.getWindowSize\n      ? process.stdout.getWindowSize(1)[0]\n      : tty.getWindowSize()[1]\n    : 75\n};\n\n/**\n * Expose some basic cursor interactions\n * that are common among reporters.\n */\n\nexports.cursor = {\n  hide: function(){\n    process.stdout.write('\\u001b[?25l');\n  },\n\n  show: function(){\n    process.stdout.write('\\u001b[?25h');\n  },\n\n  deleteLine: function(){\n    process.stdout.write('\\u001b[2K');\n  },\n\n  beginningOfLine: function(){\n    process.stdout.write('\\u001b[0G');\n  },\n\n  CR: function(){\n    exports.cursor.deleteLine();\n    exports.cursor.beginningOfLine();\n  }\n};\n\n/**\n * Outut the given `failures` as a list.\n *\n * @param {Array} failures\n * @api public\n */\n\nexports.list = function(failures){\n  console.error();\n  failures.forEach(function(test, i){\n    // format\n    var fmt = color('error title', '  %s) %s:\\n')\n      + color('error message', '     %s')\n      + color('error stack', '\\n%s\\n');\n\n    // msg\n    var err = test.err\n      , message = err.message || ''\n      , stack = err.stack || message\n      , index = stack.indexOf(message) + message.length\n      , msg = stack.slice(0, index)\n      , actual = err.actual\n      , expected = err.expected\n      , escape = true;\n\n    // explicitly show diff\n    if (err.showDiff) {\n      escape = false;\n      err.actual = actual = JSON.stringify(actual, null, 2);\n      err.expected = expected = JSON.stringify(expected, null, 2);\n    }\n\n    // actual / expected diff\n    if ('string' == typeof actual && 'string' == typeof expected) {\n      var len = Math.max(actual.length, expected.length);\n\n      if (len < 20) msg = errorDiff(err, 'Chars', escape);\n      else msg = errorDiff(err, 'Words', escape);\n\n      // linenos\n      var lines = msg.split('\\n');\n      if (lines.length > 4) {\n        var width = String(lines.length).length;\n        msg = lines.map(function(str, i){\n          return pad(++i, width) + ' |' + ' ' + str;\n        }).join('\\n');\n      }\n\n      // legend\n      msg = '\\n'\n        + color('diff removed', 'actual')\n        + ' '\n        + color('diff added', 'expected')\n        + '\\n\\n'\n        + msg\n        + '\\n';\n\n      // indent\n      msg = msg.replace(/^/gm, '      ');\n\n      fmt = color('error title', '  %s) %s:\\n%s')\n        + color('error stack', '\\n%s\\n');\n    }\n\n    // indent stack trace without msg\n    stack = stack.slice(index ? index + 1 : index)\n      .replace(/^/gm, '  ');\n\n    console.error(fmt, (i + 1), test.fullTitle(), msg, stack);\n  });\n};\n\n/**\n * Initialize a new `Base` reporter.\n *\n * All other reporters generally\n * inherit from this reporter, providing\n * stats such as test duration, number\n * of tests passed / failed etc.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Base(runner) {\n  var self = this\n    , stats = this.stats = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 }\n    , failures = this.failures = [];\n\n  if (!runner) return;\n  this.runner = runner;\n\n  runner.stats = stats;\n\n  runner.on('start', function(){\n    stats.start = new Date;\n  });\n\n  runner.on('suite', function(suite){\n    stats.suites = stats.suites || 0;\n    suite.root || stats.suites++;\n  });\n\n  runner.on('test end', function(test){\n    stats.tests = stats.tests || 0;\n    stats.tests++;\n  });\n\n  runner.on('pass', function(test){\n    stats.passes = stats.passes || 0;\n\n    var medium = test.slow() / 2;\n    test.speed = test.duration > test.slow()\n      ? 'slow'\n      : test.duration > medium\n        ? 'medium'\n        : 'fast';\n\n    stats.passes++;\n  });\n\n  runner.on('fail', function(test, err){\n    stats.failures = stats.failures || 0;\n    stats.failures++;\n    test.err = err;\n    failures.push(test);\n  });\n\n  runner.on('end', function(){\n    stats.end = new Date;\n    stats.duration = new Date - stats.start;\n  });\n\n  runner.on('pending', function(){\n    stats.pending++;\n  });\n}\n\n/**\n * Output common epilogue used by many of\n * the bundled reporters.\n *\n * @api public\n */\n\nBase.prototype.epilogue = function(){\n  var stats = this.stats\n    , fmt\n    , tests;\n\n  console.log();\n\n  function pluralize(n) {\n    return 1 == n ? 'test' : 'tests';\n  }\n\n  // failure\n  if (stats.failures) {\n    fmt = color('bright fail', '  ' + exports.symbols.err)\n      + color('fail', ' %d of %d %s failed')\n      + color('light', ':')\n\n    console.error(fmt,\n      stats.failures,\n      this.runner.total,\n      pluralize(this.runner.total));\n\n    Base.list(this.failures);\n    console.error();\n    return;\n  }\n\n  // pass\n  fmt = color('bright pass', ' ')\n    + color('green', ' %d %s complete')\n    + color('light', ' (%s)');\n\n  console.log(fmt,\n    stats.tests || 0,\n    pluralize(stats.tests),\n    ms(stats.duration));\n\n  // pending\n  if (stats.pending) {\n    fmt = color('pending', ' ')\n      + color('pending', ' %d %s pending');\n\n    console.log(fmt, stats.pending, pluralize(stats.pending));\n  }\n\n  console.log();\n};\n\n/**\n * Pad the given `str` to `len`.\n *\n * @param {String} str\n * @param {String} len\n * @return {String}\n * @api private\n */\n\nfunction pad(str, len) {\n  str = String(str);\n  return Array(len - str.length + 1).join(' ') + str;\n}\n\n/**\n * Return a character diff for `err`.\n *\n * @param {Error} err\n * @return {String}\n * @api private\n */\n\nfunction errorDiff(err, type, escape) {\n  return diff['diff' + type](err.actual, err.expected).map(function(str){\n    if (escape) {\n      str.value = str.value\n        .replace(/\\t/g, '<tab>')\n        .replace(/\\r/g, '<CR>')\n        .replace(/\\n/g, '<LF>\\n');\n    }\n    if (str.added) return colorLines('diff added', str.value);\n    if (str.removed) return colorLines('diff removed', str.value);\n    return str.value;\n  }).join('');\n}\n\n/**\n * Color lines for `str`, using the color `name`.\n *\n * @param {String} name\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction colorLines(name, str) {\n  return str.split('\\n').map(function(str){\n    return color(name, str);\n  }).join('\\n');\n}\n\n}); // module: reporters/base.js\n\nrequire.register(\"reporters/doc.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , utils = require('../utils');\n\n/**\n * Expose `Doc`.\n */\n\nexports = module.exports = Doc;\n\n/**\n * Initialize a new `Doc` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Doc(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , total = runner.total\n    , indents = 2;\n\n  function indent() {\n    return Array(indents).join('  ');\n  }\n\n  runner.on('suite', function(suite){\n    if (suite.root) return;\n    ++indents;\n    console.log('%s<section class=\"suite\">', indent());\n    ++indents;\n    console.log('%s<h1>%s</h1>', indent(), utils.escape(suite.title));\n    console.log('%s<dl>', indent());\n  });\n\n  runner.on('suite end', function(suite){\n    if (suite.root) return;\n    console.log('%s</dl>', indent());\n    --indents;\n    console.log('%s</section>', indent());\n    --indents;\n  });\n\n  runner.on('pass', function(test){\n    console.log('%s  <dt>%s</dt>', indent(), utils.escape(test.title));\n    var code = utils.escape(utils.clean(test.fn.toString()));\n    console.log('%s  <dd><pre><code>%s</code></pre></dd>', indent(), code);\n  });\n}\n\n}); // module: reporters/doc.js\n\nrequire.register(\"reporters/dot.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , color = Base.color;\n\n/**\n * Expose `Dot`.\n */\n\nexports = module.exports = Dot;\n\n/**\n * Initialize a new `Dot` matrix test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Dot(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , width = Base.window.width * .75 | 0\n    , n = 0;\n\n  runner.on('start', function(){\n    process.stdout.write('\\n  ');\n  });\n\n  runner.on('pending', function(test){\n    process.stdout.write(color('pending', Base.symbols.dot));\n  });\n\n  runner.on('pass', function(test){\n    if (++n % width == 0) process.stdout.write('\\n  ');\n    if ('slow' == test.speed) {\n      process.stdout.write(color('bright yellow', Base.symbols.dot));\n    } else {\n      process.stdout.write(color(test.speed, Base.symbols.dot));\n    }\n  });\n\n  runner.on('fail', function(test, err){\n    if (++n % width == 0) process.stdout.write('\\n  ');\n    process.stdout.write(color('fail', Base.symbols.dot));\n  });\n\n  runner.on('end', function(){\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nDot.prototype = new F;\nDot.prototype.constructor = Dot;\n\n}); // module: reporters/dot.js\n\nrequire.register(\"reporters/html-cov.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar JSONCov = require('./json-cov')\n  , fs = require('browser/fs');\n\n/**\n * Expose `HTMLCov`.\n */\n\nexports = module.exports = HTMLCov;\n\n/**\n * Initialize a new `JsCoverage` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction HTMLCov(runner) {\n  var jade = require('jade')\n    , file = __dirname + '/templates/coverage.jade'\n    , str = fs.readFileSync(file, 'utf8')\n    , fn = jade.compile(str, { filename: file })\n    , self = this;\n\n  JSONCov.call(this, runner, false);\n\n  runner.on('end', function(){\n    process.stdout.write(fn({\n        cov: self.cov\n      , coverageClass: coverageClass\n    }));\n  });\n}\n\n/**\n * Return coverage class for `n`.\n *\n * @return {String}\n * @api private\n */\n\nfunction coverageClass(n) {\n  if (n >= 75) return 'high';\n  if (n >= 50) return 'medium';\n  if (n >= 25) return 'low';\n  return 'terrible';\n}\n}); // module: reporters/html-cov.js\n\nrequire.register(\"reporters/html.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , utils = require('../utils')\n  , Progress = require('../browser/progress')\n  , escape = utils.escape;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\nvar Date = global.Date\n  , setTimeout = global.setTimeout\n  , setInterval = global.setInterval\n  , clearTimeout = global.clearTimeout\n  , clearInterval = global.clearInterval;\n\n/**\n * Expose `Doc`.\n */\n\nexports = module.exports = HTML;\n\n/**\n * Stats template.\n */\n\nvar statsTemplate = '<ul id=\"mocha-stats\">'\n  + '<li class=\"progress\"><canvas width=\"40\" height=\"40\"></canvas></li>'\n  + '<li class=\"passes\"><a href=\"#\">passes:</a> <em>0</em></li>'\n  + '<li class=\"failures\"><a href=\"#\">failures:</a> <em>0</em></li>'\n  + '<li class=\"duration\">duration: <em>0</em>s</li>'\n  + '</ul>';\n\n/**\n * Initialize a new `Doc` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction HTML(runner, root) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , total = runner.total\n    , stat = fragment(statsTemplate)\n    , items = stat.getElementsByTagName('li')\n    , passes = items[1].getElementsByTagName('em')[0]\n    , passesLink = items[1].getElementsByTagName('a')[0]\n    , failures = items[2].getElementsByTagName('em')[0]\n    , failuresLink = items[2].getElementsByTagName('a')[0]\n    , duration = items[3].getElementsByTagName('em')[0]\n    , canvas = stat.getElementsByTagName('canvas')[0]\n    , report = fragment('<ul id=\"mocha-report\"></ul>')\n    , stack = [report]\n    , progress\n    , ctx\n\n  root = root || document.getElementById('mocha');\n\n  if (canvas.getContext) {\n    var ratio = window.devicePixelRatio || 1;\n    canvas.style.width = canvas.width;\n    canvas.style.height = canvas.height;\n    canvas.width *= ratio;\n    canvas.height *= ratio;\n    ctx = canvas.getContext('2d');\n    ctx.scale(ratio, ratio);\n    progress = new Progress;\n  }\n\n  if (!root) return error('#mocha div missing, add it to your document');\n\n  // pass toggle\n  on(passesLink, 'click', function(){\n    unhide();\n    var name = /pass/.test(report.className) ? '' : ' pass';\n    report.className = report.className.replace(/fail|pass/g, '') + name;\n    if (report.className.trim()) hideSuitesWithout('test pass');\n  });\n\n  // failure toggle\n  on(failuresLink, 'click', function(){\n    unhide();\n    var name = /fail/.test(report.className) ? '' : ' fail';\n    report.className = report.className.replace(/fail|pass/g, '') + name;\n    if (report.className.trim()) hideSuitesWithout('test fail');\n  });\n\n  root.appendChild(stat);\n  root.appendChild(report);\n\n  if (progress) progress.size(40);\n\n  runner.on('suite', function(suite){\n    if (suite.root) return;\n\n    // suite\n    var url = '?grep=' + encodeURIComponent(suite.fullTitle());\n    var el = fragment('<li class=\"suite\"><h1><a href=\"%s\">%s</a></h1></li>', url, escape(suite.title));\n\n    // container\n    stack[0].appendChild(el);\n    stack.unshift(document.createElement('ul'));\n    el.appendChild(stack[0]);\n  });\n\n  runner.on('suite end', function(suite){\n    if (suite.root) return;\n    stack.shift();\n  });\n\n  runner.on('fail', function(test, err){\n    if ('hook' == test.type) runner.emit('test end', test);\n  });\n\n  runner.on('test end', function(test){\n    // TODO: add to stats\n    var percent = stats.tests / this.total * 100 | 0;\n    if (progress) progress.update(percent).draw(ctx);\n\n    // update stats\n    var ms = new Date - stats.start;\n    text(passes, stats.passes);\n    text(failures, stats.failures);\n    text(duration, (ms / 1000).toFixed(2));\n\n    // test\n    if ('passed' == test.state) {\n      var el = fragment('<li class=\"test pass %e\"><h2>%e<span class=\"duration\">%ems</span> <a href=\"?grep=%e\" class=\"replay\">‣</a></h2></li>', test.speed, test.title, test.duration, encodeURIComponent(test.fullTitle()));\n    } else if (test.pending) {\n      var el = fragment('<li class=\"test pass pending\"><h2>%e</h2></li>', test.title);\n    } else {\n      var el = fragment('<li class=\"test fail\"><h2>%e <a href=\"?grep=%e\" class=\"replay\">‣</a></h2></li>', test.title, encodeURIComponent(test.fullTitle()));\n      var str = test.err.stack || test.err.toString();\n\n      // FF / Opera do not add the message\n      if (!~str.indexOf(test.err.message)) {\n        str = test.err.message + '\\n' + str;\n      }\n\n      // <=IE7 stringifies to [Object Error]. Since it can be overloaded, we\n      // check for the result of the stringifying.\n      if ('[object Error]' == str) str = test.err.message;\n\n      // Safari doesn't give you a stack. Let's at least provide a source line.\n      if (!test.err.stack && test.err.sourceURL && test.err.line !== undefined) {\n        str += \"\\n(\" + test.err.sourceURL + \":\" + test.err.line + \")\";\n      }\n\n      el.appendChild(fragment('<pre class=\"error\">%e</pre>', str));\n    }\n\n    // toggle code\n    // TODO: defer\n    if (!test.pending) {\n      var h2 = el.getElementsByTagName('h2')[0];\n\n      on(h2, 'click', function(){\n        pre.style.display = 'none' == pre.style.display\n          ? 'block'\n          : 'none';\n      });\n\n      var pre = fragment('<pre><code>%e</code></pre>', utils.clean(test.fn.toString()));\n      el.appendChild(pre);\n      pre.style.display = 'none';\n    }\n\n    // Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.\n    if (stack[0]) stack[0].appendChild(el);\n  });\n}\n\n/**\n * Display error `msg`.\n */\n\nfunction error(msg) {\n  document.body.appendChild(fragment('<div id=\"mocha-error\">%s</div>', msg));\n}\n\n/**\n * Return a DOM fragment from `html`.\n */\n\nfunction fragment(html) {\n  var args = arguments\n    , div = document.createElement('div')\n    , i = 1;\n\n  div.innerHTML = html.replace(/%([se])/g, function(_, type){\n    switch (type) {\n      case 's': return String(args[i++]);\n      case 'e': return escape(args[i++]);\n    }\n  });\n\n  return div.firstChild;\n}\n\n/**\n * Check for suites that do not have elements\n * with `classname`, and hide them.\n */\n\nfunction hideSuitesWithout(classname) {\n  var suites = document.getElementsByClassName('suite');\n  for (var i = 0; i < suites.length; i++) {\n    var els = suites[i].getElementsByClassName(classname);\n    if (0 == els.length) suites[i].className += ' hidden';\n  }\n}\n\n/**\n * Unhide .hidden suites.\n */\n\nfunction unhide() {\n  var els = document.getElementsByClassName('suite hidden');\n  for (var i = 0; i < els.length; ++i) {\n    els[i].className = els[i].className.replace('suite hidden', 'suite');\n  }\n}\n\n/**\n * Set `el` text to `str`.\n */\n\nfunction text(el, str) {\n  if (el.textContent) {\n    el.textContent = str;\n  } else {\n    el.innerText = str;\n  }\n}\n\n/**\n * Listen on `event` with callback `fn`.\n */\n\nfunction on(el, event, fn) {\n  if (el.addEventListener) {\n    el.addEventListener(event, fn, false);\n  } else {\n    el.attachEvent('on' + event, fn);\n  }\n}\n\n}); // module: reporters/html.js\n\nrequire.register(\"reporters/index.js\", function(module, exports, require){\n\nexports.Base = require('./base');\nexports.Dot = require('./dot');\nexports.Doc = require('./doc');\nexports.TAP = require('./tap');\nexports.JSON = require('./json');\nexports.HTML = require('./html');\nexports.List = require('./list');\nexports.Min = require('./min');\nexports.Spec = require('./spec');\nexports.Nyan = require('./nyan');\nexports.XUnit = require('./xunit');\nexports.Markdown = require('./markdown');\nexports.Progress = require('./progress');\nexports.Landing = require('./landing');\nexports.JSONCov = require('./json-cov');\nexports.HTMLCov = require('./html-cov');\nexports.JSONStream = require('./json-stream');\nexports.Teamcity = require('./teamcity');\n\n}); // module: reporters/index.js\n\nrequire.register(\"reporters/json-cov.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `JSONCov`.\n */\n\nexports = module.exports = JSONCov;\n\n/**\n * Initialize a new `JsCoverage` reporter.\n *\n * @param {Runner} runner\n * @param {Boolean} output\n * @api public\n */\n\nfunction JSONCov(runner, output) {\n  var self = this\n    , output = 1 == arguments.length ? true : output;\n\n  Base.call(this, runner);\n\n  var tests = []\n    , failures = []\n    , passes = [];\n\n  runner.on('test end', function(test){\n    tests.push(test);\n  });\n\n  runner.on('pass', function(test){\n    passes.push(test);\n  });\n\n  runner.on('fail', function(test){\n    failures.push(test);\n  });\n\n  runner.on('end', function(){\n    var cov = global._$jscoverage || {};\n    var result = self.cov = map(cov);\n    result.stats = self.stats;\n    result.tests = tests.map(clean);\n    result.failures = failures.map(clean);\n    result.passes = passes.map(clean);\n    if (!output) return;\n    process.stdout.write(JSON.stringify(result, null, 2 ));\n  });\n}\n\n/**\n * Map jscoverage data to a JSON structure\n * suitable for reporting.\n *\n * @param {Object} cov\n * @return {Object}\n * @api private\n */\n\nfunction map(cov) {\n  var ret = {\n      instrumentation: 'node-jscoverage'\n    , sloc: 0\n    , hits: 0\n    , misses: 0\n    , coverage: 0\n    , files: []\n  };\n\n  for (var filename in cov) {\n    var data = coverage(filename, cov[filename]);\n    ret.files.push(data);\n    ret.hits += data.hits;\n    ret.misses += data.misses;\n    ret.sloc += data.sloc;\n  }\n\n  ret.files.sort(function(a, b) {\n    return a.filename.localeCompare(b.filename);\n  });\n\n  if (ret.sloc > 0) {\n    ret.coverage = (ret.hits / ret.sloc) * 100;\n  }\n\n  return ret;\n};\n\n/**\n * Map jscoverage data for a single source file\n * to a JSON structure suitable for reporting.\n *\n * @param {String} filename name of the source file\n * @param {Object} data jscoverage coverage data\n * @return {Object}\n * @api private\n */\n\nfunction coverage(filename, data) {\n  var ret = {\n    filename: filename,\n    coverage: 0,\n    hits: 0,\n    misses: 0,\n    sloc: 0,\n    source: {}\n  };\n\n  data.source.forEach(function(line, num){\n    num++;\n\n    if (data[num] === 0) {\n      ret.misses++;\n      ret.sloc++;\n    } else if (data[num] !== undefined) {\n      ret.hits++;\n      ret.sloc++;\n    }\n\n    ret.source[num] = {\n        source: line\n      , coverage: data[num] === undefined\n        ? ''\n        : data[num]\n    };\n  });\n\n  ret.coverage = ret.hits / ret.sloc * 100;\n\n  return ret;\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @param {Object} test\n * @return {Object}\n * @api private\n */\n\nfunction clean(test) {\n  return {\n      title: test.title\n    , fullTitle: test.fullTitle()\n    , duration: test.duration\n  }\n}\n\n}); // module: reporters/json-cov.js\n\nrequire.register(\"reporters/json-stream.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , color = Base.color;\n\n/**\n * Expose `List`.\n */\n\nexports = module.exports = List;\n\n/**\n * Initialize a new `List` test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction List(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , total = runner.total;\n\n  runner.on('start', function(){\n    console.log(JSON.stringify(['start', { total: total }]));\n  });\n\n  runner.on('pass', function(test){\n    console.log(JSON.stringify(['pass', clean(test)]));\n  });\n\n  runner.on('fail', function(test, err){\n    console.log(JSON.stringify(['fail', clean(test)]));\n  });\n\n  runner.on('end', function(){\n    process.stdout.write(JSON.stringify(['end', self.stats]));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @param {Object} test\n * @return {Object}\n * @api private\n */\n\nfunction clean(test) {\n  return {\n      title: test.title\n    , fullTitle: test.fullTitle()\n    , duration: test.duration\n  }\n}\n}); // module: reporters/json-stream.js\n\nrequire.register(\"reporters/json.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n\n/**\n * Initialize a new `JSON` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction JSONReporter(runner) {\n  var self = this;\n  Base.call(this, runner);\n\n  var tests = []\n    , failures = []\n    , passes = [];\n\n  runner.on('test end', function(test){\n    tests.push(test);\n  });\n\n  runner.on('pass', function(test){\n    passes.push(test);\n  });\n\n  runner.on('fail', function(test){\n    failures.push(test);\n  });\n\n  runner.on('end', function(){\n    var obj = {\n        stats: self.stats\n      , tests: tests.map(clean)\n      , failures: failures.map(clean)\n      , passes: passes.map(clean)\n    };\n\n    process.stdout.write(JSON.stringify(obj, null, 2));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @param {Object} test\n * @return {Object}\n * @api private\n */\n\nfunction clean(test) {\n  return {\n      title: test.title\n    , fullTitle: test.fullTitle()\n    , duration: test.duration\n  }\n}\n}); // module: reporters/json.js\n\nrequire.register(\"reporters/landing.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `Landing`.\n */\n\nexports = module.exports = Landing;\n\n/**\n * Airplane color.\n */\n\nBase.colors.plane = 0;\n\n/**\n * Airplane crash color.\n */\n\nBase.colors['plane crash'] = 31;\n\n/**\n * Runway color.\n */\n\nBase.colors.runway = 90;\n\n/**\n * Initialize a new `Landing` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Landing(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , width = Base.window.width * .75 | 0\n    , total = runner.total\n    , stream = process.stdout\n    , plane = color('plane', '✈')\n    , crashed = -1\n    , n = 0;\n\n  function runway() {\n    var buf = Array(width).join('-');\n    return '  ' + color('runway', buf);\n  }\n\n  runner.on('start', function(){\n    stream.write('\\n  ');\n    cursor.hide();\n  });\n\n  runner.on('test end', function(test){\n    // check if the plane crashed\n    var col = -1 == crashed\n      ? width * ++n / total | 0\n      : crashed;\n\n    // show the crash\n    if ('failed' == test.state) {\n      plane = color('plane crash', '✈');\n      crashed = col;\n    }\n\n    // render landing strip\n    stream.write('\\u001b[4F\\n\\n');\n    stream.write(runway());\n    stream.write('\\n  ');\n    stream.write(color('runway', Array(col).join('⋅')));\n    stream.write(plane)\n    stream.write(color('runway', Array(width - col).join('⋅') + '\\n'));\n    stream.write(runway());\n    stream.write('\\u001b[0m');\n  });\n\n  runner.on('end', function(){\n    cursor.show();\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nLanding.prototype = new F;\nLanding.prototype.constructor = Landing;\n\n}); // module: reporters/landing.js\n\nrequire.register(\"reporters/list.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `List`.\n */\n\nexports = module.exports = List;\n\n/**\n * Initialize a new `List` test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction List(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , n = 0;\n\n  runner.on('start', function(){\n    console.log();\n  });\n\n  runner.on('test', function(test){\n    process.stdout.write(color('pass', '    ' + test.fullTitle() + ': '));\n  });\n\n  runner.on('pending', function(test){\n    var fmt = color('checkmark', '  -')\n      + color('pending', ' %s');\n    console.log(fmt, test.fullTitle());\n  });\n\n  runner.on('pass', function(test){\n    var fmt = color('checkmark', '  '+Base.symbols.dot)\n      + color('pass', ' %s: ')\n      + color(test.speed, '%dms');\n    cursor.CR();\n    console.log(fmt, test.fullTitle(), test.duration);\n  });\n\n  runner.on('fail', function(test, err){\n    cursor.CR();\n    console.log(color('fail', '  %d) %s'), ++n, test.fullTitle());\n  });\n\n  runner.on('end', self.epilogue.bind(self));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nList.prototype = new F;\nList.prototype.constructor = List;\n\n\n}); // module: reporters/list.js\n\nrequire.register(\"reporters/markdown.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , utils = require('../utils');\n\n/**\n * Expose `Markdown`.\n */\n\nexports = module.exports = Markdown;\n\n/**\n * Initialize a new `Markdown` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Markdown(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , level = 0\n    , buf = '';\n\n  function title(str) {\n    return Array(level).join('#') + ' ' + str;\n  }\n\n  function indent() {\n    return Array(level).join('  ');\n  }\n\n  function mapTOC(suite, obj) {\n    var ret = obj;\n    obj = obj[suite.title] = obj[suite.title] || { suite: suite };\n    suite.suites.forEach(function(suite){\n      mapTOC(suite, obj);\n    });\n    return ret;\n  }\n\n  function stringifyTOC(obj, level) {\n    ++level;\n    var buf = '';\n    var link;\n    for (var key in obj) {\n      if ('suite' == key) continue;\n      if (key) link = ' - [' + key + '](#' + utils.slug(obj[key].suite.fullTitle()) + ')\\n';\n      if (key) buf += Array(level).join('  ') + link;\n      buf += stringifyTOC(obj[key], level);\n    }\n    --level;\n    return buf;\n  }\n\n  function generateTOC(suite) {\n    var obj = mapTOC(suite, {});\n    return stringifyTOC(obj, 0);\n  }\n\n  generateTOC(runner.suite);\n\n  runner.on('suite', function(suite){\n    ++level;\n    var slug = utils.slug(suite.fullTitle());\n    buf += '<a name=\"' + slug + '\"></a>' + '\\n';\n    buf += title(suite.title) + '\\n';\n  });\n\n  runner.on('suite end', function(suite){\n    --level;\n  });\n\n  runner.on('pass', function(test){\n    var code = utils.clean(test.fn.toString());\n    buf += test.title + '.\\n';\n    buf += '\\n```js\\n';\n    buf += code + '\\n';\n    buf += '```\\n\\n';\n  });\n\n  runner.on('end', function(){\n    process.stdout.write('# TOC\\n');\n    process.stdout.write(generateTOC(runner.suite));\n    process.stdout.write(buf);\n  });\n}\n}); // module: reporters/markdown.js\n\nrequire.register(\"reporters/min.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `Min`.\n */\n\nexports = module.exports = Min;\n\n/**\n * Initialize a new `Min` minimal test reporter (best used with --watch).\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Min(runner) {\n  Base.call(this, runner);\n\n  runner.on('start', function(){\n    // clear screen\n    process.stdout.write('\\u001b[2J');\n    // set cursor position\n    process.stdout.write('\\u001b[1;3H');\n  });\n\n  runner.on('end', this.epilogue.bind(this));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nMin.prototype = new F;\nMin.prototype.constructor = Min;\n\n\n}); // module: reporters/min.js\n\nrequire.register(\"reporters/nyan.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , color = Base.color;\n\n/**\n * Expose `Dot`.\n */\n\nexports = module.exports = NyanCat;\n\n/**\n * Initialize a new `Dot` matrix test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction NyanCat(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , width = Base.window.width * .75 | 0\n    , rainbowColors = this.rainbowColors = self.generateColors()\n    , colorIndex = this.colorIndex = 0\n    , numerOfLines = this.numberOfLines = 4\n    , trajectories = this.trajectories = [[], [], [], []]\n    , nyanCatWidth = this.nyanCatWidth = 11\n    , trajectoryWidthMax = this.trajectoryWidthMax = (width - nyanCatWidth)\n    , scoreboardWidth = this.scoreboardWidth = 5\n    , tick = this.tick = 0\n    , n = 0;\n\n  runner.on('start', function(){\n    Base.cursor.hide();\n    self.draw('start');\n  });\n\n  runner.on('pending', function(test){\n    self.draw('pending');\n  });\n\n  runner.on('pass', function(test){\n    self.draw('pass');\n  });\n\n  runner.on('fail', function(test, err){\n    self.draw('fail');\n  });\n\n  runner.on('end', function(){\n    Base.cursor.show();\n    for (var i = 0; i < self.numberOfLines; i++) write('\\n');\n    self.epilogue();\n  });\n}\n\n/**\n * Draw the nyan cat with runner `status`.\n *\n * @param {String} status\n * @api private\n */\n\nNyanCat.prototype.draw = function(status){\n  this.appendRainbow();\n  this.drawScoreboard();\n  this.drawRainbow();\n  this.drawNyanCat(status);\n  this.tick = !this.tick;\n};\n\n/**\n * Draw the \"scoreboard\" showing the number\n * of passes, failures and pending tests.\n *\n * @api private\n */\n\nNyanCat.prototype.drawScoreboard = function(){\n  var stats = this.stats;\n  var colors = Base.colors;\n\n  function draw(color, n) {\n    write(' ');\n    write('\\u001b[' + color + 'm' + n + '\\u001b[0m');\n    write('\\n');\n  }\n\n  draw(colors.green, stats.passes);\n  draw(colors.fail, stats.failures);\n  draw(colors.pending, stats.pending);\n  write('\\n');\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Append the rainbow.\n *\n * @api private\n */\n\nNyanCat.prototype.appendRainbow = function(){\n  var segment = this.tick ? '_' : '-';\n  var rainbowified = this.rainbowify(segment);\n\n  for (var index = 0; index < this.numberOfLines; index++) {\n    var trajectory = this.trajectories[index];\n    if (trajectory.length >= this.trajectoryWidthMax) trajectory.shift();\n    trajectory.push(rainbowified);\n  }\n};\n\n/**\n * Draw the rainbow.\n *\n * @api private\n */\n\nNyanCat.prototype.drawRainbow = function(){\n  var self = this;\n\n  this.trajectories.forEach(function(line, index) {\n    write('\\u001b[' + self.scoreboardWidth + 'C');\n    write(line.join(''));\n    write('\\n');\n  });\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Draw the nyan cat with `status`.\n *\n * @param {String} status\n * @api private\n */\n\nNyanCat.prototype.drawNyanCat = function(status) {\n  var self = this;\n  var startWidth = this.scoreboardWidth + this.trajectories[0].length;\n  var color = '\\u001b[' + startWidth + 'C';\n  var padding = '';\n  \n  write(color);\n  write('_,------,');\n  write('\\n');\n  \n  write(color);\n  padding = self.tick ? '  ' : '   ';\n  write('_|' + padding + '/\\\\_/\\\\ ');\n  write('\\n');\n  \n  write(color);\n  padding = self.tick ? '_' : '__';\n  var tail = self.tick ? '~' : '^';\n  var face;\n  switch (status) {\n    case 'pass':\n      face = '( ^ .^)';\n      break;\n    case 'fail':\n      face = '( o .o)';\n      break;\n    default:\n      face = '( - .-)';\n  }\n  write(tail + '|' + padding + face + ' ');\n  write('\\n');\n  \n  write(color);\n  padding = self.tick ? ' ' : '  ';\n  write(padding + '\"\"  \"\" ');\n  write('\\n');\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Move cursor up `n`.\n *\n * @param {Number} n\n * @api private\n */\n\nNyanCat.prototype.cursorUp = function(n) {\n  write('\\u001b[' + n + 'A');\n};\n\n/**\n * Move cursor down `n`.\n *\n * @param {Number} n\n * @api private\n */\n\nNyanCat.prototype.cursorDown = function(n) {\n  write('\\u001b[' + n + 'B');\n};\n\n/**\n * Generate rainbow colors.\n *\n * @return {Array}\n * @api private\n */\n\nNyanCat.prototype.generateColors = function(){\n  var colors = [];\n\n  for (var i = 0; i < (6 * 7); i++) {\n    var pi3 = Math.floor(Math.PI / 3);\n    var n = (i * (1.0 / 6));\n    var r = Math.floor(3 * Math.sin(n) + 3);\n    var g = Math.floor(3 * Math.sin(n + 2 * pi3) + 3);\n    var b = Math.floor(3 * Math.sin(n + 4 * pi3) + 3);\n    colors.push(36 * r + 6 * g + b + 16);\n  }\n\n  return colors;\n};\n\n/**\n * Apply rainbow to the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nNyanCat.prototype.rainbowify = function(str){\n  var color = this.rainbowColors[this.colorIndex % this.rainbowColors.length];\n  this.colorIndex += 1;\n  return '\\u001b[38;5;' + color + 'm' + str + '\\u001b[0m';\n};\n\n/**\n * Stdout helper.\n */\n\nfunction write(string) {\n  process.stdout.write(string);\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nNyanCat.prototype = new F;\nNyanCat.prototype.constructor = NyanCat;\n\n\n}); // module: reporters/nyan.js\n\nrequire.register(\"reporters/progress.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `Progress`.\n */\n\nexports = module.exports = Progress;\n\n/**\n * General progress bar color.\n */\n\nBase.colors.progress = 90;\n\n/**\n * Initialize a new `Progress` bar test reporter.\n *\n * @param {Runner} runner\n * @param {Object} options\n * @api public\n */\n\nfunction Progress(runner, options) {\n  Base.call(this, runner);\n\n  var self = this\n    , options = options || {}\n    , stats = this.stats\n    , width = Base.window.width * .50 | 0\n    , total = runner.total\n    , complete = 0\n    , max = Math.max;\n\n  // default chars\n  options.open = options.open || '[';\n  options.complete = options.complete || '▬';\n  options.incomplete = options.incomplete || Base.symbols.dot;\n  options.close = options.close || ']';\n  options.verbose = false;\n\n  // tests started\n  runner.on('start', function(){\n    console.log();\n    cursor.hide();\n  });\n\n  // tests complete\n  runner.on('test end', function(){\n    complete++;\n    var incomplete = total - complete\n      , percent = complete / total\n      , n = width * percent | 0\n      , i = width - n;\n\n    cursor.CR();\n    process.stdout.write('\\u001b[J');\n    process.stdout.write(color('progress', '  ' + options.open));\n    process.stdout.write(Array(n).join(options.complete));\n    process.stdout.write(Array(i).join(options.incomplete));\n    process.stdout.write(color('progress', options.close));\n    if (options.verbose) {\n      process.stdout.write(color('progress', ' ' + complete + ' of ' + total));\n    }\n  });\n\n  // tests are complete, output some stats\n  // and the failures if any\n  runner.on('end', function(){\n    cursor.show();\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nProgress.prototype = new F;\nProgress.prototype.constructor = Progress;\n\n\n}); // module: reporters/progress.js\n\nrequire.register(\"reporters/spec.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `Spec`.\n */\n\nexports = module.exports = Spec;\n\n/**\n * Initialize a new `Spec` test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Spec(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , indents = 0\n    , n = 0;\n\n  function indent() {\n    return Array(indents).join('  ')\n  }\n\n  runner.on('start', function(){\n    console.log();\n  });\n\n  runner.on('suite', function(suite){\n    ++indents;\n    console.log(color('suite', '%s%s'), indent(), suite.title);\n  });\n\n  runner.on('suite end', function(suite){\n    --indents;\n    if (1 == indents) console.log();\n  });\n\n  runner.on('test', function(test){\n    process.stdout.write(indent() + color('pass', '  ◦ ' + test.title + ': '));\n  });\n\n  runner.on('pending', function(test){\n    var fmt = indent() + color('pending', '  - %s');\n    console.log(fmt, test.title);\n  });\n\n  runner.on('pass', function(test){\n    if ('fast' == test.speed) {\n      var fmt = indent()\n        + color('checkmark', '  ' + Base.symbols.ok)\n        + color('pass', ' %s ');\n      cursor.CR();\n      console.log(fmt, test.title);\n    } else {\n      var fmt = indent()\n        + color('checkmark', '  ' + Base.symbols.ok)\n        + color('pass', ' %s ')\n        + color(test.speed, '(%dms)');\n      cursor.CR();\n      console.log(fmt, test.title, test.duration);\n    }\n  });\n\n  runner.on('fail', function(test, err){\n    cursor.CR();\n    console.log(indent() + color('fail', '  %d) %s'), ++n, test.title);\n  });\n\n  runner.on('end', self.epilogue.bind(self));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nSpec.prototype = new F;\nSpec.prototype.constructor = Spec;\n\n\n}); // module: reporters/spec.js\n\nrequire.register(\"reporters/tap.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `TAP`.\n */\n\nexports = module.exports = TAP;\n\n/**\n * Initialize a new `TAP` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction TAP(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , n = 1\n    , passes = 0\n    , failures = 0;\n\n  runner.on('start', function(){\n    var total = runner.grepTotal(runner.suite);\n    console.log('%d..%d', 1, total);\n  });\n\n  runner.on('test end', function(){\n    ++n;\n  });\n\n  runner.on('pending', function(test){\n    console.log('ok %d %s # SKIP -', n, title(test));\n  });\n\n  runner.on('pass', function(test){\n    passes++;\n    console.log('ok %d %s', n, title(test));\n  });\n\n  runner.on('fail', function(test, err){\n    failures++;\n    console.log('not ok %d %s', n, title(test));\n    if (err.stack) console.log(err.stack.replace(/^/gm, '  '));\n  });\n\n  runner.on('end', function(){\n    console.log('# tests ' + (passes + failures));\n    console.log('# pass ' + passes);\n    console.log('# fail ' + failures);\n  });\n}\n\n/**\n * Return a TAP-safe title of `test`\n *\n * @param {Object} test\n * @return {String}\n * @api private\n */\n\nfunction title(test) {\n  return test.fullTitle().replace(/#/g, '');\n}\n\n}); // module: reporters/tap.js\n\nrequire.register(\"reporters/teamcity.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `Teamcity`.\n */\n\nexports = module.exports = Teamcity;\n\n/**\n * Initialize a new `Teamcity` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Teamcity(runner) {\n  Base.call(this, runner);\n  var stats = this.stats;\n\n  runner.on('start', function() {\n    console.log(\"##teamcity[testSuiteStarted name='mocha.suite']\");\n  });\n\n  runner.on('test', function(test) {\n    console.log(\"##teamcity[testStarted name='\" + escape(test.fullTitle()) + \"']\");\n  });\n\n  runner.on('fail', function(test, err) {\n    console.log(\"##teamcity[testFailed name='\" + escape(test.fullTitle()) + \"' message='\" + escape(err.message) + \"']\");\n  });\n\n  runner.on('pending', function(test) {\n    console.log(\"##teamcity[testIgnored name='\" + escape(test.fullTitle()) + \"' message='pending']\");\n  });\n\n  runner.on('test end', function(test) {\n    console.log(\"##teamcity[testFinished name='\" + escape(test.fullTitle()) + \"' duration='\" + test.duration + \"']\");\n  });\n\n  runner.on('end', function() {\n    console.log(\"##teamcity[testSuiteFinished name='mocha.suite' duration='\" + stats.duration + \"']\");\n  });\n}\n\n/**\n * Escape the given `str`.\n */\n\nfunction escape(str) {\n  return str\n    .replace(/\\|/g, \"||\")\n    .replace(/\\n/g, \"|n\")\n    .replace(/\\r/g, \"|r\")\n    .replace(/\\[/g, \"|[\")\n    .replace(/\\]/g, \"|]\")\n    .replace(/\\u0085/g, \"|x\")\n    .replace(/\\u2028/g, \"|l\")\n    .replace(/\\u2029/g, \"|p\")\n    .replace(/'/g, \"|'\");\n}\n\n}); // module: reporters/teamcity.js\n\nrequire.register(\"reporters/xunit.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , utils = require('../utils')\n  , escape = utils.escape;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\nvar Date = global.Date\n  , setTimeout = global.setTimeout\n  , setInterval = global.setInterval\n  , clearTimeout = global.clearTimeout\n  , clearInterval = global.clearInterval;\n\n/**\n * Expose `XUnit`.\n */\n\nexports = module.exports = XUnit;\n\n/**\n * Initialize a new `XUnit` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction XUnit(runner) {\n  Base.call(this, runner);\n  var stats = this.stats\n    , tests = []\n    , self = this;\n\n  runner.on('pass', function(test){\n    tests.push(test);\n  });\n\n  runner.on('fail', function(test){\n    tests.push(test);\n  });\n\n  runner.on('end', function(){\n    console.log(tag('testsuite', {\n        name: 'Mocha Tests'\n      , tests: stats.tests\n      , failures: stats.failures\n      , errors: stats.failures\n      , skip: stats.tests - stats.failures - stats.passes\n      , timestamp: (new Date).toUTCString()\n      , time: stats.duration / 1000\n    }, false));\n\n    tests.forEach(test);\n    console.log('</testsuite>');\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nXUnit.prototype = new F;\nXUnit.prototype.constructor = XUnit;\n\n\n/**\n * Output tag for the given `test.`\n */\n\nfunction test(test) {\n  var attrs = {\n      classname: test.parent.fullTitle()\n    , name: test.title\n    , time: test.duration / 1000\n  };\n\n  if ('failed' == test.state) {\n    var err = test.err;\n    attrs.message = escape(err.message);\n    console.log(tag('testcase', attrs, false, tag('failure', attrs, false, cdata(err.stack))));\n  } else if (test.pending) {\n    console.log(tag('testcase', attrs, false, tag('skipped', {}, true)));\n  } else {\n    console.log(tag('testcase', attrs, true) );\n  }\n}\n\n/**\n * HTML tag helper.\n */\n\nfunction tag(name, attrs, close, content) {\n  var end = close ? '/>' : '>'\n    , pairs = []\n    , tag;\n\n  for (var key in attrs) {\n    pairs.push(key + '=\"' + escape(attrs[key]) + '\"');\n  }\n\n  tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;\n  if (content) tag += content + '</' + name + end;\n  return tag;\n}\n\n/**\n * Return cdata escaped CDATA `str`.\n */\n\nfunction cdata(str) {\n  return '<![CDATA[' + escape(str) + ']]>';\n}\n\n}); // module: reporters/xunit.js\n\nrequire.register(\"runnable.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('browser/events').EventEmitter\n  , debug = require('browser/debug')('mocha:runnable')\n  , milliseconds = require('./ms');\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\nvar Date = global.Date\n  , setTimeout = global.setTimeout\n  , setInterval = global.setInterval\n  , clearTimeout = global.clearTimeout\n  , clearInterval = global.clearInterval;\n\n/**\n * Object#toString().\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Expose `Runnable`.\n */\n\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n */\n\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.async = fn && fn.length;\n  this.sync = ! this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this.timedOut = false;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nfunction F(){};\nF.prototype = EventEmitter.prototype;\nRunnable.prototype = new F;\nRunnable.prototype.constructor = Runnable;\n\n\n/**\n * Set & get timeout `ms`.\n *\n * @param {Number|String} ms\n * @return {Runnable|Number} ms or self\n * @api private\n */\n\nRunnable.prototype.timeout = function(ms){\n  if (0 == arguments.length) return this._timeout;\n  if ('string' == typeof ms) ms = milliseconds(ms);\n  debug('timeout %d', ms);\n  this._timeout = ms;\n  if (this.timer) this.resetTimeout();\n  return this;\n};\n\n/**\n * Set & get slow `ms`.\n *\n * @param {Number|String} ms\n * @return {Runnable|Number} ms or self\n * @api private\n */\n\nRunnable.prototype.slow = function(ms){\n  if (0 === arguments.length) return this._slow;\n  if ('string' == typeof ms) ms = milliseconds(ms);\n  debug('timeout %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Return the full title generated by recursively\n * concatenating the parent's full title.\n *\n * @return {String}\n * @api public\n */\n\nRunnable.prototype.fullTitle = function(){\n  return this.parent.fullTitle() + ' ' + this.title;\n};\n\n/**\n * Clear the timeout.\n *\n * @api private\n */\n\nRunnable.prototype.clearTimeout = function(){\n  clearTimeout(this.timer);\n};\n\n/**\n * Inspect the runnable void of private properties.\n *\n * @return {String}\n * @api private\n */\n\nRunnable.prototype.inspect = function(){\n  return JSON.stringify(this, function(key, val){\n    if ('_' == key[0]) return;\n    if ('parent' == key) return '#<Suite>';\n    if ('ctx' == key) return '#<Context>';\n    return val;\n  }, 2);\n};\n\n/**\n * Reset the timeout.\n *\n * @api private\n */\n\nRunnable.prototype.resetTimeout = function(){\n  var self = this\n    , ms = this.timeout();\n\n  this.clearTimeout();\n  if (ms) {\n    this.timer = setTimeout(function(){\n      self.callback(new Error('timeout of ' + ms + 'ms exceeded'));\n      self.timedOut = true;\n    }, ms);\n  }\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @api private\n */\n\nRunnable.prototype.run = function(fn){\n  var self = this\n    , ms = this.timeout()\n    , start = new Date\n    , ctx = this.ctx\n    , finished\n    , emitted;\n\n  if (ctx) ctx.runnable(this);\n\n  // timeout\n  if (this.async) {\n    if (ms) {\n      this.timer = setTimeout(function(){\n        done(new Error('timeout of ' + ms + 'ms exceeded'));\n        self.timedOut = true;\n      }, ms);\n    }\n  }\n\n  // called multiple times\n  function multiple(err) {\n    if (emitted) return;\n    emitted = true;\n    self.emit('error', err || new Error('done() called multiple times'));\n  }\n\n  // finished\n  function done(err) {\n    if (self.timedOut) return;\n    if (finished) return multiple(err);\n    self.clearTimeout();\n    self.duration = new Date - start;\n    finished = true;\n    fn(err);\n  }\n\n  // for .resetTimeout()\n  this.callback = done;\n\n  // async\n  if (this.async) {\n    try {\n      this.fn.call(ctx, function(err){\n        if (err instanceof Error || toString.call(err) === \"[object Error]\") return done(err);\n        if (null != err) return done(new Error('done() invoked with non-Error: ' + err));\n        done();\n      });\n    } catch (err) {\n      done(err);\n    }\n    return;\n  }\n\n  if (this.asyncOnly) {\n    return done(new Error('--async-only option in use without declaring `done()`'));\n  }\n\n  // sync\n  try {\n    if (!this.pending) this.fn.call(ctx);\n    this.duration = new Date - start;\n    fn();\n  } catch (err) {\n    fn(err);\n  }\n};\n\n}); // module: runnable.js\n\nrequire.register(\"runner.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('browser/events').EventEmitter\n  , debug = require('browser/debug')('mocha:runner')\n  , Test = require('./test')\n  , utils = require('./utils')\n  , filter = utils.filter\n  , keys = utils.keys;\n\n/**\n * Non-enumerable globals.\n */\n\nvar globals = [\n  'setTimeout',\n  'clearTimeout',\n  'setInterval',\n  'clearInterval',\n  'XMLHttpRequest',\n  'Date'\n];\n\n/**\n * Expose `Runner`.\n */\n\nmodule.exports = Runner;\n\n/**\n * Initialize a `Runner` for the given `suite`.\n *\n * Events:\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *\n * @api public\n */\n\nfunction Runner(suite) {\n  var self = this;\n  this._globals = [];\n  this.suite = suite;\n  this.total = suite.total();\n  this.failures = 0;\n  this.on('test end', function(test){ self.checkGlobals(test); });\n  this.on('hook end', function(hook){ self.checkGlobals(hook); });\n  this.grep(/.*/);\n  this.globals(this.globalProps().concat(['errno']));\n}\n\n/**\n * Wrapper for setImmediate, process.nextTick, or browser polyfill.\n *\n * @param {Function} fn\n * @api private\n */\n\nRunner.immediately = global.setImmediate || process.nextTick;\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nfunction F(){};\nF.prototype = EventEmitter.prototype;\nRunner.prototype = new F;\nRunner.prototype.constructor = Runner;\n\n\n/**\n * Run tests with full titles matching `re`. Updates runner.total\n * with number of tests matched.\n *\n * @param {RegExp} re\n * @param {Boolean} invert\n * @return {Runner} for chaining\n * @api public\n */\n\nRunner.prototype.grep = function(re, invert){\n  debug('grep %s', re);\n  this._grep = re;\n  this._invert = invert;\n  this.total = this.grepTotal(this.suite);\n  return this;\n};\n\n/**\n * Returns the number of tests matching the grep search for the\n * given suite.\n *\n * @param {Suite} suite\n * @return {Number}\n * @api public\n */\n\nRunner.prototype.grepTotal = function(suite) {\n  var self = this;\n  var total = 0;\n\n  suite.eachTest(function(test){\n    var match = self._grep.test(test.fullTitle());\n    if (self._invert) match = !match;\n    if (match) total++;\n  });\n\n  return total;\n};\n\n/**\n * Return a list of global properties.\n *\n * @return {Array}\n * @api private\n */\n\nRunner.prototype.globalProps = function() {\n  var props = utils.keys(global);\n\n  // non-enumerables\n  for (var i = 0; i < globals.length; ++i) {\n    if (~utils.indexOf(props, globals[i])) continue;\n    props.push(globals[i]);\n  }\n\n  return props;\n};\n\n/**\n * Allow the given `arr` of globals.\n *\n * @param {Array} arr\n * @return {Runner} for chaining\n * @api public\n */\n\nRunner.prototype.globals = function(arr){\n  if (0 == arguments.length) return this._globals;\n  debug('globals %j', arr);\n  utils.forEach(arr, function(arr){\n    this._globals.push(arr);\n  }, this);\n  return this;\n};\n\n/**\n * Check for global variable leaks.\n *\n * @api private\n */\n\nRunner.prototype.checkGlobals = function(test){\n  if (this.ignoreLeaks) return;\n  var ok = this._globals;\n  var globals = this.globalProps();\n  var isNode = process.kill;\n  var leaks;\n\n  // check length - 2 ('errno' and 'location' globals)\n  if (isNode && 1 == ok.length - globals.length) return\n  else if (2 == ok.length - globals.length) return;\n\n  leaks = filterLeaks(ok, globals);\n  this._globals = this._globals.concat(leaks);\n\n  if (leaks.length > 1) {\n    this.fail(test, new Error('global leaks detected: ' + leaks.join(', ') + ''));\n  } else if (leaks.length) {\n    this.fail(test, new Error('global leak detected: ' + leaks[0]));\n  }\n};\n\n/**\n * Fail the given `test`.\n *\n * @param {Test} test\n * @param {Error} err\n * @api private\n */\n\nRunner.prototype.fail = function(test, err){\n  ++this.failures;\n  test.state = 'failed';\n\n  if ('string' == typeof err) {\n    err = new Error('the string \"' + err + '\" was thrown, throw an Error :)');\n  }\n\n  this.emit('fail', test, err);\n};\n\n/**\n * Fail the given `hook` with `err`.\n *\n * Hook failures (currently) hard-end due\n * to that fact that a failing hook will\n * surely cause subsequent tests to fail,\n * causing jumbled reporting.\n *\n * @param {Hook} hook\n * @param {Error} err\n * @api private\n */\n\nRunner.prototype.failHook = function(hook, err){\n  this.fail(hook, err);\n  this.emit('end');\n};\n\n/**\n * Run hook `name` callbacks and then invoke `fn()`.\n *\n * @param {String} name\n * @param {Function} function\n * @api private\n */\n\nRunner.prototype.hook = function(name, fn){\n  var suite = this.suite\n    , hooks = suite['_' + name]\n    , self = this\n    , timer;\n\n  function next(i) {\n    var hook = hooks[i];\n    if (!hook) return fn();\n    self.currentRunnable = hook;\n\n    self.emit('hook', hook);\n\n    hook.on('error', function(err){\n      self.failHook(hook, err);\n    });\n\n    hook.run(function(err){\n      hook.removeAllListeners('error');\n      var testError = hook.error();\n      if (testError) self.fail(self.test, testError);\n      if (err) return self.failHook(hook, err);\n      self.emit('hook end', hook);\n      next(++i);\n    });\n  }\n\n  Runner.immediately(function(){\n    next(0);\n  });\n};\n\n/**\n * Run hook `name` for the given array of `suites`\n * in order, and callback `fn(err)`.\n *\n * @param {String} name\n * @param {Array} suites\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.hooks = function(name, suites, fn){\n  var self = this\n    , orig = this.suite;\n\n  function next(suite) {\n    self.suite = suite;\n\n    if (!suite) {\n      self.suite = orig;\n      return fn();\n    }\n\n    self.hook(name, function(err){\n      if (err) {\n        self.suite = orig;\n        return fn(err);\n      }\n\n      next(suites.pop());\n    });\n  }\n\n  next(suites.pop());\n};\n\n/**\n * Run hooks from the top level down.\n *\n * @param {String} name\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.hookUp = function(name, fn){\n  var suites = [this.suite].concat(this.parents()).reverse();\n  this.hooks(name, suites, fn);\n};\n\n/**\n * Run hooks from the bottom up.\n *\n * @param {String} name\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.hookDown = function(name, fn){\n  var suites = [this.suite].concat(this.parents());\n  this.hooks(name, suites, fn);\n};\n\n/**\n * Return an array of parent Suites from\n * closest to furthest.\n *\n * @return {Array}\n * @api private\n */\n\nRunner.prototype.parents = function(){\n  var suite = this.suite\n    , suites = [];\n  while (suite = suite.parent) suites.push(suite);\n  return suites;\n};\n\n/**\n * Run the current test and callback `fn(err)`.\n *\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.runTest = function(fn){\n  var test = this.test\n    , self = this;\n\n  if (this.asyncOnly) test.asyncOnly = true;\n\n  try {\n    test.on('error', function(err){\n      self.fail(test, err);\n    });\n    test.run(fn);\n  } catch (err) {\n    fn(err);\n  }\n};\n\n/**\n * Run tests in the given `suite` and invoke\n * the callback `fn()` when complete.\n *\n * @param {Suite} suite\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.runTests = function(suite, fn){\n  var self = this\n    , tests = suite.tests.slice()\n    , test;\n\n  function next(err) {\n    // if we bail after first err\n    if (self.failures && suite._bail) return fn();\n\n    // next test\n    test = tests.shift();\n\n    // all done\n    if (!test) return fn();\n\n    // grep\n    var match = self._grep.test(test.fullTitle());\n    if (self._invert) match = !match;\n    if (!match) return next();\n\n    // pending\n    if (test.pending) {\n      self.emit('pending', test);\n      self.emit('test end', test);\n      return next();\n    }\n\n    // execute test and hook(s)\n    self.emit('test', self.test = test);\n    self.hookDown('beforeEach', function(){\n      self.currentRunnable = self.test;\n      self.runTest(function(err){\n        test = self.test;\n\n        if (err) {\n          self.fail(test, err);\n          self.emit('test end', test);\n          return self.hookUp('afterEach', next);\n        }\n\n        test.state = 'passed';\n        self.emit('pass', test);\n        self.emit('test end', test);\n        self.hookUp('afterEach', next);\n      });\n    });\n  }\n\n  this.next = next;\n  next();\n};\n\n/**\n * Run the given `suite` and invoke the\n * callback `fn()` when complete.\n *\n * @param {Suite} suite\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.runSuite = function(suite, fn){\n  var total = this.grepTotal(suite)\n    , self = this\n    , i = 0;\n\n  debug('run suite %s', suite.fullTitle());\n\n  if (!total) return fn();\n\n  this.emit('suite', this.suite = suite);\n\n  function next() {\n    var curr = suite.suites[i++];\n    if (!curr) return done();\n    self.runSuite(curr, next);\n  }\n\n  function done() {\n    self.suite = suite;\n    self.hook('afterAll', function(){\n      self.emit('suite end', suite);\n      fn();\n    });\n  }\n\n  this.hook('beforeAll', function(){\n    self.runTests(suite, next);\n  });\n};\n\n/**\n * Handle uncaught exceptions.\n *\n * @param {Error} err\n * @api private\n */\n\nRunner.prototype.uncaught = function(err){\n  debug('uncaught exception %s', err.message);\n  var runnable = this.currentRunnable;\n  if (!runnable || 'failed' == runnable.state) return;\n  runnable.clearTimeout();\n  err.uncaught = true;\n  this.fail(runnable, err);\n\n  // recover from test\n  if ('test' == runnable.type) {\n    this.emit('test end', runnable);\n    this.hookUp('afterEach', this.next);\n    return;\n  }\n\n  // bail on hooks\n  this.emit('end');\n};\n\n/**\n * Run the root suite and invoke `fn(failures)`\n * on completion.\n *\n * @param {Function} fn\n * @return {Runner} for chaining\n * @api public\n */\n\nRunner.prototype.run = function(fn){\n  var self = this\n    , fn = fn || function(){};\n\n  function uncaught(err){\n    self.uncaught(err);\n  }\n\n  debug('start');\n\n  // callback\n  this.on('end', function(){\n    debug('end');\n    process.removeListener('uncaughtException', uncaught);\n    fn(self.failures);\n  });\n\n  // run suites\n  this.emit('start');\n  this.runSuite(this.suite, function(){\n    debug('finished running');\n    self.emit('end');\n  });\n\n  // uncaught exception\n  process.on('uncaughtException', uncaught);\n\n  return this;\n};\n\n/**\n * Filter leaks with the given globals flagged as `ok`.\n *\n * @param {Array} ok\n * @param {Array} globals\n * @return {Array}\n * @api private\n */\n\nfunction filterLeaks(ok, globals) {\n  return filter(globals, function(key){\n    var matched = filter(ok, function(ok){\n      if (~ok.indexOf('*')) return 0 == key.indexOf(ok.split('*')[0]);\n      // Opera and IE expose global variables for HTML element IDs (issue #243)\n      if (/^mocha-/.test(key)) return true;\n      return key == ok;\n    });\n    return matched.length == 0 && (!global.navigator || 'onerror' !== key);\n  });\n}\n\n}); // module: runner.js\n\nrequire.register(\"suite.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('browser/events').EventEmitter\n  , debug = require('browser/debug')('mocha:suite')\n  , milliseconds = require('./ms')\n  , utils = require('./utils')\n  , Hook = require('./hook');\n\n/**\n * Expose `Suite`.\n */\n\nexports = module.exports = Suite;\n\n/**\n * Create a new `Suite` with the given `title`\n * and parent `Suite`. When a suite with the\n * same title is already present, that suite\n * is returned to provide nicer reporter\n * and more flexible meta-testing.\n *\n * @param {Suite} parent\n * @param {String} title\n * @return {Suite}\n * @api public\n */\n\nexports.create = function(parent, title){\n  var suite = new Suite(title, parent.ctx);\n  suite.parent = parent;\n  if (parent.pending) suite.pending = true;\n  title = suite.fullTitle();\n  parent.addSuite(suite);\n  return suite;\n};\n\n/**\n * Initialize a new `Suite` with the given\n * `title` and `ctx`.\n *\n * @param {String} title\n * @param {Context} ctx\n * @api private\n */\n\nfunction Suite(title, ctx) {\n  this.title = title;\n  this.ctx = ctx;\n  this.suites = [];\n  this.tests = [];\n  this.pending = false;\n  this._beforeEach = [];\n  this._beforeAll = [];\n  this._afterEach = [];\n  this._afterAll = [];\n  this.root = !title;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._bail = false;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nfunction F(){};\nF.prototype = EventEmitter.prototype;\nSuite.prototype = new F;\nSuite.prototype.constructor = Suite;\n\n\n/**\n * Return a clone of this `Suite`.\n *\n * @return {Suite}\n * @api private\n */\n\nSuite.prototype.clone = function(){\n  var suite = new Suite(this.title);\n  debug('clone');\n  suite.ctx = this.ctx;\n  suite.timeout(this.timeout());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  return suite;\n};\n\n/**\n * Set timeout `ms` or short-hand such as \"2s\".\n *\n * @param {Number|String} ms\n * @return {Suite|Number} for chaining\n * @api private\n */\n\nSuite.prototype.timeout = function(ms){\n  if (0 == arguments.length) return this._timeout;\n  if ('string' == typeof ms) ms = milliseconds(ms);\n  debug('timeout %d', ms);\n  this._timeout = parseInt(ms, 10);\n  return this;\n};\n\n/**\n * Set slow `ms` or short-hand such as \"2s\".\n *\n * @param {Number|String} ms\n * @return {Suite|Number} for chaining\n * @api private\n */\n\nSuite.prototype.slow = function(ms){\n  if (0 === arguments.length) return this._slow;\n  if ('string' == typeof ms) ms = milliseconds(ms);\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Sets whether to bail after first error.\n *\n * @parma {Boolean} bail\n * @return {Suite|Number} for chaining\n * @api private\n */\n\nSuite.prototype.bail = function(bail){\n  if (0 == arguments.length) return this._bail;\n  debug('bail %s', bail);\n  this._bail = bail;\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before running tests.\n *\n * @param {Function} fn\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.beforeAll = function(fn){\n  if (this.pending) return this;\n  var hook = new Hook('\"before all\" hook', fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeAll.push(hook);\n  this.emit('beforeAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after running tests.\n *\n * @param {Function} fn\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.afterAll = function(fn){\n  if (this.pending) return this;\n  var hook = new Hook('\"after all\" hook', fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterAll.push(hook);\n  this.emit('afterAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before each test case.\n *\n * @param {Function} fn\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.beforeEach = function(fn){\n  if (this.pending) return this;\n  var hook = new Hook('\"before each\" hook', fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeEach.push(hook);\n  this.emit('beforeEach', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after each test case.\n *\n * @param {Function} fn\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.afterEach = function(fn){\n  if (this.pending) return this;\n  var hook = new Hook('\"after each\" hook', fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterEach.push(hook);\n  this.emit('afterEach', hook);\n  return this;\n};\n\n/**\n * Add a test `suite`.\n *\n * @param {Suite} suite\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.addSuite = function(suite){\n  suite.parent = this;\n  suite.timeout(this.timeout());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  this.suites.push(suite);\n  this.emit('suite', suite);\n  return this;\n};\n\n/**\n * Add a `test` to this suite.\n *\n * @param {Test} test\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.addTest = function(test){\n  test.parent = this;\n  test.timeout(this.timeout());\n  test.slow(this.slow());\n  test.ctx = this.ctx;\n  this.tests.push(test);\n  this.emit('test', test);\n  return this;\n};\n\n/**\n * Return the full title generated by recursively\n * concatenating the parent's full title.\n *\n * @return {String}\n * @api public\n */\n\nSuite.prototype.fullTitle = function(){\n  if (this.parent) {\n    var full = this.parent.fullTitle();\n    if (full) return full + ' ' + this.title;\n  }\n  return this.title;\n};\n\n/**\n * Return the total number of tests.\n *\n * @return {Number}\n * @api public\n */\n\nSuite.prototype.total = function(){\n  return utils.reduce(this.suites, function(sum, suite){\n    return sum + suite.total();\n  }, 0) + this.tests.length;\n};\n\n/**\n * Iterates through each suite recursively to find\n * all tests. Applies a function in the format\n * `fn(test)`.\n *\n * @param {Function} fn\n * @return {Suite}\n * @api private\n */\n\nSuite.prototype.eachTest = function(fn){\n  utils.forEach(this.tests, fn);\n  utils.forEach(this.suites, function(suite){\n    suite.eachTest(fn);\n  });\n  return this;\n};\n\n}); // module: suite.js\n\nrequire.register(\"test.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\n\n/**\n * Expose `Test`.\n */\n\nmodule.exports = Test;\n\n/**\n * Initialize a new `Test` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n */\n\nfunction Test(title, fn) {\n  Runnable.call(this, title, fn);\n  this.pending = !fn;\n  this.type = 'test';\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\n\nfunction F(){};\nF.prototype = Runnable.prototype;\nTest.prototype = new F;\nTest.prototype.constructor = Test;\n\n\n}); // module: test.js\n\nrequire.register(\"utils.js\", function(module, exports, require){\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('browser/fs')\n  , path = require('browser/path')\n  , join = path.join\n  , debug = require('browser/debug')('mocha:watch');\n\n/**\n * Ignored directories.\n */\n\nvar ignore = ['node_modules', '.git'];\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {String} html\n * @return {String}\n * @api private\n */\n\nexports.escape = function(html){\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n};\n\n/**\n * Array#forEach (<=IE8)\n *\n * @param {Array} array\n * @param {Function} fn\n * @param {Object} scope\n * @api private\n */\n\nexports.forEach = function(arr, fn, scope){\n  for (var i = 0, l = arr.length; i < l; i++)\n    fn.call(scope, arr[i], i);\n};\n\n/**\n * Array#indexOf (<=IE8)\n *\n * @parma {Array} arr\n * @param {Object} obj to find index of\n * @param {Number} start\n * @api private\n */\n\nexports.indexOf = function(arr, obj, start){\n  for (var i = start || 0, l = arr.length; i < l; i++) {\n    if (arr[i] === obj)\n      return i;\n  }\n  return -1;\n};\n\n/**\n * Array#reduce (<=IE8)\n *\n * @param {Array} array\n * @param {Function} fn\n * @param {Object} initial value\n * @api private\n */\n\nexports.reduce = function(arr, fn, val){\n  var rval = val;\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    rval = fn(rval, arr[i], i, arr);\n  }\n\n  return rval;\n};\n\n/**\n * Array#filter (<=IE8)\n *\n * @param {Array} array\n * @param {Function} fn\n * @api private\n */\n\nexports.filter = function(arr, fn){\n  var ret = [];\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    var val = arr[i];\n    if (fn(val, i, arr)) ret.push(val);\n  }\n\n  return ret;\n};\n\n/**\n * Object.keys (<=IE8)\n *\n * @param {Object} obj\n * @return {Array} keys\n * @api private\n */\n\nexports.keys = Object.keys || function(obj) {\n  var keys = []\n    , has = Object.prototype.hasOwnProperty // for `window` on <=IE8\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n\n  return keys;\n};\n\n/**\n * Watch the given `files` for changes\n * and invoke `fn(file)` on modification.\n *\n * @param {Array} files\n * @param {Function} fn\n * @api private\n */\n\nexports.watch = function(files, fn){\n  var options = { interval: 100 };\n  files.forEach(function(file){\n    debug('file %s', file);\n    fs.watchFile(file, options, function(curr, prev){\n      if (prev.mtime < curr.mtime) fn(file);\n    });\n  });\n};\n\n/**\n * Ignored files.\n */\n\nfunction ignored(path){\n  return !~ignore.indexOf(path);\n}\n\n/**\n * Lookup files in the given `dir`.\n *\n * @return {Array}\n * @api private\n */\n\nexports.files = function(dir, ret){\n  ret = ret || [];\n\n  fs.readdirSync(dir)\n  .filter(ignored)\n  .forEach(function(path){\n    path = join(dir, path);\n    if (fs.statSync(path).isDirectory()) {\n      exports.files(path, ret);\n    } else if (path.match(/\\.(js|coffee)$/)) {\n      ret.push(path);\n    }\n  });\n\n  return ret;\n};\n\n/**\n * Compute a slug from the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.slug = function(str){\n  return str\n    .toLowerCase()\n    .replace(/ +/g, '-')\n    .replace(/[^-\\w]/g, '');\n};\n\n/**\n * Strip the function definition from `str`,\n * and re-indent for pre whitespace.\n */\n\nexports.clean = function(str) {\n  str = str\n    .replace(/^function *\\(.*\\) *{/, '')\n    .replace(/\\s+\\}$/, '');\n\n  var spaces = str.match(/^\\n?( *)/)[1].length\n    , re = new RegExp('^ {' + spaces + '}', 'gm');\n\n  str = str.replace(re, '');\n\n  return exports.trim(str);\n};\n\n/**\n * Escape regular expression characters in `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.escapeRegexp = function(str){\n  return str.replace(/[-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n};\n\n/**\n * Trim the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.trim = function(str){\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\n\n/**\n * Parse the given `qs`.\n *\n * @param {String} qs\n * @return {Object}\n * @api private\n */\n\nexports.parseQuery = function(qs){\n  return exports.reduce(qs.replace('?', '').split('&'), function(obj, pair){\n    var i = pair.indexOf('=')\n      , key = pair.slice(0, i)\n      , val = pair.slice(++i);\n\n    obj[key] = decodeURIComponent(val);\n    return obj;\n  }, {});\n};\n\n/**\n * Highlight the given string of `js`.\n *\n * @param {String} js\n * @return {String}\n * @api private\n */\n\nfunction highlight(js) {\n  return js\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>')\n    .replace(/('.*?')/gm, '<span class=\"string\">$1</span>')\n    .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/\\bnew *(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>')\n    .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>')\n}\n\n/**\n * Highlight the contents of tag `name`.\n *\n * @param {String} name\n * @api private\n */\n\nexports.highlightTags = function(name) {\n  var code = document.getElementsByTagName(name);\n  for (var i = 0, len = code.length; i < len; ++i) {\n    code[i].innerHTML = highlight(code[i].innerHTML);\n  }\n};\n\n}); // module: utils.js\n/**\n * Node shims.\n *\n * These are meant only to allow\n * mocha.js to run untouched, not\n * to allow running node code in\n * the browser.\n */\n\nprocess = {};\nprocess.exit = function(status){};\nprocess.stdout = {};\nglobal = window;\n\n/**\n * Remove uncaughtException listener.\n */\n\nprocess.removeListener = function(e){\n  if ('uncaughtException' == e) {\n    window.onerror = null;\n  }\n};\n\n/**\n * Implements uncaughtException listener.\n */\n\nprocess.on = function(e, fn){\n  if ('uncaughtException' == e) {\n    window.onerror = function(err, url, line){\n      fn(new Error(err + ' (' + url + ':' + line + ')'));\n    };\n  }\n};\n\n// boot\n;(function(){\n\n  /**\n   * Expose mocha.\n   */\n\n  var Mocha = window.Mocha = require('mocha'),\n      mocha = window.mocha = new Mocha({ reporter: 'html' });\n\n  var immediateQueue = []\n    , immediateTimeout;\n\n  function timeslice() {\n    var immediateStart = new Date().getTime();\n    while (immediateQueue.length && (new Date().getTime() - immediateStart) < 100) {\n      immediateQueue.shift()();\n    }\n    if (immediateQueue.length) {\n      immediateTimeout = setTimeout(timeslice, 0);\n    } else {\n      immediateTimeout = null;\n    }\n  }\n\n  /**\n   * High-performance override of Runner.immediately.\n   */\n\n  Mocha.Runner.immediately = function(callback) {\n    immediateQueue.push(callback);\n    if (!immediateTimeout) {\n      immediateTimeout = setTimeout(timeslice, 0);\n    }\n  };\n\n  /**\n   * Override ui to ensure that the ui functions are initialized.\n   * Normally this would happen in Mocha.prototype.loadFiles.\n   */\n\n  mocha.ui = function(ui){\n    Mocha.prototype.ui.call(this, ui);\n    this.suite.emit('pre-require', window, null, this);\n    return this;\n  };\n\n  /**\n   * Setup mocha with the given setting options.\n   */\n\n  mocha.setup = function(opts){\n    if ('string' == typeof opts) opts = { ui: opts };\n    for (var opt in opts) this[opt](opts[opt]);\n    return this;\n  };\n\n  /**\n   * Run mocha, returning the Runner.\n   */\n\n  mocha.run = function(fn){\n    var options = mocha.options;\n    mocha.globals('location');\n\n    var query = Mocha.utils.parseQuery(window.location.search || '');\n    if (query.grep) mocha.grep(query.grep);\n    if (query.invert) mocha.invert();\n\n    return Mocha.prototype.run.call(mocha, function(){\n      Mocha.utils.highlightTags('code');\n      if (fn) fn();\n    });\n  };\n})();\n})();//@ sourceURL=visionmedia-mocha/mocha.js"
));
require.register("chaijs-chai/index.js", Function("exports, require, module",
"module.exports = require('./lib/chai');\n//@ sourceURL=chaijs-chai/index.js"
));
require.register("chaijs-chai/lib/chai.js", Function("exports, require, module",
"/*!\n * chai\n * Copyright(c) 2011-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = []\n  , exports = module.exports = {};\n\n/*!\n * Chai version\n */\n\nexports.version = '1.5.0';\n\n/*!\n * Primary `Assertion` prototype\n */\n\nexports.Assertion = require('./chai/assertion');\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('./chai/error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(this, util);\n    used.push(fn);\n  }\n\n  return this;\n};\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n//@ sourceURL=chaijs-chai/lib/chai.js"
));
require.register("chaijs-chai/lib/chai/assertion.js", Function("exports, require, module",
"/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies.\n */\n\nvar AssertionError = require('./error')\n  , util = require('./utils')\n  , flag = util.flag;\n\n/*!\n * Module export.\n */\n\nmodule.exports = Assertion;\n\n\n/*!\n * Assertion Constructor\n *\n * Creates object for chaining.\n *\n * @api private\n */\n\nfunction Assertion (obj, msg, stack) {\n  flag(this, 'ssfi', stack || arguments.callee);\n  flag(this, 'object', obj);\n  flag(this, 'message', msg);\n}\n\n/*!\n  * ### Assertion.includeStack\n  *\n  * User configurable property, influences whether stack trace\n  * is included in Assertion error message. Default of false\n  * suppresses stack trace in the error message\n  *\n  *     Assertion.includeStack = true;  // enable stack on error\n  *\n  * @api public\n  */\n\nAssertion.includeStack = false;\n\n/*!\n * ### Assertion.showDiff\n *\n * User configurable property, influences whether or not\n * the `showDiff` flag should be included in the thrown\n * AssertionErrors. `false` will always be `false`; `true`\n * will be true when the assertion has requested a diff\n * be shown.\n *\n * @api public\n */\n\nAssertion.showDiff = true;\n\nAssertion.addProperty = function (name, fn) {\n  util.addProperty(this.prototype, name, fn);\n};\n\nAssertion.addMethod = function (name, fn) {\n  util.addMethod(this.prototype, name, fn);\n};\n\nAssertion.addChainableMethod = function (name, fn, chainingBehavior) {\n  util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n};\n\nAssertion.overwriteProperty = function (name, fn) {\n  util.overwriteProperty(this.prototype, name, fn);\n};\n\nAssertion.overwriteMethod = function (name, fn) {\n  util.overwriteMethod(this.prototype, name, fn);\n};\n\n/*!\n * ### .assert(expression, message, negateMessage, expected, actual)\n *\n * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n *\n * @name assert\n * @param {Philosophical} expression to be tested\n * @param {String} message to display if fails\n * @param {String} negatedMessage to display if negated expression fails\n * @param {Mixed} expected value (remember to check for negation)\n * @param {Mixed} actual (optional) will default to `this.obj`\n * @api private\n */\n\nAssertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n  var ok = util.test(this, arguments);\n  if (true !== showDiff) showDiff = false;\n  if (true !== Assertion.showDiff) showDiff = false;\n\n  if (!ok) {\n    var msg = util.getMessage(this, arguments)\n      , actual = util.getActual(this, arguments);\n    throw new AssertionError({\n        message: msg\n      , actual: actual\n      , expected: expected\n      , stackStartFunction: (Assertion.includeStack) ? this.assert : flag(this, 'ssfi')\n      , showDiff: showDiff\n    });\n  }\n};\n\n/*!\n * ### ._obj\n *\n * Quick reference to stored `actual` value for plugin developers.\n *\n * @api private\n */\n\nObject.defineProperty(Assertion.prototype, '_obj',\n  { get: function () {\n      return flag(this, 'object');\n    }\n  , set: function (val) {\n      flag(this, 'object', val);\n    }\n});\n//@ sourceURL=chaijs-chai/lib/chai/assertion.js"
));
require.register("chaijs-chai/lib/chai/error.js", Function("exports, require, module",
"/*!\n * chai\n * Copyright(c) 2011-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Main export\n */\n\nmodule.exports = AssertionError;\n\n/**\n * # AssertionError (constructor)\n *\n * Create a new assertion error based on the Javascript\n * `Error` prototype.\n *\n * **Options**\n * - message\n * - actual\n * - expected\n * - operator\n * - startStackFunction\n *\n * @param {Object} options\n * @api public\n */\n\nfunction AssertionError (options) {\n  options = options || {};\n  this.message = options.message;\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  this.showDiff = options.showDiff;\n\n  if (options.stackStartFunction && Error.captureStackTrace) {\n    var stackStartFunction = options.stackStartFunction;\n    Error.captureStackTrace(this, stackStartFunction);\n  }\n}\n\n/*!\n * Inherit from Error\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\nAssertionError.prototype.name = 'AssertionError';\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * # toString()\n *\n * Override default to string method\n */\n\nAssertionError.prototype.toString = function() {\n  return this.message;\n};\n//@ sourceURL=chaijs-chai/lib/chai/error.js"
));
require.register("chaijs-chai/lib/chai/core/assertions.js", Function("exports, require, module",
"/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , toString = Object.prototype.toString\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provide as chainable getters to\n   * improve the readability of your assertions. They\n   * do not provide an testing capability unless they\n   * have been overwritten by a plugin.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - and\n   * - have\n   * - with\n   * - at\n   * - of\n   *\n   * @name language chains\n   * @api public\n   */\n\n  [ 'to', 'be', 'been'\n  , 'is', 'and', 'have'\n  , 'with', 'that', 'at'\n  , 'of' ].forEach(function (chain) {\n    Assertion.addProperty(chain, function () {\n      return this;\n    });\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates any of assertions following in the chain.\n   *\n   *     expect(foo).to.not.equal('bar');\n   *     expect(goodFn).to.not.throw(Error);\n   *     expect({ foo: 'baz' }).to.have.property('foo')\n   *       .and.not.equal('bar');\n   *\n   * @name not\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Sets the `deep` flag, later used by the `equal` and\n   * `property` assertions.\n   *\n   *     expect(foo).to.deep.equal({ bar: 'baz' });\n   *     expect({ foo: { bar: { baz: 'quux' } } })\n   *       .to.have.deep.property('foo.bar.baz', 'quux');\n   *\n   * @name deep\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .a(type)\n   *\n   * The `a` and `an` assertions are aliases that can be\n   * used either as language chains or to assert a value's\n   * type.\n   *\n   *     // typeof\n   *     expect('test').to.be.a('string');\n   *     expect({ foo: 'bar' }).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *\n   *     // language chain\n   *     expect(foo).to.be.an.instanceof(Foo);\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj)\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(value)\n   *\n   * The `include` and `contain` assertions can be used as either property\n   * based language chains or as methods to assert the inclusion of an object\n   * in an array or a substring in a string. When used as language chains,\n   * they toggle the `contain` flag for the `keys` assertion.\n   *\n   *     expect([1,2,3]).to.include(2);\n   *     expect('foobar').to.contain('foo');\n   *     expect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n   *\n   * @name include\n   * @alias contain\n   * @param {Object|String|Number} obj\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n    this.assert(\n        ~obj.indexOf(val)\n      , 'expected #{this} to include ' + _.inspect(val)\n      , 'expected #{this} to not include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is truthy.\n   *\n   *     expect('everthing').to.be.ok;\n   *     expect(1).to.be.ok;\n   *     expect(false).to.not.be.ok;\n   *     expect(undefined).to.not.be.ok;\n   *     expect(null).to.not.be.ok;\n   *\n   * @name ok\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is `true`.\n   *\n   *     expect(true).to.be.true;\n   *     expect(1).to.not.be.true;\n   *\n   * @name true\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , this.negate ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is `false`.\n   *\n   *     expect(false).to.be.false;\n   *     expect(0).to.not.be.false;\n   *\n   * @name false\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , this.negate ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is `null`.\n   *\n   *     expect(null).to.be.null;\n   *     expect(undefined).not.to.be.null;\n   *\n   * @name null\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is `undefined`.\n   *\n   *      expect(undefined).to.be.undefined;\n   *      expect(null).to.not.be.undefined;\n   *\n   * @name undefined\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi'\n   *       , bar = null\n   *       , baz;\n   *\n   *     expect(foo).to.exist;\n   *     expect(bar).to.not.exist;\n   *     expect(baz).to.not.exist;\n   *\n   * @name exist\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    this.assert(\n        null != flag(this, 'object')\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n\n  /**\n   * ### .empty\n   *\n   * Asserts that the target's length is `0`. For arrays, it checks\n   * the `length` property. For objects, it gets the count of\n   * enumerable keys.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *     expect({}).to.be.empty;\n   *\n   * @name empty\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var obj = flag(this, 'object')\n      , expected = obj;\n\n    if (Array.isArray(obj) || 'string' === typeof object) {\n      expected = obj.length;\n    } else if (typeof obj === 'object') {\n      expected = Object.keys(obj).length;\n    }\n\n    this.assert(\n        !expected\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an arguments object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   * @name arguments\n   * @alias Arguments\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = Object.prototype.toString.call(obj);\n    this.assert(\n        '[object Arguments]' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(value)\n   *\n   * Asserts that the target is strictly equal (`===`) to `value`.\n   * Alternately, if the `deep` flag is set, asserts that\n   * the target is deeply equal to `value`.\n   *\n   *     expect('hello').to.equal('hello');\n   *     expect(42).to.equal(42);\n   *     expect(1).to.not.equal(true);\n   *     expect({ foo: 'bar' }).to.not.equal({ foo: 'bar' });\n   *     expect({ foo: 'bar' }).to.deep.equal({ foo: 'bar' });\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @alias deep.equal\n   * @param {Mixed} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      return this.eql(val);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(value)\n   *\n   * Asserts that the target is deeply equal to `value`.\n   *\n   *     expect({ foo: 'bar' }).to.eql({ foo: 'bar' });\n   *     expect([ 1, 2, 3 ]).to.eql([ 1, 2, 3 ]);\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(value)\n   *\n   * Asserts that the target is greater than `value`.\n   *\n   *     expect(10).to.be.above(5);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a minimum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.above(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len > n\n        , 'expected #{this} to have a length above #{exp} but got #{act}'\n        , 'expected #{this} to not have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above ' + n\n        , 'expected #{this} to be at most ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(value)\n   *\n   * Asserts that the target is greater than or equal to `value`.\n   *\n   *     expect(10).to.be.at.least(10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a minimum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.of.at.least(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.of.at.least(3);\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len >= n\n        , 'expected #{this} to have a length at least #{exp} but got #{act}'\n        , 'expected #{this} to have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least ' + n\n        , 'expected #{this} to be below ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(value)\n   *\n   * Asserts that the target is less than `value`.\n   *\n   *     expect(5).to.be.below(10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a maximum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.below(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len < n\n        , 'expected #{this} to have a length below #{exp} but got #{act}'\n        , 'expected #{this} to not have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below ' + n\n        , 'expected #{this} to be at least ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(value)\n   *\n   * Asserts that the target is less than or equal to `value`.\n   *\n   *     expect(5).to.be.at.most(5);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a maximum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.of.at.most(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.of.at.most(3);\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len <= n\n        , 'expected #{this} to have a length at most #{exp} but got #{act}'\n        , 'expected #{this} to have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most ' + n\n        , 'expected #{this} to be above ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish)\n   *\n   * Asserts that the target is within a range.\n   *\n   *     expect(7).to.be.within(5,10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a length range. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.within(2,4);\n   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n   *\n   * @name within\n   * @param {Number} start lowerbound inclusive\n   * @param {Number} finish upperbound inclusive\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , range = start + '..' + finish;\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len >= start && len <= finish\n        , 'expected #{this} to have a length within ' + range\n        , 'expected #{this} to not have a length within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor)\n   *\n   * Asserts that the target is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , Chai = new Tea('chai');\n   *\n   *     expect(Chai).to.be.an.instanceof(Tea);\n   *     expect([ 1, 2, 3 ]).to.be.instanceof(Array);\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} message _optional_\n   * @alias instanceOf\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n    var name = _.getName(constructor);\n    this.assert(\n        flag(this, 'object') instanceof constructor\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name, [value])\n   *\n   * Asserts that the target has a property `name`, optionally asserting that\n   * the value of that property is strictly equal to  `value`.\n   * If the `deep` flag is set, you can use dot- and bracket-notation for deep\n   * references into objects and arrays.\n   *\n   *     // simple referencing\n   *     var obj = { foo: 'bar' };\n   *     expect(obj).to.have.property('foo');\n   *     expect(obj).to.have.property('foo', 'bar');\n   *\n   *     // deep referencing\n   *     var deepObj = {\n   *         green: { tea: 'matcha' }\n   *       , teas: [ 'chai', 'matcha', { tea: 'konacha' } ]\n   *     };\n\n   *     expect(deepObj).to.have.deep.property('green.tea', 'matcha');\n   *     expect(deepObj).to.have.deep.property('teas[1]', 'matcha');\n   *     expect(deepObj).to.have.deep.property('teas[2].tea', 'konacha');\n   *\n   * You can also use an array as the starting point of a `deep.property`\n   * assertion, or traverse nested arrays.\n   *\n   *     var arr = [\n   *         [ 'chai', 'matcha', 'konacha' ]\n   *       , [ { tea: 'chai' }\n   *         , { tea: 'matcha' }\n   *         , { tea: 'konacha' } ]\n   *     ];\n   *\n   *     expect(arr).to.have.deep.property('[0][1]', 'matcha');\n   *     expect(arr).to.have.deep.property('[1][2].tea', 'konacha');\n   *\n   * Furthermore, `property` changes the subject of the assertion\n   * to be the value of that property from the original object. This\n   * permits for further chainable assertions on that property.\n   *\n   *     expect(obj).to.have.property('foo')\n   *       .that.is.a('string');\n   *     expect(deepObj).to.have.property('green')\n   *       .that.is.an('object')\n   *       .that.deep.equals({ tea: 'matcha' });\n   *     expect(deepObj).to.have.property('teas')\n   *       .that.is.an('array')\n   *       .with.deep.property('[2]')\n   *         .that.deep.equals({ tea: 'konacha' });\n   *\n   * @name property\n   * @alias deep.property\n   * @param {String} name\n   * @param {Mixed} value (optional)\n   * @param {String} message _optional_\n   * @returns value of property for chaining\n   * @api public\n   */\n\n  Assertion.addMethod('property', function (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var descriptor = flag(this, 'deep') ? 'deep property ' : 'property '\n      , negate = flag(this, 'negate')\n      , obj = flag(this, 'object')\n      , value = flag(this, 'deep')\n        ? _.getPathValue(name, obj)\n        : obj[name];\n\n    if (negate && undefined !== val) {\n      if (undefined === value) {\n        msg = (msg != null) ? msg + ': ' : '';\n        throw new Error(msg + _.inspect(obj) + ' has no ' + descriptor + _.inspect(name));\n      }\n    } else {\n      this.assert(\n          undefined !== value\n        , 'expected #{this} to have a ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (undefined !== val) {\n      this.assert(\n          val === value\n        , 'expected #{this} to have a ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  });\n\n\n  /**\n   * ### .ownProperty(name)\n   *\n   * Asserts that the target has an own property `name`.\n   *\n   *     expect('test').to.have.ownProperty('length');\n   *\n   * @name ownProperty\n   * @alias haveOwnProperty\n   * @param {String} name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertOwnProperty (name, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        obj.hasOwnProperty(name)\n      , 'expected #{this} to have own property ' + _.inspect(name)\n      , 'expected #{this} to not have own property ' + _.inspect(name)\n    );\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .length(value)\n   *\n   * Asserts that the target's `length` property has\n   * the expected value.\n   *\n   *     expect([ 1, 2, 3]).to.have.length(3);\n   *     expect('foobar').to.have.length(6);\n   *\n   * Can also be used as a chain precursor to a value\n   * comparison for the length property.\n   *\n   *     expect('foo').to.have.length.above(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n   *     expect('foo').to.have.length.below(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n   *     expect('foo').to.have.length.within(2,4);\n   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n   *\n   * @name length\n   * @alias lengthOf\n   * @param {Number} length\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).to.have.property('length');\n    var len = obj.length;\n\n    this.assert(\n        len == n\n      , 'expected #{this} to have a length of #{exp} but got #{act}'\n      , 'expected #{this} to not have a length of #{act}'\n      , n\n      , len\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addMethod('lengthOf', assertLength, assertLengthChain);\n\n  /**\n   * ### .match(regexp)\n   *\n   * Asserts that the target matches a regular expression.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * @name match\n   * @param {RegExp} RegularExpression\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  Assertion.addMethod('match', function (re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  });\n\n  /**\n   * ### .string(string)\n   *\n   * Asserts that the string target contains another string.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * @name string\n   * @param {String} string\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n\n  /**\n   * ### .keys(key1, [key2], [...])\n   *\n   * Asserts that the target has exactly the given keys, or\n   * asserts the inclusion of some keys when using the\n   * `include` or `contain` modifiers.\n   *\n   *     expect({ foo: 1, bar: 2 }).to.have.keys(['foo', 'bar']);\n   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.keys('foo', 'bar');\n   *\n   * @name keys\n   * @alias key\n   * @param {String...|Array} keys\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , str\n      , ok = true;\n\n    keys = keys instanceof Array\n      ? keys\n      : Array.prototype.slice.call(arguments);\n\n    if (!keys.length) throw new Error('keys required');\n\n    var actual = Object.keys(obj)\n      , len = keys.length;\n\n    // Inclusion\n    ok = keys.every(function(key){\n      return ~actual.indexOf(key);\n    });\n\n    // Strict\n    if (!flag(this, 'negate') && !flag(this, 'contains')) {\n      ok = ok && keys.length == actual.length;\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key){\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      str = keys.join(', ') + ', and ' + last;\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + str\n      , 'expected #{this} to not ' + str\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw(constructor)\n   *\n   * Asserts that the function target will throw a specific error, or specific type of error\n   * (as determined using `instanceof`), optionally with a RegExp or string inclusion test\n   * for the error's message.\n   *\n   *     var err = new ReferenceError('This is a bad function.');\n   *     var fn = function () { throw err; }\n   *     expect(fn).to.throw(ReferenceError);\n   *     expect(fn).to.throw(Error);\n   *     expect(fn).to.throw(/bad function/);\n   *     expect(fn).to.not.throw('good function');\n   *     expect(fn).to.throw(ReferenceError, /bad function/);\n   *     expect(fn).to.throw(err);\n   *     expect(fn).to.not.throw(new RangeError('Out of range.'));\n   *\n   * Please note that when a throw expectation is negated, it will check each\n   * parameter independently, starting with error constructor type. The appropriate way\n   * to check for the existence of a type of error but for a message that does not match\n   * is to use `and`.\n   *\n   *     expect(fn).to.throw(ReferenceError)\n   *        .and.not.throw(/good function/);\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {ErrorConstructor} constructor\n   * @param {String|RegExp} expected error message\n   * @param {String} message _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @api public\n   */\n\n  function assertThrows (constructor, errMsg, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).is.a('function');\n\n    var thrown = false\n      , desiredError = null\n      , name = null\n      , thrownError = null;\n\n    if (arguments.length === 0) {\n      errMsg = null;\n      constructor = null;\n    } else if (constructor && (constructor instanceof RegExp || 'string' === typeof constructor)) {\n      errMsg = constructor;\n      constructor = null;\n    } else if (constructor && constructor instanceof Error) {\n      desiredError = constructor;\n      constructor = null;\n      errMsg = null;\n    } else if (typeof constructor === 'function') {\n      name = (new constructor()).name;\n    } else {\n      constructor = null;\n    }\n\n    try {\n      obj();\n    } catch (err) {\n      // first, check desired error\n      if (desiredError) {\n        this.assert(\n            err === desiredError\n          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n          , 'expected #{this} to not throw #{exp}'\n          , desiredError\n          , err\n        );\n\n        return this;\n      }\n      // next, check constructor\n      if (constructor) {\n        this.assert(\n            err instanceof constructor\n          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n          , 'expected #{this} to not throw #{exp} but #{act} was thrown'\n          , name\n          , err\n        );\n\n        if (!errMsg) return this;\n      }\n      // next, check message\n      var message = 'object' === _.type(err) && \"message\" in err\n        ? err.message\n        : '' + err;\n\n      if ((message != null) && errMsg && errMsg instanceof RegExp) {\n        this.assert(\n            errMsg.exec(message)\n          , 'expected #{this} to throw error matching #{exp} but got #{act}'\n          , 'expected #{this} to throw error not matching #{exp}'\n          , errMsg\n          , message\n        );\n\n        return this;\n      } else if ((message != null) && errMsg && 'string' === typeof errMsg) {\n        this.assert(\n            ~message.indexOf(errMsg)\n          , 'expected #{this} to throw error including #{exp} but got #{act}'\n          , 'expected #{this} to throw error not including #{act}'\n          , errMsg\n          , message\n        );\n\n        return this;\n      } else {\n        thrown = true;\n        thrownError = err;\n      }\n    }\n\n    var actuallyGot = ''\n      , expectedThrown = name !== null\n        ? name\n        : desiredError\n          ? '#{exp}' //_.inspect(desiredError)\n          : 'an error';\n\n    if (thrown) {\n      actuallyGot = ' but #{act} was thrown'\n    }\n\n    this.assert(\n        thrown === true\n      , 'expected #{this} to throw ' + expectedThrown + actuallyGot\n      , 'expected #{this} to not throw ' + expectedThrown + actuallyGot\n      , desiredError\n      , thrownError\n    );\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method)\n   *\n   * Asserts that the object or class target will respond to a method.\n   *\n   *     Klass.prototype.bar = function(){};\n   *     expect(Klass).to.respondTo('bar');\n   *     expect(obj).to.respondTo('bar');\n   *\n   * To check if a constructor will respond to a static function,\n   * set the `itself` flag.\n   *\n   *    Klass.baz = function(){};\n   *    expect(Klass).itself.to.respondTo('baz');\n   *\n   * @name respondTo\n   * @param {String} method\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  Assertion.addMethod('respondTo', function (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === _.type(obj) && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  });\n\n  /**\n   * ### .itself\n   *\n   * Sets the `itself` flag, later used by the `respondTo` assertion.\n   *\n   *    function Foo() {}\n   *    Foo.bar = function() {}\n   *    Foo.prototype.baz = function() {}\n   *\n   *    expect(Foo).itself.to.respondTo('bar');\n   *    expect(Foo).itself.not.to.respondTo('baz');\n   *\n   * @name itself\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(method)\n   *\n   * Asserts that the target passes a given truth test.\n   *\n   *     expect(1).to.satisfy(function(num) { return num > 0; });\n   *\n   * @name satisfy\n   * @param {Function} matcher\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  Assertion.addMethod('satisfy', function (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        matcher(obj)\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , this.negate ? false : true\n      , matcher(obj)\n    );\n  });\n\n  /**\n   * ### .closeTo(expected, delta)\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *\n   * @name closeTo\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  Assertion.addMethod('closeTo', function (expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  });\n\n};\n//@ sourceURL=chaijs-chai/lib/chai/core/assertions.js"
));
require.register("chaijs-chai/lib/chai/interface/assert.js", Function("exports, require, module",
"/*!\n * chai\n * Copyright(c) 2011-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n\nmodule.exports = function (chai, util) {\n\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    throw new chai.AssertionError({\n        actual: actual\n      , expected: expected\n      , message: message\n      , operator: operator\n      , stackStartFunction: assert.fail\n    });\n  };\n\n  /**\n   * ### .ok(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.ok('everything', 'everything is ok');\n   *     assert.ok(false, 'this will fail');\n   *\n   * @name ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ok = function (val, msg) {\n    new Assertion(val, msg).is.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.not.eql(exp);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg).is['true'];\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg).is['false'];\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(null);\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object (as revealed by\n   * `Object.prototype.toString`).\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object.\n   *\n   *     var selection = 'chai'\n   *     assert.isObject(selection, 'tea selection is not an object');\n   *     assert.isObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('number');\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg).to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Works\n   * for strings and arrays.\n   *\n   *     assert.include('foobar', 'bar', 'foobar contains string \"bar\"');\n   *     assert.include([ 1, 2, 3 ], 3, 'array contains value');\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    var obj = new Assertion(exp, msg);\n\n    if (Array.isArray(exp)) {\n      obj.to.include(inc);\n    } else if ('string' === typeof exp) {\n      obj.to.contain.string(inc);\n    }\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a property named by `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.not.have.property(prop);\n  };\n\n  /**\n   * ### .deepProperty(object, property, [message])\n   *\n   * Asserts that `object` has a property named by `property`, which can be a\n   * string using dot- and bracket-notation for deep reference.\n   *\n   *     assert.deepProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name deepProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.have.deep.property(prop);\n  };\n\n  /**\n   * ### .notDeepProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for deep reference.\n   *\n   *     assert.notDeepProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notDeepProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.not.have.deep.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`.\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.have.property(prop, val);\n  };\n\n  /**\n   * ### .propertyNotVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property`, but with a value\n   * different from that given by `value`.\n   *\n   *     assert.propertyNotVal({ tea: 'is good' }, 'tea', 'is bad');\n   *\n   * @name propertyNotVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.propertyNotVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for deep\n   * reference.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyNotVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property`, but with a value\n   * different from that given by `value`. `property` can use dot- and\n   * bracket-notation for deep reference.\n   *\n   *     assert.deepPropertyNotVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *\n   * @name deepPropertyNotVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepPropertyNotVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` property with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 5, 'string has length of 6');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg).to.have.length(len);\n  };\n\n  /**\n   * ### .throws(function, [constructor/string/regexp], [string/regexp], [message])\n   *\n   * Asserts that `function` will throw an error that is an instance of\n   * `constructor`, or alternately that it will throw an error with message\n   * matching `regexp`.\n   *\n   *     assert.throw(fn, 'function throws a reference error');\n   *     assert.throw(fn, /function throws a reference error/);\n   *     assert.throw(fn, ReferenceError);\n   *     assert.throw(fn, ReferenceError, 'function throws a reference error');\n   *     assert.throw(fn, ReferenceError, /function throws a reference error/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} function\n   * @param {ErrorConstructor} constructor\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @api public\n   */\n\n  assert.Throw = function (fn, errt, errs, msg) {\n    if ('string' === typeof errt || errt instanceof RegExp) {\n      errs = errt;\n      errt = null;\n    }\n\n    new Assertion(fn, msg).to.Throw(errt, errs);\n  };\n\n  /**\n   * ### .doesNotThrow(function, [constructor/regexp], [message])\n   *\n   * Asserts that `function` will _not_ throw an error that is an instance of\n   * `constructor`, or alternately that it will not throw an error with message\n   * matching `regexp`.\n   *\n   *     assert.doesNotThrow(fn, Error, 'function does not throw');\n   *\n   * @name doesNotThrow\n   * @param {Function} function\n   * @param {ErrorConstructor} constructor\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, type, msg) {\n    if ('string' === typeof type) {\n      msg = type;\n      type = null;\n    }\n\n    new Assertion(fn, msg).to.not.Throw(type);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    if (!~['==', '===', '>', '>=', '<', '<=', '!=', '!=='].indexOf(operator)) {\n      throw new Error('Invalid operator \"' + operator + '\"');\n    }\n    var test = new Assertion(eval(val + operator + val2), msg);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg).to.be.closeTo(exp, delta);\n  };\n\n  /*!\n   * Undocumented / untested\n   */\n\n  assert.ifError = function (val, msg) {\n    new Assertion(val, msg).to.not.be.ok;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('Throw', 'throw')\n  ('Throw', 'throws');\n};\n//@ sourceURL=chaijs-chai/lib/chai/interface/assert.js"
));
require.register("chaijs-chai/lib/chai/interface/expect.js", Function("exports, require, module",
"/*!\n * chai\n * Copyright(c) 2011-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n};\n\n//@ sourceURL=chaijs-chai/lib/chai/interface/expect.js"
));
require.register("chaijs-chai/lib/chai/interface/should.js", Function("exports, require, module",
"/*!\n * chai\n * Copyright(c) 2011-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should',\n      {\n        set: function (value) {\n          // See https://github.com/chaijs/chai/issues/86: this makes\n          // `whatever.should = someValue` actually set `someValue`, which is\n          // especially useful for `global.should = require('chai').should()`.\n          //\n          // Note that we have to use [[DefineProperty]] instead of [[Put]]\n          // since otherwise we would trigger this very setter!\n          Object.defineProperty(this, 'should', {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n          });\n        }\n      , get: function(){\n          if (this instanceof String || this instanceof Number) {\n            return new Assertion(this.constructor(this));\n          } else if (this instanceof Boolean) {\n            return new Assertion(this == true);\n          }\n          return new Assertion(this);\n        }\n      , configurable: true\n    });\n\n    var should = {};\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n//@ sourceURL=chaijs-chai/lib/chai/interface/should.js"
));
require.register("chaijs-chai/lib/chai/utils/addChainableMethod.js", Function("exports, require, module",
"/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `__proto__` is supported\nvar hasProtoSupport = '__proto__' in Object;\n\n// Without `__proto__` support, this module will need to add properties to a function.\n// However, some Function.prototype methods cannot be overwritten,\n// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).\nvar excludeNames = /^(?:length|name|arguments|caller)$/;\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### addChainableMethod (ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function')\n    chainingBehavior = function () { };\n\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        chainingBehavior.call(this);\n\n        var assert = function () {\n          var result = method.apply(this, arguments);\n          return result === undefined ? this : result;\n        };\n\n        // Use `__proto__` if available\n        if (hasProtoSupport) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = assert.__proto__ = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (!excludeNames.test(asserterName)) {\n              var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n              Object.defineProperty(assert, asserterName, pd);\n            }\n          });\n        }\n\n        transferFlags(this, assert);\n        return assert;\n      }\n    , configurable: true\n  });\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/addChainableMethod.js"
));
require.register("chaijs-chai/lib/chai/utils/addMethod.js", Function("exports, require, module",
"/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .addMethod (ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @name addMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method) {\n  ctx[name] = function () {\n    var result = method.apply(this, arguments);\n    return result === undefined ? this : result;\n  };\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/addMethod.js"
));
require.register("chaijs-chai/lib/chai/utils/addProperty.js", Function("exports, require, module",
"/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### addProperty (ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function (ctx, name, getter) {\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        var result = getter.call(this);\n        return result === undefined ? this : result;\n      }\n    , configurable: true\n  });\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/addProperty.js"
));
require.register("chaijs-chai/lib/chai/utils/eql.js", Function("exports, require, module",
"// This is (almost) directly from Node.js assert\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/assert.js\n\nmodule.exports = _deepEqual;\n\nvar getEnumerableProperties = require('./getEnumerableProperties');\n\n// for the browser\nvar Buffer;\ntry {\n  Buffer = require('buffer').Buffer;\n} catch (ex) {\n  Buffer = {\n    isBuffer: function () { return false; }\n  };\n}\n\nfunction _deepEqual(actual, expected, memos) {\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (Buffer.isBuffer(actual) && Buffer.isBuffer(expected)) {\n    if (actual.length != expected.length) return false;\n\n    for (var i = 0; i < actual.length; i++) {\n      if (actual[i] !== expected[i]) return false;\n    }\n\n    return true;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (typeof actual != 'object' && typeof expected != 'object') {\n    return actual === expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, memos);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, memos) {\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n\n  // check if we have already compared a and b\n  var i;\n  if (memos) {\n    for(i = 0; i < memos.length; i++) {\n      if ((memos[i][0] === a && memos[i][1] === b) ||\n          (memos[i][0] === b && memos[i][1] === a))\n        return true;\n    }\n  } else {\n    memos = [];\n  }\n\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, memos);\n  }\n  try {\n    var ka = getEnumerableProperties(a),\n        kb = getEnumerableProperties(b),\n        key;\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n\n  // remember objects we have compared to guard against circular references\n  memos.push([ a, b ]);\n\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], memos)) return false;\n  }\n\n  return true;\n}\n//@ sourceURL=chaijs-chai/lib/chai/utils/eql.js"
));
require.register("chaijs-chai/lib/chai/utils/flag.js", Function("exports, require, module",
"/*!\n * Chai - flag utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### flag(object ,key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object (constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @name flag\n * @api private\n */\n\nmodule.exports = function (obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/flag.js"
));
require.register("chaijs-chai/lib/chai/utils/getActual.js", Function("exports, require, module",
"/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * # getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n */\n\nmodule.exports = function (obj, args) {\n  var actual = args[4];\n  return 'undefined' !== typeof actual ? actual : obj._obj;\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/getActual.js"
));
require.register("chaijs-chai/lib/chai/utils/getEnumerableProperties.js", Function("exports, require, module",
"/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/getEnumerableProperties.js"
));
require.register("chaijs-chai/lib/chai/utils/getMessage.js", Function("exports, require, module",
"/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , inspect = require('./inspect')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Messsage template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function (obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  msg = msg || '';\n  msg = msg\n    .replace(/#{this}/g, objDisplay(val))\n    .replace(/#{act}/g, objDisplay(actual))\n    .replace(/#{exp}/g, objDisplay(expected));\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/getMessage.js"
));
require.register("chaijs-chai/lib/chai/utils/getName.js", Function("exports, require, module",
"/*!\n * Chai - getName utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * # getName(func)\n *\n * Gets the name of a function, in a cross-browser way.\n *\n * @param {Function} a function (usually a constructor)\n */\n\nmodule.exports = function (func) {\n  if (func.name) return func.name;\n\n  var match = /^\\s?function ([^(]*)\\(/.exec(func);\n  return match && match[1] ? match[1] : \"\";\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/getName.js"
));
require.register("chaijs-chai/lib/chai/utils/getPathValue.js", Function("exports, require, module",
"/*!\n * Chai - getPathValue utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\n/**\n * ### .getPathValue(path, object)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue('prop1.str', obj); // Hello\n *     getPathValue('prop1.att[2]', obj); // b\n *     getPathValue('prop2.arr[0].nested', obj); // Universe\n *\n * @param {String} path\n * @param {Object} object\n * @returns {Object} value or `undefined`\n * @name getPathValue\n * @api public\n */\n\nvar getPathValue = module.exports = function (path, obj) {\n  var parsed = parsePath(path);\n  return _getPathValue(parsed, obj);\n};\n\n/*!\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `_getPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be as near infinitely deep and nested\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath (path) {\n  var str = path.replace(/\\[/g, '.[')\n    , parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function (value) {\n    var re = /\\[(\\d+)\\]$/\n      , mArr = re.exec(value)\n    if (mArr) return { i: parseFloat(mArr[1]) };\n    else return { p: value };\n  });\n};\n\n/*!\n * ## _getPathValue(parsed, obj)\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(parsed, obj);\n *\n * @param {Object} parsed definition from `parsePath`.\n * @param {Object} object to search against\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction _getPathValue (parsed, obj) {\n  var tmp = obj\n    , res;\n  for (var i = 0, l = parsed.length; i < l; i++) {\n    var part = parsed[i];\n    if (tmp) {\n      if ('undefined' !== typeof part.p)\n        tmp = tmp[part.p];\n      else if ('undefined' !== typeof part.i)\n        tmp = tmp[part.i];\n      if (i == (l - 1)) res = tmp;\n    } else {\n      res = undefined;\n    }\n  }\n  return res;\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/getPathValue.js"
));
require.register("chaijs-chai/lib/chai/utils/getProperties.js", Function("exports, require, module",
"/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(subject);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(subject);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/getProperties.js"
));
require.register("chaijs-chai/lib/chai/utils/index.js", Function("exports, require, module",
"/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Main exports\n */\n\nvar exports = module.exports = {};\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('./type');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('./eql');\n\n/*!\n * Deep path value\n */\n\nexports.getPathValue = require('./getPathValue');\n\n/*!\n * Function name\n */\n\nexports.getName = require('./getName');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n//@ sourceURL=chaijs-chai/lib/chai/utils/index.js"
));
require.register("chaijs-chai/lib/chai/utils/inspect.js", Function("exports, require, module",
"// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('./getName');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\n\nmodule.exports = inspect;\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// https://gist.github.com/1044128/\nvar getOuterHTML = function(element) {\n  if ('outerHTML' in element) return element.outerHTML;\n  var ns = \"http://www.w3.org/1999/xhtml\";\n  var container = document.createElementNS(ns, '_');\n  var elemProto = (window.HTMLElement || window.Element).prototype;\n  var xmlSerializer = new XMLSerializer();\n  var html;\n  if (document.xmlVersion) {\n    return xmlSerializer.serializeToString(element);\n  } else {\n    container.appendChild(element.cloneNode(false));\n    html = container.innerHTML.replace('><', '>' + element.innerHTML + '<');\n    container.innerHTML = '';\n    return html;\n  }\n};\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    return value.inspect(recurseTimes);\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If it's DOM elem, get outer HTML.\n  if (isDOMElement(value)) {\n    return getOuterHTML(value);\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  // Some type of object without properties can be shortcutted.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      var name = getName(value);\n      var nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    var name = getName(value);\n    var nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str;\n  if (value.__lookupGetter__) {\n    if (value.__lookupGetter__(key)) {\n      if (value.__lookupSetter__(key)) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (value.__lookupSetter__(key)) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n//@ sourceURL=chaijs-chai/lib/chai/utils/inspect.js"
));
require.register("chaijs-chai/lib/chai/utils/objDisplay.js", Function("exports, require, module",
"/*!\n * Chai - flag utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar inspect = require('./inspect');\n\n/**\n * ### .objDisplay (object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @api public\n */\n\nmodule.exports = function (obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (str.length >= 40) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/objDisplay.js"
));
require.register("chaijs-chai/lib/chai/utils/overwriteMethod.js", Function("exports, require, module",
"/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteMethod (ctx, name, fn)\n *\n * Overwites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () { return this; };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  ctx[name] = function () {\n    var result = method(_super).apply(this, arguments);\n    return result === undefined ? this : result;\n  }\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/overwriteMethod.js"
));
require.register("chaijs-chai/lib/chai/utils/overwriteProperty.js", Function("exports, require, module",
"/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteProperty (ctx, name, fn)\n *\n * Overwites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function (ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        var result = getter(_super).call(this);\n        return result === undefined ? this : result;\n      }\n    , configurable: true\n  });\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/overwriteProperty.js"
));
require.register("chaijs-chai/lib/chai/utils/test.js", Function("exports, require, module",
"/*!\n * Chai - test utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag');\n\n/**\n * # test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n */\n\nmodule.exports = function (obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/test.js"
));
require.register("chaijs-chai/lib/chai/utils/transferFlags.js", Function("exports, require, module",
"/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, and `message`)\n * will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAsseriton = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags too; usually a new assertion\n * @param {Boolean} includeAll\n * @name getAllFlags\n * @api private\n */\n\nmodule.exports = function (assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/transferFlags.js"
));
require.register("chaijs-chai/lib/chai/utils/type.js", Function("exports, require, module",
"/*!\n * Chai - type utility\n * Copyright(c) 2012-2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Detectable javascript natives\n */\n\nvar natives = {\n    '[object Arguments]': 'arguments'\n  , '[object Array]': 'array'\n  , '[object Date]': 'date'\n  , '[object Function]': 'function'\n  , '[object Number]': 'number'\n  , '[object RegExp]': 'regexp'\n  , '[object String]': 'string'\n};\n\n/**\n * ### type(object)\n *\n * Better implementation of `typeof` detection that can\n * be used cross-browser. Handles the inconsistencies of\n * Array, `null`, and `undefined` detection.\n *\n *     utils.type({}) // 'object'\n *     utils.type(null) // `null'\n *     utils.type(undefined) // `undefined`\n *     utils.type([]) // `array`\n *\n * @param {Mixed} object to detect type of\n * @name type\n * @api private\n */\n\nmodule.exports = function (obj) {\n  var str = Object.prototype.toString.call(obj);\n  if (natives[str]) return natives[str];\n  if (obj === null) return 'null';\n  if (obj === undefined) return 'undefined';\n  if (obj === Object(obj)) return 'object';\n  return typeof obj;\n};\n//@ sourceURL=chaijs-chai/lib/chai/utils/type.js"
));
require.register("talkshow.js/build/main.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var AccessibilityModeNavCol, AccessibilityModePlain, AccessibilityModeShabanaj, Talkshow;\n\n  Talkshow = require('./lib/Talkshow');\n\n  AccessibilityModeNavCol = require('./lib/AccessibilityModeNavCol');\n\n  AccessibilityModeShabanaj = require('./lib/AccessibilityModeShabanaj');\n\n  AccessibilityModePlain = require('./lib/AccessibilityModePlain');\n\n  $(function() {\n    var accessibilityMode, getQuery, query, talkshow;\n\n    getQuery = function() {\n      var m, queryString, re, result;\n\n      result = {};\n      queryString = location.search.substring(1);\n      re = /([^&=]+)=([^&]*)/g;\n      while (m = re.exec(queryString)) {\n        result[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n      }\n      return result;\n    };\n    $(\"#editSwitch\").change(function() {\n      if ($(this).attr(\"checked\")) {\n        return $(\"body\").addClass(\"editMode\");\n      } else {\n        return $(\"body\").removeClass(\"editMode\");\n      }\n    });\n    window.isEditMode = function() {\n      return $('.editMode').length !== 0;\n    };\n    $(\"#export\").click(function() {\n      $(\"#export\").hide();\n      return talkshow[\"export\"](\"zip\", function(err, link) {\n        console.log(\"export callback triggered\");\n        $(\"#export\").show();\n        return location.href = link;\n      });\n    });\n    $(\".dialog\").hide();\n    query = getQuery();\n    if (query.test != null) {\n      console.log(\"running tests!\");\n      require('./test/zip-test');\n      return;\n    }\n    accessibilityMode = new AccessibilityModeNavCol();\n    if (query.mode === \"shabanaj\") {\n      accessibilityMode = new AccessibilityModeShabanaj();\n    } else if (query.mode === \"plain\") {\n      accessibilityMode = new AccessibilityModePlain();\n    }\n    return talkshow = new Talkshow(accessibilityMode, function(err) {\n      if (err) {\n        return $(\"body\").html(\"Failed to initialize Talkshow: \" + err);\n      } else {\n        return $('#storageIdentifier').html(talkshow.storage.toString());\n      }\n    });\n  });\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/main.js"
));
require.register("talkshow.js/build/test/zip-test.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var StorageMock, ZIPExporter, expect, runner;\n\n  require('mocha');\n\n  mocha.setup('bdd');\n\n  expect = require('chai').expect;\n\n  ZIPExporter = require('../lib/ZIPExporter');\n\n  StorageMock = (function() {\n    function StorageMock(data) {\n      this.data = data;\n    }\n\n    StorageMock.prototype.get = function(id, cb) {\n      return cb(null, this.data[id] || null);\n    };\n\n    StorageMock.prototype.save = function(id, doc, cb) {\n      this.data[id] = doc;\n      return cb(null);\n    };\n\n    return StorageMock;\n\n  })();\n\n  describe(\"Zip Exporter\", function() {\n    var storage;\n\n    storage = new StorageMock({\n      root: {\n        value: 1\n      },\n      node_1_cells: {\n        '0/0': 2,\n        '0/1': 3\n      },\n      cell_2: {\n        label: 'foo'\n      },\n      cell_3: {\n        label: 'bar'\n      }\n    });\n    it(\"can be created\", function(done) {\n      expect(new ZIPExporter).to.exist;\n      return done();\n    });\n    return it(\"produces a link and no error\", function(done) {\n      var exporter;\n\n      exporter = new ZIPExporter;\n      return exporter[\"export\"](storage, function(err, link) {\n        try {\n          expect(err).not.to.exist;\n          expect(link).to.exist;\n          expect(link).to.include(\"data:\");\n          console.log(link);\n          return done();\n        } catch (_error) {\n          err = _error;\n          return done(err);\n        }\n      });\n    });\n  });\n\n  mocha.checkLeaks();\n\n  runner = mocha.run();\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/test/zip-test.js"
));
require.register("talkshow.js/build/lib/KeyboardInput.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var KeyboardInput,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  KeyboardInput = (function() {\n    function KeyboardInput() {\n      this.handleKey = __bind(this.handleKey, this);\n      var _this = this;\n\n      this.modalKeyHandlers = [];\n      this.keyHandler = null;\n      $(window).keyup(function(e) {\n        var _ref;\n\n        if (_this.modalKeyHandlers.length !== 0) {\n          return (_ref = _(_this.modalKeyHandlers).last()) != null ? _ref.handleKey(e) : void 0;\n        } else {\n          if (!isEditMode()) {\n            return _this.handleKey(e);\n          }\n        }\n      });\n    }\n\n    KeyboardInput.prototype.pushModalKeyHandler = function(kh) {\n      console.log(\"pushModalKeyHandler\");\n      if (this.modalKeyHandlers.length === 0) {\n        if (this.keyHandler != null) {\n          this.keyHandler.enterModal();\n        }\n      }\n      return this.modalKeyHandlers.push(kh);\n    };\n\n    KeyboardInput.prototype.popModalKeyHandler = function() {\n      this.modalKeyHandlers.pop();\n      if (this.modalKeyHandlers.length === 0) {\n        if (this.keyHandler != null) {\n          return this.keyHandler.leaveModal();\n        }\n      }\n    };\n\n    KeyboardInput.prototype.handleKey = function(e) {\n      if (this.keyHandler != null) {\n        return this.keyHandler.handleKey(e);\n      }\n    };\n\n    KeyboardInput.prototype.setKeyHandler = function(keyHandler) {\n      this.keyHandler = keyHandler;\n    };\n\n    return KeyboardInput;\n\n  })();\n\n  module.exports = new KeyboardInput();\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/KeyboardInput.js"
));
require.register("talkshow.js/build/lib/DefaultKeyboardHandler.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var DefaultKeyboardHandler,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  DefaultKeyboardHandler = (function() {\n    function DefaultKeyboardHandler(delegate) {\n      this.handleKey = __bind(this.handleKey, this);      this.delegate = delegate;\n      this.rowCount = $(\"#grid tr\").length;\n      this.colCount = $(\"#grid tr:eq(1) td\").length;\n      this.setFocusPosition(0, 0);\n    }\n\n    DefaultKeyboardHandler.prototype.isInMenu = function(e) {\n      return this.focusPosition().left === 0;\n    };\n\n    DefaultKeyboardHandler.prototype.playNavigationSound = function() {\n      return $(\".keyboardFocus audio\").each(function() {\n        return this.play();\n      });\n    };\n\n    DefaultKeyboardHandler.prototype.enterModal = function() {};\n\n    DefaultKeyboardHandler.prototype.leaveModal = function() {};\n\n    DefaultKeyboardHandler.prototype.handleKey = function(e) {\n      var timerCallback,\n        _this = this;\n\n      switch (String.fromCharCode(e.keyCode)) {\n        case 'M':\n          if (this.isInMenu()) {\n            this.setFocusPosition(1, 0);\n            this.playNavigationSound();\n            timerCallback = function() {\n              _this.timeoutID = window.setTimeout(timerCallback, 1000);\n              _this.splitStep(1);\n              return _this.playNavigationSound();\n            };\n            this.timeoutID = window.setTimeout(timerCallback, 1000);\n          } else {\n            this.setFocusPosition(0, 0);\n            window.clearTimeout(this.timeoutID);\n          }\n          break;\n        default:\n          switch (e.keyCode) {\n            case 37:\n              this.splitStep(-1);\n              break;\n            case 39:\n              this.splitStep(1);\n              break;\n            case 38:\n              this.move(0, -1);\n              break;\n            case 40:\n              this.move(0, 1);\n              break;\n            case 13:\n              this.enter();\n              break;\n            case 32:\n              break;\n            default:\n              return true;\n          }\n      }\n      return false;\n    };\n\n    DefaultKeyboardHandler.prototype.enter = function() {\n      var focusPos,\n        _this = this;\n\n      focusPos = this.focusPosition();\n      if (focusPos != null) {\n        return this.delegate.enterCell(focusPos.left, focusPos.top, function() {});\n      }\n    };\n\n    DefaultKeyboardHandler.prototype.focusPosition = function() {\n      var cell, row, x, y;\n\n      if ($(\".keyboardFocus\").length === 1) {\n        cell = $(\".keyboardFocus\");\n        row = cell.closest(\"tr\");\n        x = cell.index();\n        y = row.index();\n        return {\n          left: x,\n          top: y\n        };\n      } else {\n        return null;\n      }\n    };\n\n    DefaultKeyboardHandler.prototype.setFocusPosition = function(x, y) {\n      $(\"td\").removeClass(\"keyboardFocus\");\n      return $(\"#grid tr\").eq(y).find(\"td\").eq(x).addClass(\"keyboardFocus\");\n    };\n\n    DefaultKeyboardHandler.prototype.move = function(dx, dy) {\n      var cell, cells, focusPos, row, rows, x, y;\n\n      if ($(\".keyboardFocus\").length === 0) {\n        rows = $(\"#grid tr\");\n        row = rows.eq(Math.floor(rows.length / 2));\n        cells = row.find(\"td\");\n        cell = cells.eq(Math.floor(cells.length / 2));\n        return cell.addClass(\"keyboardFocus\");\n      } else {\n        focusPos = this.focusPosition();\n        x = focusPos.left;\n        y = focusPos.top;\n        x += dx;\n        y += dy;\n        if (x >= this.colCount) {\n          x = 0;\n        }\n        if (x < 0) {\n          x = this.colCount - 1;\n        }\n        if (y >= this.rowCount) {\n          y = 0;\n        }\n        if (y < 0) {\n          y = this.rowCount - 1;\n        }\n        return this.setFocusPosition(x, y);\n      }\n    };\n\n    DefaultKeyboardHandler.prototype.step = function(d, sx, sy, ex, ey) {\n      var cell, cells, focusPos, row, rows, x, y;\n\n      if (sx == null) {\n        sx = 0;\n      }\n      if (sy == null) {\n        sy = 0;\n      }\n      if (ex == null) {\n        ex = this.colCount - 1;\n      }\n      if (ey == null) {\n        ey = this.rowCount - 1;\n      }\n      if ($(\".keyboardFocus\").length === 0) {\n        rows = $(\"#grid tr\");\n        row = rows.eq(sy);\n        cells = row.find(\"td\");\n        cell = cells.eq(sx);\n        return cell.addClass(\"keyboardFocus\");\n      } else {\n        focusPos = this.focusPosition();\n        x = focusPos.left;\n        y = focusPos.top;\n        x += d;\n        if (x < sx) {\n          x = ex;\n          y--;\n        }\n        if (x > ex) {\n          x = sx;\n          y++;\n        }\n        if (y < sy) {\n          y = ey;\n          x = ex;\n        }\n        if (y > ey) {\n          x = sx;\n          y = sy;\n        }\n        return this.setFocusPosition(x, y);\n      }\n    };\n\n    DefaultKeyboardHandler.prototype.splitStep = function(d) {\n      if (!this.isInMenu()) {\n        return this.step(d, 1, 0, this.colCount - 1, this.rowCount - 1);\n      } else {\n        return this.step(d, 0, 0, 0, this.rowCount - 1);\n      }\n    };\n\n    return DefaultKeyboardHandler;\n\n  })();\n\n  module.exports = DefaultKeyboardHandler;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/DefaultKeyboardHandler.js"
));
require.register("talkshow.js/build/lib/BlindKeyboardHandler.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var BlindKeyboardHandler,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  BlindKeyboardHandler = (function() {\n    function BlindKeyboardHandler(delegate) {\n      this.handleKey = __bind(this.handleKey, this);      this.delegate = delegate;\n      this.rowCount = $(\"#grid tr\").length;\n      this.colCount = $(\"#grid tr:eq(1) td\").length;\n      this.setFocusPosition(0, 0);\n    }\n\n    BlindKeyboardHandler.prototype.enterModal = function() {\n      return this.stopTimer();\n    };\n\n    BlindKeyboardHandler.prototype.leaveModal = function() {\n      if (!this.isInMenu()) {\n        return this.startTimer();\n      }\n    };\n\n    BlindKeyboardHandler.prototype.isInMenu = function(e) {\n      return this.focusPosition().left === 0;\n    };\n\n    BlindKeyboardHandler.prototype.currentAudioDuration = function() {\n      if ($(\".keyboardFocus audio\").attr('src') != null) {\n        return $(\".keyboardFocus audio\")[0].duration;\n      }\n      return null;\n    };\n\n    BlindKeyboardHandler.prototype.playNavigationSound = function() {\n      this.stopNavigationSound();\n      if ($(\".keyboardFocus audio\").attr('src') != null) {\n        $(\".keyboardFocus audio\").each(function() {\n          return this.play();\n        });\n        return true;\n      }\n      return false;\n    };\n\n    BlindKeyboardHandler.prototype.stopNavigationSound = function() {\n      return $(\"#grid audio\").each(function() {\n        return this.pause();\n      });\n    };\n\n    BlindKeyboardHandler.prototype.handleKey = function(e) {\n      switch (String.fromCharCode(e.keyCode)) {\n        case 'J':\n          if (this.isInMenu()) {\n            this.setFocusPosition(0, 0);\n            this.playNavigationSound();\n          } else {\n            this.enter();\n          }\n          break;\n        case 'N':\n          if (this.isInMenu()) {\n            this.setFocusPosition(0, 1);\n            this.playNavigationSound();\n          } else {\n            this.pop(function() {\n              return null;\n            });\n          }\n          break;\n        case 'M':\n          if (this.isInMenu()) {\n            this.setFocusPosition(1, 0);\n            this.playNavigationSound();\n            this.startTimer();\n          } else {\n            this.setFocusPosition(0, 0);\n            this.stopTimer();\n          }\n          break;\n        default:\n          switch (e.keyCode) {\n            case 37:\n              this.splitStep(-1);\n              break;\n            case 39:\n              this.splitStep(1);\n              break;\n            case 38:\n              this.move(0, -1);\n              break;\n            case 40:\n              this.move(0, 1);\n              break;\n            case 32:\n              break;\n            default:\n              return true;\n          }\n      }\n      return false;\n    };\n\n    BlindKeyboardHandler.prototype.getScannerDelay = function() {\n      var audioms, minms;\n\n      minms = parseInt($(\"#scannerDelay\").val() || 1000);\n      audioms = this.currentAudioDuration();\n      audioms = audioms === null ? 0 : audioms * 1000;\n      console.log(\"getScannerDelay\", audioms);\n      if (minms > audioms) {\n        return minms;\n      } else {\n        return audioms;\n      }\n    };\n\n    BlindKeyboardHandler.prototype.startTimer = function() {\n      var timerCallback,\n        _this = this;\n\n      this.stopTimer();\n      timerCallback = function() {\n        var played, startField;\n\n        console.log(\"set timeoutID to  \" + _this.timeoutID);\n        startField = $(\".keyboardFocus\")[0];\n        played = false;\n        while (!played) {\n          _this.splitStep(1);\n          played = _this.playNavigationSound();\n          if (startField === $(\".keyboardFocus\")[0]) {\n            break;\n          }\n        }\n        return _this.timeoutID = window.setTimeout(timerCallback, _this.getScannerDelay());\n      };\n      this.timeoutID = window.setTimeout(timerCallback, this.getScannerDelay());\n      return console.log(\"set timeoutID to  \" + this.timeoutID);\n    };\n\n    BlindKeyboardHandler.prototype.stopTimer = function() {\n      if (this.timeoutID != null) {\n        console.log(\"STOP timer\");\n        window.clearTimeout(this.timeoutID);\n        return this.timeoutID = null;\n      } else {\n        return console.log(\"not stopping, timeoutID is \" + this.timeoutID);\n      }\n    };\n\n    BlindKeyboardHandler.prototype.enter = function() {\n      var focusPos,\n        _this = this;\n\n      this.stopTimer();\n      this.stopNavigationSound();\n      focusPos = this.focusPosition();\n      if (focusPos != null) {\n        return this.delegate.enterCell(focusPos.left, focusPos.top, function(err, result) {\n          console.log(\"set focus pos to 1/0\");\n          if ((result != null) && (\"content\" in result)) {\n\n          } else {\n            _this.setFocusPosition(1, 0);\n            _this.playNavigationSound();\n            return _this.startTimer();\n          }\n        });\n      }\n    };\n\n    BlindKeyboardHandler.prototype.pop = function(cb) {\n      var _ref,\n        _this = this;\n\n      this.stopTimer();\n      return (_ref = this.delegate) != null ? _ref.pop(function() {\n        _this.setFocusPosition(1, 0);\n        _this.playNavigationSound();\n        _this.startTimer();\n        return cb(null);\n      }) : void 0;\n    };\n\n    BlindKeyboardHandler.prototype.focusPosition = function() {\n      var cell, row, x, y;\n\n      if ($(\".keyboardFocus\").length === 1) {\n        cell = $(\".keyboardFocus\");\n        row = cell.closest(\"tr\");\n        x = cell.index();\n        y = row.index();\n        return {\n          left: x,\n          top: y\n        };\n      } else {\n        return {\n          left: 0,\n          top: 0\n        };\n      }\n    };\n\n    BlindKeyboardHandler.prototype.setFocusPosition = function(x, y) {\n      $(\"#grid td\").removeClass(\"keyboardFocus\");\n      return $(\"#grid tr\").eq(y).find(\"td\").eq(x).addClass(\"keyboardFocus\");\n    };\n\n    BlindKeyboardHandler.prototype.move = function(dx, dy) {\n      var cell, cells, focusPos, row, rows, x, y;\n\n      if ($(\".keyboardFocus\").length === 0) {\n        rows = $(\"#grid tr\");\n        row = rows.eq(Math.floor(rows.length / 2));\n        cells = row.find(\"td\");\n        cell = cells.eq(Math.floor(cells.length / 2));\n        return cell.addClass(\"keyboardFocus\");\n      } else {\n        focusPos = this.focusPosition();\n        x = focusPos.left;\n        y = focusPos.top;\n        x += dx;\n        y += dy;\n        if (x >= this.colCount) {\n          x = 0;\n        }\n        if (x < 0) {\n          x = this.colCount - 1;\n        }\n        if (y >= this.rowCount) {\n          y = 0;\n        }\n        if (y < 0) {\n          y = this.rowCount - 1;\n        }\n        return this.setFocusPosition(x, y);\n      }\n    };\n\n    BlindKeyboardHandler.prototype.step = function(d, sx, sy, ex, ey) {\n      var cell, cells, focusPos, row, rows, x, y;\n\n      if (sx == null) {\n        sx = 0;\n      }\n      if (sy == null) {\n        sy = 0;\n      }\n      if (ex == null) {\n        ex = this.colCount - 1;\n      }\n      if (ey == null) {\n        ey = this.rowCount - 1;\n      }\n      if ($(\".keyboardFocus\").length === 0) {\n        rows = $(\"#grid tr\");\n        row = rows.eq(sy);\n        cells = row.find(\"td\");\n        cell = cells.eq(sx);\n        return cell.addClass(\"keyboardFocus\");\n      } else {\n        focusPos = this.focusPosition();\n        x = focusPos.left;\n        y = focusPos.top;\n        x += d;\n        if (x < sx) {\n          x = ex;\n          y--;\n        }\n        if (x > ex) {\n          x = sx;\n          y++;\n        }\n        if (y < sy) {\n          y = ey;\n          x = ex;\n        }\n        if (y > ey) {\n          x = sx;\n          y = sy;\n        }\n        return this.setFocusPosition(x, y);\n      }\n    };\n\n    BlindKeyboardHandler.prototype.splitStep = function(d) {\n      if (!this.isInMenu()) {\n        return this.step(d, 1, 0, this.colCount - 1, this.rowCount - 1);\n      } else {\n        return this.step(d, 0, 0, 0, this.rowCount - 1);\n      }\n    };\n\n    return BlindKeyboardHandler;\n\n  })();\n\n  module.exports = BlindKeyboardHandler;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/BlindKeyboardHandler.js"
));
require.register("talkshow.js/build/lib/DataSource.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var AudioPlayer, CellFactory, DataSource, ImagePlayer;\n\n  CellFactory = require('./CellFactory');\n\n  AudioPlayer = require('./AudioPlayer');\n\n  ImagePlayer = require('./ImagePlayer');\n\n  DataSource = (function() {\n    function DataSource(args, cb) {\n      var _ref,\n        _this = this;\n\n      this.grid = args.grid, this.level = args.level, this.nodeId = args.nodeId, this.parent = args.parent, this.position = args.position, this.delegate = args.delegate, this.storage = args.storage;\n      if ((_ref = this.level) == null) {\n        this.level = 1;\n      }\n      this.cells = {};\n      this.children = {};\n      this.factory = new CellFactory({\n        labelTextChanged: function(cell, text, cb) {\n          return _this.save(cell, \"label\", text, cb);\n        },\n        contentChanged: function(cell, aspect, dataUri, cb) {\n          return _this.save(cell, aspect, dataUri, cb);\n        },\n        cellChanged: function(cell, cb) {\n          return _this.save(cell, \"cell\", cb);\n        }\n      }, args);\n      this.initialize(cb);\n    }\n\n    DataSource.prototype.initialize = function(cb) {\n      var _this = this;\n\n      if (this.nodeId != null) {\n        return async.parallel([\n          function(cb) {\n            return _this.storage.get(\"node_\" + _this.nodeId + \"_cells\", cb);\n          }, function(cb) {\n            return _this.storage.get(\"node_\" + _this.nodeId + \"_children\", cb);\n          }\n        ], function(err, results) {\n          var _ref, _ref1;\n\n          if (err != null) {\n            return cb(err);\n          }\n          _this.cells = results[0], _this.children = results[1];\n          if ((_ref = _this.cells) == null) {\n            _this.cells = {};\n          }\n          if ((_ref1 = _this.children) == null) {\n            _this.children = {};\n          }\n          return cb(null, _this);\n        });\n      } else {\n        return cb(null, this);\n      }\n    };\n\n    DataSource.prototype.setChild = function(pos, id, cb) {\n      var _this = this;\n\n      this.children[\"\" + pos.x + \"/\" + pos.y] = id;\n      return this.ensureNodeId(function(err) {\n        if (err != null) {\n          return cb(err);\n        }\n        return _this.storage.save(\"node_\" + _this.nodeId + \"_children\", _this.children, cb);\n      });\n    };\n\n    DataSource.prototype.ensureNodeId = function(cb) {\n      var _this = this;\n\n      if (this.nodeId == null) {\n        return window.uniqueId(function(err, id) {\n          if (err) {\n            return cb(err);\n          }\n          _this.nodeId = id;\n          if (_this.parent != null) {\n            return _this.parent.setChild(_this.position, id, cb);\n          } else {\n            console.log(\"root nodeId is \" + _this.nodeId);\n            return _this.storage.save(\"root\", {\n              value: _this.nodeId\n            }, cb);\n          }\n        });\n      } else {\n        return cb(null);\n      }\n    };\n\n    DataSource.prototype.setCellId = function(cell, id, cb) {\n      var row, x, y,\n        _this = this;\n\n      row = cell.closest(\"tr\");\n      x = cell.index();\n      y = row.index();\n      cell.attr(\"id\", id);\n      this.cells[\"\" + x + \"/\" + y] = id;\n      console.log(\"cell \" + x + \"/\" + y + \" changed id: \" + id);\n      return this.ensureNodeId(function(err) {\n        if (_this.nodeId == null) {\n          alert(\"No nodeId after ensureNodeId\");\n        }\n        if (err != null) {\n          return cb(err);\n        }\n        return _this.storage.save(\"node_\" + _this.nodeId + \"_cells\", _this.cells, cb);\n      });\n    };\n\n    DataSource.prototype.ensureCellId = function(cell, cb) {\n      var id,\n        _this = this;\n\n      console.log(\"ensureCellId\");\n      id = cell.attr(\"id\");\n      if (id != null) {\n        return cb(null);\n      }\n      console.log(\"calling uniqueId\");\n      return window.uniqueId(function(err, id) {\n        console.log(\"uniqueId returned \" + err + \", \" + id);\n        if (err != null) {\n          return cb(err);\n        }\n        return _this.setCellId(cell, id, cb);\n      });\n    };\n\n    DataSource.prototype.save = function(cell, aspect, data, cb) {\n      var _this = this;\n\n      return this.ensureCellId(cell, function(err) {\n        var id;\n\n        if (err != null) {\n          return cb(err);\n        }\n        id = cell.attr('id');\n        console.log(\"saving \" + aspect + \" of cell \" + id);\n        return _this.storage.get(\"cell_\" + id, function(err, obj) {\n          if (err != null) {\n            return cb(err);\n          }\n          if (obj === null) {\n            obj = {};\n          }\n          obj[aspect] = data;\n          return _this.storage.save(\"cell_\" + id, obj, cb);\n        });\n      });\n    };\n\n    DataSource.prototype.colorForCell = function(x, y) {\n      var color, index;\n\n      index = x + y * 4 % 6 + 1;\n      color = index.toString(2);\n      color = \"000\".substr(0, 3 - color.length) + color;\n      color = color.replace(/1/g, \"255,\").replace(/0/g, \"112,\");\n      color += \".3\";\n      color = \"rgba(\" + color + \")\";\n      return color;\n    };\n\n    DataSource.prototype.cellData = function(x, y, cb) {\n      var ensureLabel, id, key, obj,\n        _this = this;\n\n      ensureLabel = function(o, level, nodeId) {\n        if (!(\"label\" in o)) {\n          return o.label = \"level\" + level + \"(#\" + nodeId + \"): \" + x + \"/\" + y;\n        }\n      };\n      obj = {};\n      key = \"\" + x + \"/\" + y;\n      if (key in this.cells) {\n        id = this.cells[key];\n        return this.storage.get(\"cell_\" + id, function(err, obj) {\n          if (err != null) {\n            return cb(err);\n          }\n          if (obj == null) {\n            obj = {};\n          }\n          obj.id = id;\n          ensureLabel(obj, _this.level, _this.nodeId);\n          return cb(null, obj);\n        });\n      } else {\n        ensureLabel(obj, this.level, this.nodeId);\n        return cb(null, obj);\n      }\n    };\n\n    DataSource.prototype.enterCell = function(x, y, cb) {\n      var childNodeId, key,\n        _this = this;\n\n      console.log(\"entering cell \" + x + \"/\" + y);\n      childNodeId = null;\n      if (this.children) {\n        key = \"\" + x + \"/\" + y;\n        if (key in this.children) {\n          childNodeId = this.children[key];\n        }\n      }\n      console.log(\"nodeId\", childNodeId);\n      return this.cellData(x, y, function(err, data) {\n        var audioPlayer, imagePlayer;\n\n        if (err != null) {\n          return cb(err);\n        }\n        if (data.sound) {\n          audioPlayer = new AudioPlayer(data.sound);\n          return cb(null, {\n            content: 'sound'\n          });\n        } else if (data.photo) {\n          imagePlayer = new ImagePlayer(data.photo);\n          return cb(null, {\n            content: 'photo'\n          });\n        }\n        if (_this.delegate != null) {\n          return _this.delegate.enteredCell(_this, {\n            x: x,\n            y: y\n          }, _this.level + 1, childNodeId, data, cb);\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    DataSource.prototype.cellForPosition = function(x, y, cb) {\n      var _this = this;\n\n      return this.cellData(x, y, function(err, data) {\n        var cell, color;\n\n        if (err != null) {\n          return cb(err);\n        }\n        color = _this.colorForCell(x, y);\n        cell = _this.factory.makeCell(data, color, {\n          x: x,\n          y: y\n        });\n        if (\"id\" in data) {\n          cell.attr(\"id\", data.id);\n        }\n        cell.click(function() {\n          return _this.enterCell(x, y, function() {});\n        });\n        return cb(null, cell);\n      });\n    };\n\n    return DataSource;\n\n  })();\n\n  module.exports = DataSource;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/DataSource.js"
));
require.register("talkshow.js/build/lib/CellFactory.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var CellFactory, ModalDialog, keyboardInput;\n\n  keyboardInput = require('./KeyboardInput');\n\n  ModalDialog = require('./ModalDialog');\n\n  CellFactory = (function() {\n    function CellFactory(delegate, options) {\n      this.delegate = delegate;\n      this.options = options;\n    }\n\n    CellFactory.prototype.makeLabel = function(text) {\n      var self;\n\n      self = this;\n      return $(\"<div>\").html(text).addClass('label').click(function() {\n        var label, parent;\n\n        if (!isEditMode()) {\n          return true;\n        }\n        label = $(this);\n        parent = label.parent();\n        keyboardInput.pushModalKeyHandler(null);\n        $(\"<input>\").val(label.html()).addClass(\"label\").click(function() {\n          return false;\n        }).keypress(function(e) {\n          if (e.keyCode === 13) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).blur();\n            return false;\n          }\n        }).blur(function() {\n          var newText, _ref,\n            _this = this;\n\n          newText = $(this).val();\n          return (_ref = self.delegate) != null ? _ref.labelTextChanged(parent, newText, function(err) {\n            if (err == null) {\n              $(_this).remove();\n              label.html(newText);\n              label.show();\n              return keyboardInput.popModalKeyHandler();\n            } else {\n              return window.alert(\"Unable to save: \" + err);\n            }\n          }) : void 0;\n        }).insertAfter(label);\n        parent.find('input').focus();\n        label.hide();\n        return false;\n      });\n    };\n\n    CellFactory.prototype.setContent = function(cell, aspect, dataUri) {\n      var audio, icon;\n\n      if (aspect === 'backgroundImage') {\n        aspect = 'background';\n      }\n      icon = cell.children('.icon');\n      audio = cell.find('audio');\n      cell.find(\".iconbar .\" + aspect + \".iconbarItem\")[dataUri ? 'show' : 'hide']();\n      if (aspect === \"navigationSound\" && dataUri) {\n        cell.removeClass(\"showInEditMode\");\n      }\n      switch (aspect) {\n        case 'background':\n          return cell.css('background-image', dataUri ? \"url(\" + dataUri + \")\" : 'none');\n        case 'icon':\n          if (dataUri) {\n            icon.attr('src', dataUri);\n            return icon.show();\n          } else {\n            icon.attr('src', '');\n            return icon.hide();\n          }\n          break;\n        case 'navigationSound':\n          return audio.attr('src', dataUri || '');\n      }\n    };\n\n    CellFactory.prototype.handleDrop = function(cell, dataUri, mimeType, coordinates) {\n      var dialog, dialogClass, majorType,\n        _this = this;\n\n      majorType = mimeType.split(\"/\")[0];\n      console.log(\"handleDrop\", majorType);\n      dialogClass = coordinates.x !== 0 ? \"otherRows\" : \"firstRow\";\n      switch (majorType) {\n        case 'audio':\n          return dialog = new ModalDialog(\".soundDropped .dialog.\" + dialogClass, function(aspect) {\n            var _ref;\n\n            if (aspect) {\n              _this.setContent(cell, aspect, dataUri);\n              return (_ref = _this.delegate) != null ? _ref.contentChanged(cell, aspect, dataUri, function(err) {\n                if (err == null) {\n                  if (aspect === 'navigationSound') {\n                    return cell.find('audio')[0].play();\n                  }\n                } else {\n                  return window.alert(\"contentChanged failed: \" + err);\n                }\n              }) : void 0;\n            }\n          });\n        case 'image':\n          return dialog = new ModalDialog(\".imageDropped .dialog.\" + dialogClass, function(aspect) {\n            var _ref;\n\n            if (aspect) {\n              _this.setContent(cell, aspect, dataUri);\n              return (_ref = _this.delegate) != null ? _ref.contentChanged(cell, aspect, dataUri, function(err) {\n                if (err != null) {\n                  return window.alert(\"contentChanged failed: \" + err);\n                }\n              }) : void 0;\n            }\n          });\n      }\n    };\n\n    CellFactory.prototype.makeIconBar = function(data) {\n      var iconBar, inEditMode, makeIconBarItem, self;\n\n      iconBar = $('<div>').addClass('iconbar');\n      inEditMode = $(\"<div>\").addClass(\"showInEditMode\");\n      iconBar.append(inEditMode);\n      self = this;\n      makeIconBarItem = function(aspect, imageURL) {\n        return $('<img>').hide().addClass(aspect).addClass('iconbarItem').attr('src', imageURL).click(function() {\n          var cell, dialog,\n            _this = this;\n\n          if (!isEditMode()) {\n            return true;\n          }\n          cell = iconBar.closest(\"td\");\n          dialog = new ModalDialog(\".delete .\" + aspect + \" .dialog\", function(name) {\n            var _ref;\n\n            if (name === 'delete') {\n              return (_ref = self.delegate) != null ? _ref.contentChanged(cell, aspect, null, function(err) {\n                if (err == null) {\n                  cell = iconBar.closest('td');\n                  return self.setContent(cell, aspect, null);\n                } else {\n                  return alert(\"contentChanged failed: \" + err);\n                }\n              }) : void 0;\n            }\n          });\n          return false;\n        });\n      };\n      inEditMode.append(makeIconBarItem('icon', 'icons/icon.png'));\n      inEditMode.append(makeIconBarItem('background', 'icons/background.png'));\n      iconBar.append(makeIconBarItem('photo', 'icons/86-camera@2x.png'));\n      iconBar.append(makeIconBarItem('navigationSound', 'icons/08-chat@2x.png'));\n      return iconBar.append(makeIconBarItem('sound', 'icons/65-note@2x.png'));\n    };\n\n    CellFactory.prototype.makeCell = function(data, color, coordinates) {\n      var aspect, audio, cell, image, label, self, _i, _len, _ref, _ref1, _ref2;\n\n      label = (_ref = data.label) != null ? _ref : 'n/a';\n      image = $('<img>').addClass(\"icon\");\n      audio = $('<audio>');\n      self = this;\n      cell = $('<td>').append(this.makeIconBar(data)).append(audio).append(image).append(this.makeLabel(label)).css('background-color', color);\n      if ((_ref1 = this.options) != null ? _ref1.userIsBlind : void 0) {\n        cell.addClass(\"showInEditMode\");\n      }\n      cell.bind('dragenter', function(evt) {\n        $(this).addClass('dragTarget');\n        evt.stopPropagation();\n        evt.preventDefault();\n        return true;\n      });\n      cell.bind('dragleave', function(evt) {\n        $(this).removeClass('dragTarget');\n        evt.stopPropagation();\n        evt.preventDefault();\n        return true;\n      });\n      cell.bind('dragover', function(evt) {\n        evt.stopPropagation();\n        return evt.preventDefault();\n      });\n      cell.bind('drop', function(evt) {\n        var files;\n\n        $(this).removeClass('dragTarget');\n        cell = $(this);\n        evt.stopPropagation();\n        evt.preventDefault();\n        files = evt.originalEvent.dataTransfer.files;\n        return _(files).each(function(file) {\n          var reader;\n\n          console.log(\"type: \" + file.type);\n          console.log(\"path: \" + file.mozFullPath);\n          reader = new FileReader();\n          reader.onloadend = function() {\n            var dataUri;\n\n            dataUri = reader.result;\n            return self.handleDrop(cell, dataUri, file.type, coordinates);\n          };\n          return reader.readAsDataURL(file);\n        });\n      });\n      _ref2 = ['background', 'icon', 'sound', 'photo', 'navigationSound'];\n      for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n        aspect = _ref2[_i];\n        if (aspect in data) {\n          this.setContent(cell, aspect, data[aspect]);\n        }\n      }\n      return cell;\n    };\n\n    return CellFactory;\n\n  })();\n\n  module.exports = CellFactory;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/CellFactory.js"
));
require.register("talkshow.js/build/lib/NavigationController.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var NavigationController;\n\n  NavigationController = (function() {\n    function NavigationController(grid) {\n      this.grid = grid;\n      this.controllerStack = [];\n    }\n\n    NavigationController.prototype.getBreadCrumbs = function() {\n      var i, lis;\n\n      i = 0;\n      lis = _(this.controllerStack).map(function(dataSource) {\n        var title;\n\n        title = dataSource.navTitle || \"?\";\n        return \"<li><a index=\\\"\" + (i++) + \"\\\">\" + title + \"</a></li>\";\n      });\n      return _(['<ui class=\"breadcrumbs\">', lis, '</ui>']).flatten().join('');\n    };\n\n    NavigationController.prototype.push = function(newSource, cb) {\n      this.controllerStack.push(newSource);\n      return this.grid.reloadFromDataSource(newSource, cb);\n    };\n\n    NavigationController.prototype.pop = function(count, cb) {\n      var i, lastController, _i;\n\n      if (count instanceof Function) {\n        cb = count;\n        count = 1;\n      }\n      for (i = _i = 0; 0 <= count ? _i < count : _i > count; i = 0 <= count ? ++_i : --_i) {\n        this.controllerStack.pop();\n      }\n      lastController = _(this.controllerStack).last();\n      return this.grid.reloadFromDataSource(lastController, cb);\n    };\n\n    NavigationController.prototype.popToRoot = function(cb) {\n      var _this = this;\n\n      if (this.controllerStack.length > 1) {\n        return this.pop(function() {\n          return _this.popToRoot(cb);\n        });\n      } else {\n        return cb(null);\n      }\n    };\n\n    NavigationController.prototype.count = function() {\n      return this.controllerStack.length;\n    };\n\n    NavigationController.prototype.currentController = function() {\n      return _(this.controllerStack).last();\n    };\n\n    return NavigationController;\n\n  })();\n\n  module.exports = NavigationController;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/NavigationController.js"
));
require.register("talkshow.js/build/lib/AccessibilityModeNavCol.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var AccessibilityModeNavCol, DataSource, DefaultKeyHandler, SplitDataSource;\n\n  DataSource = require('./DataSource');\n\n  SplitDataSource = require('./SplitDataSource');\n\n  DefaultKeyHandler = require('./DefaultKeyboardHandler');\n\n  AccessibilityModeNavCol = (function() {\n    function AccessibilityModeNavCol() {}\n\n    AccessibilityModeNavCol.prototype.gridSize = {\n      columns: 4,\n      rows: 3\n    };\n\n    AccessibilityModeNavCol.prototype.getKeyHandlerClass = function() {\n      return DefaultKeyHandler;\n    };\n\n    AccessibilityModeNavCol.prototype.initializeDataSource = function(options, cb) {\n      var _this = this;\n\n      return new DataSource({\n        delegate: this,\n        grid: options.grid,\n        level: 1,\n        nodeId: \"navigation_column\",\n        storage: options.storage\n      }, function(err, navDataSource) {\n        _this.navDataSource = navDataSource;\n        if (err != null) {\n          return cb(err);\n        }\n        options.level = 1;\n        return _this.makeDataSource(options, cb);\n      });\n    };\n\n    AccessibilityModeNavCol.prototype.enteredCell = function(dataSource, position, level, nodeId, cellData, cb) {\n      var _ref;\n\n      if (dataSource === this.navDataSource) {\n        console.log(\"NavCol: \" + position.y);\n        if (position.y === 0) {\n          this.delegate.popToRoot(cb);\n        }\n        if (position.y === 1) {\n          return this.delegate.pop(cb);\n        }\n      } else {\n        dataSource = dataSource.splitDataSource;\n        return (_ref = this.delegate) != null ? _ref.enteredCell(dataSource, position, level, nodeId, cellData, cb) : void 0;\n      }\n    };\n\n    AccessibilityModeNavCol.prototype.makeDataSource = function(options, cb) {\n      var _this = this;\n\n      this.delegate = options.delegate;\n      options.delegate = this;\n      if (options.parent != null) {\n        options.parent = options.parent.ds2;\n      }\n      return new DataSource(options, function(err, myDataSource) {\n        var splitDataSource;\n\n        if (err != null) {\n          return cb(err);\n        }\n        splitDataSource = new SplitDataSource(_this.navDataSource, myDataSource, 1);\n        myDataSource.splitDataSource = splitDataSource;\n        return cb(null, splitDataSource);\n      });\n    };\n\n    return AccessibilityModeNavCol;\n\n  })();\n\n  module.exports = AccessibilityModeNavCol;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/AccessibilityModeNavCol.js"
));
require.register("talkshow.js/build/lib/AccessibilityModeShabanaj.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var AccessibilityModeShabanaj, DataSource, SplitDataSource;\n\n  DataSource = require('./DataSource');\n\n  SplitDataSource = require('./SplitDataSource');\n\n  AccessibilityModeShabanaj = (function() {\n    function AccessibilityModeShabanaj() {}\n\n    AccessibilityModeShabanaj.prototype.gridSize = {\n      columns: 4,\n      rows: 2\n    };\n\n    AccessibilityModeShabanaj.prototype.getKeyHandlerClass = function() {\n      return require('./BlindKeyboardHandler');\n    };\n\n    AccessibilityModeShabanaj.prototype.initializeDataSource = function(options, cb) {\n      var _this = this;\n\n      return new DataSource({\n        grid: options.grid,\n        level: 1,\n        nodeId: \"yes_no\",\n        storage: options.storage\n      }, function(err, yesNoDataSource) {\n        _this.yesNoDataSource = yesNoDataSource;\n        if (err != null) {\n          return cb(err);\n        }\n        options.level = 1;\n        return _this.makeDataSource(options, cb);\n      });\n    };\n\n    AccessibilityModeShabanaj.prototype.enteredCell = function(dataSource, position, level, nodeId, cellData, cb) {\n      var _ref;\n\n      dataSource = dataSource.splitDataSource;\n      return (_ref = this.delegate) != null ? _ref.enteredCell(dataSource, position, level, nodeId, cellData, cb) : void 0;\n    };\n\n    AccessibilityModeShabanaj.prototype.makeDataSource = function(options, cb) {\n      var _this = this;\n\n      this.delegate = options.delegate;\n      options.delegate = this;\n      if (options.parent != null) {\n        options.parent = options.parent.ds2;\n      }\n      options.userIsBlind = true;\n      return new DataSource(options, function(err, myDataSource) {\n        var splitDataSource;\n\n        if (err != null) {\n          return cb(err);\n        }\n        splitDataSource = new SplitDataSource(_this.yesNoDataSource, myDataSource, 1);\n        myDataSource.splitDataSource = splitDataSource;\n        return cb(null, splitDataSource);\n      });\n    };\n\n    return AccessibilityModeShabanaj;\n\n  })();\n\n  module.exports = AccessibilityModeShabanaj;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/AccessibilityModeShabanaj.js"
));
require.register("talkshow.js/build/lib/AccessibilityModePlain.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var AccessibilityModePlain, DataSource, DefaultKeyHandler;\n\n  DefaultKeyHandler = require('./DefaultKeyboardHandler');\n\n  DataSource = require('./DataSource');\n\n  AccessibilityModePlain = (function() {\n    function AccessibilityModePlain() {}\n\n    AccessibilityModePlain.prototype.gridSize = {\n      columns: 3,\n      rows: 3\n    };\n\n    AccessibilityModePlain.prototype.initializeDataSource = function(options, cb) {\n      return this.makeDataSource(options, cb);\n    };\n\n    AccessibilityModePlain.prototype.makeDataSource = function(options, cb) {\n      return new DataSource(options, cb);\n    };\n\n    AccessibilityModePlain.prototype.getKeyHandlerClass = function() {\n      return DefaultKeyHandler;\n    };\n\n    return AccessibilityModePlain;\n\n  })();\n\n  module.exports = AccessibilityModePlain;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/AccessibilityModePlain.js"
));
require.register("talkshow.js/build/lib/Talkshow.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var Grid, NavigationController, Settings, StorageFactory, Talkshow, ZIPExporter, keybordInput, setupUIDGenerator;\n\n  ZIPExporter = require('./ZIPExporter');\n\n  NavigationController = require('./NavigationController');\n\n  Grid = require('./Grid');\n\n  StorageFactory = require('./Storage').StorageFactory;\n\n  Settings = require('./Settings');\n\n  keybordInput = require('./KeyboardInput');\n\n  setupUIDGenerator = function(storage, cb) {\n    return storage.get(\"currId\", function(err, doc) {\n      var currId;\n\n      currId = (doc != null ? doc.value : void 0) || 0;\n      window.uniqueId = function(cb) {\n        var ret;\n\n        ret = currId;\n        currId++;\n        return storage.save(\"currId\", {\n          value: currId\n        }, function(err) {\n          return cb(err, ret);\n        });\n      };\n      return cb(err);\n    });\n  };\n\n  Talkshow = (function() {\n    Talkshow.prototype[\"export\"] = function(exporterName, cb) {\n      var exporter;\n\n      exporter = new ZIPExporter;\n      return exporter[\"export\"](this.storage, cb);\n    };\n\n    function Talkshow(accessibilityMode, cb) {\n      var _this = this;\n\n      this.accessibilityMode = accessibilityMode;\n      new StorageFactory().getBestStorage(function(err, result) {\n        var columns, grid, rows, _ref;\n\n        if (err != null) {\n          return cb(err);\n        }\n        _this.storage = result;\n        _ref = _this.accessibilityMode.gridSize, columns = _ref.columns, rows = _ref.rows;\n        grid = new Grid(columns, rows);\n        _this.navigationController = new NavigationController(grid);\n        _this = _this;\n        $(\".breadcrumbs a\").live('click', function(e) {\n          var i, l, popCount;\n\n          i = $(this).attr('index');\n          console.log(\"breadcrumb index is \" + i);\n          l = $(\".breadcrumbs li\").length;\n          popCount = l - i - 1;\n          if (popCount > 0) {\n            console.log(\"popping \" + popCount + \" levels\");\n            return _this.pop(popCount);\n          }\n        });\n        return async.parallel([\n          function(cb) {\n            return setupUIDGenerator(_this.storage, function(err) {\n              if (err != null) {\n                return cb(\"Failed to initialize UIDGenerator \" + err);\n              }\n              return cb(null, null);\n            });\n          }, function(cb) {\n            return _this.storage.get(\"root\", cb);\n          }, function(cb) {\n            return new Settings(_this.storage, cb);\n          }\n        ], function(err, _arg) {\n          var ignored, rootDoc, rootNodeId, settings;\n\n          ignored = _arg[0], rootDoc = _arg[1], settings = _arg[2];\n          if (err != null) {\n            return cb(err);\n          }\n          rootNodeId = (rootDoc != null ? rootDoc.value : void 0) || null;\n          console.log(\"rootNodeId\", rootNodeId);\n          return _this.accessibilityMode.initializeDataSource({\n            delegate: _this,\n            grid: grid,\n            storage: _this.storage,\n            nodeId: rootNodeId\n          }, function(err, newDataSource) {\n            if (err != null) {\n              return cb(err);\n            }\n            newDataSource.navTitle = \"Home\";\n            return _this.navigationController.push(newDataSource, function() {\n              var KeyHandlerClass;\n\n              KeyHandlerClass = _this.accessibilityMode.getKeyHandlerClass();\n              keybordInput.setKeyHandler(new KeyHandlerClass(_this));\n              _this.updateBreadcrumbs();\n              return cb(null, _this);\n            });\n          });\n        });\n      });\n    }\n\n    Talkshow.prototype.enterCell = function(x, y, cb) {\n      return this.navigationController.currentController().enterCell(x, y, cb);\n    };\n\n    Talkshow.prototype.updateBreadcrumbs = function() {\n      return $('#navBar').html(this.navigationController.getBreadCrumbs());\n    };\n\n    Talkshow.prototype.pop = function(count, cb) {\n      var _this = this;\n\n      if (count instanceof Function) {\n        cb = count;\n        count = 1;\n      }\n      if (this.navigationController.count() > 1) {\n        return this.navigationController.pop(count, function() {\n          _this.updateBreadcrumbs();\n          return cb(null);\n        });\n      } else {\n        return cb(null);\n      }\n    };\n\n    Talkshow.prototype.popToRoot = function(cb) {\n      var _this = this;\n\n      if (this.navigationController.count() > 1) {\n        return this.navigationController.popToRoot(function() {\n          _this.updateBreadcrumbs();\n          return cb(null);\n        });\n      } else {\n        return cb(null);\n      }\n    };\n\n    Talkshow.prototype.enteredCell = function(dataSource, position, level, nodeId, cellData, cb) {\n      var _this = this;\n\n      console.log(\"enteredCell \" + position.x + \"/\" + position.y + \" level: \" + level + \" nodeId: \" + nodeId + \" of data source \" + dataSource.navTitle);\n      return this.accessibilityMode.makeDataSource({\n        delegate: this,\n        grid: this.grid,\n        storage: this.storage,\n        parent: dataSource,\n        position: position,\n        level: level,\n        nodeId: nodeId,\n        cellData: cellData\n      }, function(err, newDataSource) {\n        if (err != null) {\n          return cb(err);\n        }\n        newDataSource.navTitle = (cellData != null ? cellData.label : void 0) || \">\";\n        return _this.navigationController.push(newDataSource, function() {\n          _this.updateBreadcrumbs();\n          return cb(null);\n        });\n      });\n    };\n\n    return Talkshow;\n\n  })();\n\n  module.exports = Talkshow;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/Talkshow.js"
));
require.register("talkshow.js/build/lib/Grid.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var Grid;\n\n  Grid = (function() {\n    function Grid(cols, rows, dataSource) {\n      this.cols = cols;\n      this.rows = rows;\n      this.dataSource = dataSource;\n      this.positions = {\n        vert: [],\n        horiz: []\n      };\n    }\n\n    Grid.prototype.reloadFromDataSource = function(dataSource, cb) {\n      var q, td, tr, x, y, _i, _ref, _results,\n        _this = this;\n\n      console.log(\"Loading data from source\");\n      if (cb === void 0) {\n        console.trace();\n      }\n      this.dataSource = dataSource;\n      q = async.queue(function(_arg, cb) {\n        var td, x, y;\n\n        td = _arg.td, x = _arg.x, y = _arg.y;\n        return dataSource.cellForPosition(x, y, function(err, newTd) {\n          if (err == null) {\n            td.replaceWith(newTd);\n          }\n          return cb(null);\n        });\n      }, 3);\n      q.drain = function() {\n        var x, y, _i, _j, _ref, _ref1;\n\n        for (y = _i = 0, _ref = _this.rows; 0 <= _ref ? _i < _ref : _i > _ref; y = 0 <= _ref ? ++_i : --_i) {\n          _this.positions.vert.push($(\"#grid table tr\").eq(y).offset().top);\n        }\n        for (x = _j = 0, _ref1 = _this.cols; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; x = 0 <= _ref1 ? ++_j : --_j) {\n          _this.positions.horiz.push($(\"#grid table tr\").eq(0).find(\"td\").eq(x).offset().left);\n        }\n        return cb(null);\n      };\n      $(\"#grid\").html(\"<table>\");\n      _results = [];\n      for (y = _i = 0, _ref = this.rows; 0 <= _ref ? _i < _ref : _i > _ref; y = 0 <= _ref ? ++_i : --_i) {\n        tr = $(\"<tr>\");\n        $(\"#grid table\").append(tr);\n        _results.push((function() {\n          var _j, _ref1, _results1;\n\n          _results1 = [];\n          for (x = _j = 0, _ref1 = this.cols; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; x = 0 <= _ref1 ? ++_j : --_j) {\n            td = $(\"<td>\");\n            tr.append(td);\n            _results1.push(q.push({\n              td: td,\n              x: x,\n              y: y\n            }));\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Grid.prototype.zoomIntoCell = function(x, y, cb) {\n      return cb();\n    };\n\n    return Grid;\n\n  })();\n\n  module.exports = Grid;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/Grid.js"
));
require.register("talkshow.js/build/lib/Settings.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var Settings,\n    __hasProp = {}.hasOwnProperty;\n\n  Settings = (function() {\n    function Settings(storage, cb) {\n      var self,\n        _this = this;\n\n      this.storage = storage;\n      $(\"#settings input.preference\").focus(function() {\n        return $(this).css(\"background-color\", \"yellow\");\n      });\n      self = this;\n      $(\"#settings input.preference\").change(function() {\n        var _this = this;\n\n        return self.savePreferences(function(err) {\n          if (err != null) {\n            return console.log(err);\n          } else {\n            return $(_this).css(\"background-color\", \"inherit\");\n          }\n        });\n      });\n      this.load(function(err) {\n        if ($(\"#colors li\").length === 0) {\n          _this.addDefaultColors();\n          _this.insertAddButton();\n          return _this.saveColors(function(err, res) {\n            return cb(null, _this);\n          });\n        } else {\n          _this.insertAddButton();\n          return cb(null, _this);\n        }\n      });\n    }\n\n    Settings.prototype.insertAddButton = function() {\n      var _this = this;\n\n      return $(\"#colors\").append($(\"<li>\").addClass(\"addButton\").html(\"+\").click(function() {\n        $(\"<li>\").css(\"background-color\", \"rgb(0,0,0)\").insertBefore(\"#colors .addButton\");\n        return _this.saveColors(function(err, res) {\n          if (err != null) {\n            return console.log(err);\n          }\n        });\n      }));\n    };\n\n    Settings.prototype.CSSColorFromArray = function(c) {\n      return \"rgb(\" + c[0] + \",\" + c[1] + \",\" + c[2] + \")\";\n    };\n\n    Settings.prototype.addDefaultColors = function() {\n      var c, colors, _i, _len, _results;\n\n      console.log(\"adding default colors\");\n      colors = [[255, 255, 127], [127, 127, 255], [255, 40, 40]];\n      _results = [];\n      for (_i = 0, _len = colors.length; _i < _len; _i++) {\n        c = colors[_i];\n        _results.push($(\"#colors\").append($(\"<li>\").css(\"background-color\", this.CSSColorFromArray(c))));\n      }\n      return _results;\n    };\n\n    Settings.prototype.saveColors = function(cb) {\n      var colorJSON, element, s;\n\n      colorJSON = \"[\" + ((function() {\n        var _i, _len, _ref, _results;\n\n        _ref = $(\"#colors li\").not(\".addButton\");\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          element = _ref[_i];\n          s = $(element).css(\"background-color\");\n          s = s.replace(\"rgb(\", \"[\");\n          s = s.replace(\"rgba(\", \"[\");\n          _results.push(s = s.replace(\")\", \"]\"));\n        }\n        return _results;\n      })()).join(\",\") + \"]\";\n      return this.storage.save(\"colors\", {\n        rgb: JSON.parse(colorJSON)\n      }, cb);\n    };\n\n    Settings.prototype.load = function(cb) {\n      var _this = this;\n\n      return async.parallel([\n        function(cb) {\n          return _this.loadColors(cb);\n        }, function(cb) {\n          return _this.loadPreferences(cb);\n        }\n      ], cb);\n    };\n\n    Settings.prototype.loadPreferences = function(cb) {\n      var _this = this;\n\n      return this.storage.get(\"preferences\", function(err, prefs) {\n        var el, key, value;\n\n        if (prefs != null) {\n          for (key in prefs) {\n            if (!__hasProp.call(prefs, key)) continue;\n            value = prefs[key];\n            el = $(\"input#\" + key + \".preference\");\n            if (el != null) {\n              $(el).attr('value', value);\n              console.log(el, value);\n            }\n          }\n        }\n        return cb(null, prefs);\n      });\n    };\n\n    Settings.prototype.savePreferences = function(cb) {\n      var prefs,\n        _this = this;\n\n      prefs = {};\n      $(\"#settings input.preference\").each(function(i, el) {\n        return prefs[$(el).attr('id')] = $(el).attr('value');\n      });\n      console.log(prefs);\n      return this.storage.save(\"preferences\", prefs, cb);\n    };\n\n    Settings.prototype.loadColors = function(cb) {\n      var _this = this;\n\n      return this.storage.get(\"colors\", function(err, colors) {\n        var c, _i, _len, _ref;\n\n        if ((colors != null ? colors.rgb : void 0) != null) {\n          _ref = colors.rgb;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            c = _ref[_i];\n            $(\"#colors\").append($(\"<li>\").css(\"background-color\", _this.CSSColorFromArray(c)));\n          }\n        }\n        return cb(null, colors);\n      });\n    };\n\n    return Settings;\n\n  })();\n\n  module.exports = Settings;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/Settings.js"
));
require.register("talkshow.js/build/lib/ZIPExporter.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var ZIPExporter,\n    __hasProp = {}.hasOwnProperty,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  ZIPExporter = (function() {\n    function ZIPExporter() {}\n\n    ZIPExporter.prototype[\"export\"] = function(storage, cb) {\n      var _this = this;\n\n      this.zip = new JSZip();\n      this.assets = this.zip.folder('assets');\n      return this._export(storage, function(err) {\n        var zipFileLink;\n\n        if (err != null) {\n          return cb(err);\n        }\n        _this.zip.file(\"content.json\", JSON.stringify(_this.data));\n        zipFileLink = \"data:application/zip;base64,\" + _this.zip.generate({\n          base64: true,\n          compression: 'STORE'\n        });\n        return cb(null, zipFileLink);\n      });\n    };\n\n    ZIPExporter.prototype._export = function(storage, cb) {\n      var _this = this;\n\n      this.data = {};\n      this.storage = storage;\n      return async.parallel([\n        function(cb) {\n          return _this.storage.get(\"root\", function(err, rootDoc) {\n            var rootNodeId;\n\n            if (err != null) {\n              return cb(err);\n            }\n            _this.data.root = rootDoc;\n            rootNodeId = (rootDoc != null ? rootDoc.value : void 0) || null;\n            return _this._exportTree(rootNodeId, cb);\n          });\n        }, function(cb) {\n          return _this._exportTree(\"yes_no\", cb);\n        }\n      ], function(err, results) {\n        return cb(err);\n      });\n    };\n\n    ZIPExporter.prototype._exportTree = function(rootNodeId, cb) {\n      var vq,\n        _this = this;\n\n      console.log(\"### Start exporting with rootNodeId\", rootNodeId);\n      if (rootNodeId == null) {\n        return cb(\"rootNodeId not found\");\n      }\n      vq = async.queue(function(id, cb) {\n        return _this._visitNode(vq, id, cb);\n      }, 3);\n      vq.drain = function() {\n        console.log(\"finished exporting\");\n        console.log(_this.data);\n        return cb(null);\n      };\n      return vq.push(rootNodeId, function(err, nodeId) {\n        return console.log(\"finished exporting root (id=\" + nodeId + \") with error \" + err);\n      });\n    };\n\n    ZIPExporter.prototype._visitNode = function(vq, nodeId, cb) {\n      var _this = this;\n\n      return async.parallel([\n        function(cb) {\n          return _this.storage.get(\"node_\" + nodeId + \"_cells\", cb);\n        }, function(cb) {\n          return _this.storage.get(\"node_\" + nodeId + \"_children\", cb);\n        }\n      ], function(err, results) {\n        var cellId, cells, childNodeId, children, position, q, _results;\n\n        if (err != null) {\n          return cb(err);\n        }\n        cells = results[0], children = results[1];\n        if ((children != null) && !_.isEmpty(children)) {\n          console.log(\"Start exporting node \" + nodeId + \"'s children\");\n          _this.data[\"node_\" + nodeId + \"_children\"] = children;\n          for (position in children) {\n            if (!__hasProp.call(children, position)) continue;\n            childNodeId = children[position];\n            console.log(\"starting exporting node \" + childNodeId);\n            vq.push(childNodeId, function(err, nodeId) {\n              return console.log(\"finished exporting node \" + nodeId + \" with error \" + err);\n            });\n          }\n        }\n        if ((cells != null) && !_.isEmpty(cells)) {\n          console.log(\"Start exporting node \" + nodeId + \"'s cells\");\n          _this.data[\"node_\" + nodeId + \"_cells\"] = cells;\n          q = async.queue(function(id, cb) {\n            var key;\n\n            key = \"cell_\" + id;\n            console.log(\"getting data of \" + key);\n            return _this.storage.get(key, function(err, doc) {\n              if ((doc != null) && !_.isEmpty(doc)) {\n                _this.data[key] = doc;\n                return _this.handleCellData(id, doc, cb);\n              } else {\n                return cb(err, nodeId);\n              }\n            });\n          }, 3);\n          q.drain = function() {\n            console.log(\"Done exporting node \" + nodeId + \"'s cells\");\n            return cb(null, nodeId);\n          };\n          _results = [];\n          for (position in cells) {\n            if (!__hasProp.call(cells, position)) continue;\n            cellId = cells[position];\n            _results.push(q.push(cellId, function(err, cellId) {\n              return console.log(\"finished getting cell \" + cellId + \" with error \" + err);\n            }));\n          }\n          return _results;\n        } else {\n          return cb(null, nodeId);\n        }\n      });\n    };\n\n    ZIPExporter.prototype.handleCellData = function(cellId, doc, cb) {\n      var gotSomethingQueued, ignoreKeys, isExternalURI, k, q, v, _fn,\n        _this = this;\n\n      gotSomethingQueued = false;\n      q = async.queue(function(url, cb) {\n        console.log(\"downloading \" + url + \" ...\");\n        return $.ajax({\n          url: url,\n          dataType: \"text\",\n          beforeSend: function(x) {\n            if (x != null ? x.overrideMimeType : void 0) {\n              return x.overrideMimeType('text/plain; charset=x-user-defined');\n            }\n          },\n          error: function(jqXHR, textStatus, errorThrown) {\n            return cb(errorThrown);\n          },\n          success: function(data, textStatis, xhr) {\n            var cleanData, code, x, _i, _ref;\n\n            cleanData = \"\";\n            for (x = _i = 0, _ref = data.length; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {\n              code = data.charCodeAt(x) & 0xff;\n              cleanData += String.fromCharCode(code);\n            }\n            return cb(null, {\n              data: cleanData,\n              contentType: xhr.getResponseHeader(\"content-type\")\n            });\n          }\n        });\n      }, 3);\n      q.drain = function() {\n        console.log(\"Finished downloading assets of cell \" + cellId);\n        return cb(null, cellId);\n      };\n      ignoreKeys = [\"label\"];\n      isExternalURI = function(uri) {\n        return uri.substr(0, 5) === \"http:\";\n      };\n      _fn = function(k, v) {\n        console.log(\"typeof value is \" + (typeof v));\n        if (isExternalURI(v)) {\n          gotSomethingQueued = true;\n          return q.push(v, function(err, o) {\n            var extension, filename;\n\n            if (err != null) {\n              return console.log(\"download ended with error \" + err);\n            } else {\n              console.log(\"received \" + o.data.length + \" bytes \" + (o.data.substr(1, 3)));\n              filename = \"cell_\" + cellId + \"_\" + k;\n              extension = window.mimeTypes[o.contentType || \"text/plain\"];\n              filename += \".\" + extension;\n              _this.assets.file(filename, o.data, {\n                base64: false,\n                binary: true\n              });\n              return doc[k] = \"./assets/\" + filename;\n            }\n          });\n        }\n      };\n      for (k in doc) {\n        v = doc[k];\n        if (__indexOf.call(ignoreKeys, k) >= 0) {\n          continue;\n        }\n        _fn(k, v);\n      }\n      if (!gotSomethingQueued) {\n        return cb(null, cellId);\n      }\n    };\n\n    return ZIPExporter;\n\n  })();\n\n  module.exports = ZIPExporter;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/ZIPExporter.js"
));
require.register("talkshow.js/build/lib/Storage.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n/*\n  The Storage interface aims to be compatible with all of these\n  - localStorage\n  - in-memory objects\n  - cloud-based database APIs\n*/\n\n\n(function() {\n  var CouchStorage, FileStorage, LocalStorage, Storage, StorageFactory,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  Storage = (function() {\n    function Storage() {}\n\n    Storage.prototype.get = function(id, cb) {};\n\n    Storage.prototype.save = function(id, doc, cb) {};\n\n    Storage.prototype.remove = function(id, cb) {\n      return this.save(id, null, cb);\n    };\n\n    Storage.prototype.toString = function() {\n      return \"unkown Storage\";\n    };\n\n    return Storage;\n\n  })();\n\n  LocalStorage = (function(_super) {\n    __extends(LocalStorage, _super);\n\n    function LocalStorage(cb) {\n      cb(null, this);\n    }\n\n    LocalStorage.prototype.toString = function() {\n      return \"HTML5 LocalStorage\";\n    };\n\n    LocalStorage.prototype.get = function(id, cb) {\n      var doc, s;\n\n      s = localStorage.getItem(id);\n      doc = null;\n      if (s !== null) {\n        doc = JSON.parse(s);\n      }\n      return cb(null, doc);\n    };\n\n    LocalStorage.prototype.save = function(id, doc, cb) {\n      localStorage.setItem(id, doc !== null ? JSON.stringify(doc) : null);\n      return cb(null);\n    };\n\n    return LocalStorage;\n\n  })(Storage);\n\n  CouchStorage = (function(_super) {\n    __extends(CouchStorage, _super);\n\n    function CouchStorage(serverUrl, dbname, cb) {\n      var _this = this;\n\n      this.serverUrl = serverUrl;\n      this.dbname = dbname;\n      $.couch.urlPrefix = this.serverUrl;\n      $.couch.db(this.dbname).info({\n        success: function(data) {\n          return cb(null, _this);\n        },\n        error: function(err) {\n          return cb(err, null);\n        }\n      });\n    }\n\n    CouchStorage.prototype.toString = function() {\n      return \"CouchDB at \" + this.serverUrl + \"/\" + this.dbname;\n    };\n\n    CouchStorage.prototype.get = function(id, cb) {\n      return this._get(id, function(err, doc) {\n        var cleanDoc, k, v;\n\n        if (err != null) {\n          return cb(err);\n        }\n        cleanDoc = {};\n        for (k in doc) {\n          if (!__hasProp.call(doc, k)) continue;\n          v = doc[k];\n          if (k.substr(0, 1) === \"_\") {\n            continue;\n          }\n          cleanDoc[k] = doc[k];\n        }\n        return cb(null, cleanDoc);\n      });\n    };\n\n    CouchStorage.prototype._get = function(id, cb) {\n      var _this = this;\n\n      return $.couch.db(this.dbname).openDoc(id, {\n        success: function(doc) {\n          var link, name, _ref;\n\n          doc = _.clone(doc);\n          if (doc._attachments != null) {\n            _ref = doc._attachments;\n            for (name in _ref) {\n              if (!__hasProp.call(_ref, name)) continue;\n              link = \"\" + _this.serverUrl + \"/\" + _this.dbname + \"/\" + id + \"/\" + name;\n              doc[name] = link;\n            }\n          }\n          return cb(null, doc);\n        },\n        error: function(status) {\n          if (status === 404 || status === '404') {\n            return cb(null, null);\n          } else {\n            return cb(status);\n          }\n        }\n      });\n    };\n\n    CouchStorage.prototype.replaceBlobs = function(id, oldDoc, doc, cb) {\n      var content_type, encoding, k, meta, newAtt, newDoc, scheme, v, _ref, _ref1;\n\n      newDoc = {};\n      newAtt = {};\n      _ref = (oldDoc != null ? oldDoc._attachments : void 0) || {};\n      for (k in _ref) {\n        if (!__hasProp.call(_ref, k)) continue;\n        if (doc[k] !== null) {\n          newAtt[k] = oldDoc._attachments[k];\n        }\n      }\n      newDoc._attachments = newAtt;\n      for (k in doc) {\n        if (!__hasProp.call(doc, k)) continue;\n        v = doc[k];\n        if (typeof v === 'string' && v.substr(0, 5) === 'data:') {\n          meta = v.substr(0, v.indexOf(','));\n          _ref1 = meta.split(/[:;]/g), scheme = _ref1[0], content_type = _ref1[1], encoding = _ref1[2];\n          if (encoding === !\"base64\") {\n            return cb(\"createInlineAttachments: encoding is not base64!\");\n          }\n          newDoc._attachments[k] = {\n            content_type: content_type,\n            data: v.substr(meta.length + 1)\n          };\n        } else {\n          if (v !== null && k !== \"_attachments\") {\n            newDoc[k] = v;\n          }\n        }\n      }\n      return cb(null, newDoc);\n    };\n\n    CouchStorage.prototype.save = function(id, doc, cb) {\n      var _this = this;\n\n      return this._get(id, function(err, oldDoc) {\n        return _this.replaceBlobs(id, oldDoc, doc, function(err, newDoc) {\n          if (err != null) {\n            return cb(err);\n          }\n          if (oldDoc != null) {\n            newDoc._rev = oldDoc._rev;\n          }\n          newDoc._id = id;\n          return $.couch.db(_this.dbname).saveDoc(newDoc, {\n            success: function(data) {\n              return cb(null, data);\n            },\n            error: function(status) {\n              return cb(status);\n            }\n          });\n        });\n      });\n    };\n\n    return CouchStorage;\n\n  })(Storage);\n\n  FileStorage = (function(_super) {\n    __extends(FileStorage, _super);\n\n    function FileStorage(filename, cb) {\n      var _this = this;\n\n      this.filename = filename;\n      $.ajax({\n        url: this.filename,\n        dataType: \"text\",\n        success: function(data) {\n          console.log(data);\n          _this.data = JSON.parse(data);\n          if (_this.data.root != null) {\n            return cb(null, _this);\n          } else {\n            return cb(\"no root found\", null);\n          }\n        },\n        error: function(xhr, textStatus, err) {\n          return cb(err, null);\n        }\n      });\n    }\n\n    FileStorage.prototype.toString = function() {\n      return \"File \" + this.filename;\n    };\n\n    FileStorage.prototype.get = function(id, cb) {\n      return cb(null, this.data[id] || null);\n    };\n\n    FileStorage.prototype.save = function(id, doc, cb) {\n      this.data[id] = doc;\n      return cb(null);\n    };\n\n    return FileStorage;\n\n  })(Storage);\n\n  StorageFactory = (function() {\n    function StorageFactory() {}\n\n    StorageFactory.prototype.getBestStorage = function(cb) {\n      var errors,\n        _this = this;\n\n      errors = {};\n      return async.parallel([\n        function(cb) {\n          return new CouchStorage('http://localhost:5984', 'talkshow', function(err, result) {\n            errors.CouchStorage = err;\n            return cb(null, result);\n          });\n        }, function(cb) {\n          return new FileStorage('content.json', function(err, result) {\n            errors.FileStorage = err;\n            return cb(null, result);\n          });\n        }, function(cb) {\n          return new LocalStorage(function(err, result) {\n            errors.LocalStorage = err;\n            return cb(null, result);\n          });\n        }\n      ], function(err, results) {\n        var x, _i, _len;\n\n        console.log(errors);\n        for (_i = 0, _len = results.length; _i < _len; _i++) {\n          x = results[_i];\n          if (x != null) {\n            return cb(null, x);\n          }\n        }\n        return cb(errors);\n      });\n    };\n\n    return StorageFactory;\n\n  })();\n\n  module.exports.LocalStorage = LocalStorage;\n\n  module.exports.CouchStorage = CouchStorage;\n\n  module.exports.FileStorage = FileStorage;\n\n  module.exports.StorageFactory = StorageFactory;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/Storage.js"
));
require.register("talkshow.js/build/lib/mime.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var a, b, entries, list, lookUp, _i, _len, _ref;\n\n  list = \"# This file maps Internet media types to unique file extension(s).\\n# Although created for httpd, this file is used by many software systems\\n# and has been placed in the public domain for unlimited redisribution.\\n#\\n# The table below contains both registered and (common) unregistered types.\\n# A type that has no unique extension can be ignored -- they are listed\\n# here to guide configurations toward known types and to make it easier to\\n# identify \\\"new\\\" types.  File extensions are also commonly used to indicate\\n# content languages and encodings, so choose them carefully.\\n#\\n# Internet media types should be registered as described in RFC 4288.\\n# The registry is at <http://www.iana.org/assignments/media-types/>.\\n#\\n# MIME type (lowercased)\t\t\tExtensions\\n# ============================================\t==========\\n# application/1d-interleaved-parityfec\\n# application/3gpp-ims+xml\\n# application/activemessage\\napplication/andrew-inset\t\t\tez\\n# application/applefile\\napplication/applixware\t\t\t\taw\\napplication/atom+xml\t\t\t\tatom\\napplication/atomcat+xml\t\t\t\tatomcat\\n# application/atomicmail\\napplication/atomsvc+xml\t\t\t\tatomsvc\\n# application/auth-policy+xml\\n# application/batch-smtp\\n# application/beep+xml\\n# application/calendar+xml\\n# application/cals-1840\\n# application/ccmp+xml\\napplication/ccxml+xml\t\t\t\tccxml\\napplication/cdmi-capability\t\t\tcdmia\\napplication/cdmi-container\t\t\tcdmic\\napplication/cdmi-domain\t\t\t\tcdmid\\napplication/cdmi-object\t\t\t\tcdmio\\napplication/cdmi-queue\t\t\t\tcdmiq\\n# application/cea-2018+xml\\n# application/cellml+xml\\n# application/cfw\\n# application/cnrp+xml\\n# application/commonground\\n# application/conference-info+xml\\n# application/cpl+xml\\n# application/csta+xml\\n# application/cstadata+xml\\napplication/cu-seeme\t\t\t\tcu\\n# application/cybercash\\napplication/davmount+xml\t\t\tdavmount\\n# application/dca-rft\\n# application/dec-dx\\n# application/dialog-info+xml\\n# application/dicom\\n# application/dns\\napplication/docbook+xml\t\t\t\tdbk\\n# application/dskpp+xml\\napplication/dssc+der\t\t\t\tdssc\\napplication/dssc+xml\t\t\t\txdssc\\n# application/dvcs\\napplication/ecmascript\t\t\t\tecma\\n# application/edi-consent\\n# application/edi-x12\\n# application/edifact\\napplication/emma+xml\t\t\t\temma\\n# application/epp+xml\\napplication/epub+zip\t\t\t\tepub\\n# application/eshop\\n# application/example\\napplication/exi\t\t\t\t\texi\\n# application/fastinfoset\\n# application/fastsoap\\n# application/fits\\napplication/font-tdpfr\t\t\t\tpfr\\n# application/framework-attributes+xml\\napplication/gml+xml\t\t\t\tgml\\napplication/gpx+xml\t\t\t\tgpx\\napplication/gxf\t\t\t\t\tgxf\\n# application/h224\\n# application/held+xml\\n# application/http\\napplication/hyperstudio\t\t\t\tstk\\n# application/ibe-key-request+xml\\n# application/ibe-pkg-reply+xml\\n# application/ibe-pp-data\\n# application/iges\\n# application/im-iscomposing+xml\\n# application/index\\n# application/index.cmd\\n# application/index.obj\\n# application/index.response\\n# application/index.vnd\\napplication/inkml+xml\t\t\t\tink inkml\\n# application/iotp\\napplication/ipfix\t\t\t\tipfix\\n# application/ipp\\n# application/isup\\napplication/java-archive\t\t\tjar\\napplication/java-serialized-object\t\tser\\napplication/java-vm\t\t\t\tclass\\napplication/javascript\t\t\t\tjs\\napplication/json\t\t\t\tjson\\napplication/jsonml+json\t\t\t\tjsonml\\n# application/kpml-request+xml\\n# application/kpml-response+xml\\napplication/lost+xml\t\t\t\tlostxml\\napplication/mac-binhex40\t\t\thqx\\napplication/mac-compactpro\t\t\tcpt\\n# application/macwriteii\\napplication/mads+xml\t\t\t\tmads\\napplication/marc\t\t\t\tmrc\\napplication/marcxml+xml\t\t\t\tmrcx\\napplication/mathematica\t\t\t\tma nb mb\\n# application/mathml-content+xml\\n# application/mathml-presentation+xml\\napplication/mathml+xml\t\t\t\tmathml\\n# application/mbms-associated-procedure-description+xml\\n# application/mbms-deregister+xml\\n# application/mbms-envelope+xml\\n# application/mbms-msk+xml\\n# application/mbms-msk-response+xml\\n# application/mbms-protection-description+xml\\n# application/mbms-reception-report+xml\\n# application/mbms-register+xml\\n# application/mbms-register-response+xml\\n# application/mbms-user-service-description+xml\\napplication/mbox\t\t\t\tmbox\\n# application/media_control+xml\\napplication/mediaservercontrol+xml\t\tmscml\\napplication/metalink+xml\t\t\tmetalink\\napplication/metalink4+xml\t\t\tmeta4\\napplication/mets+xml\t\t\t\tmets\\n# application/mikey\\napplication/mods+xml\t\t\t\tmods\\n# application/moss-keys\\n# application/moss-signature\\n# application/mosskey-data\\n# application/mosskey-request\\napplication/mp21\t\t\t\tm21 mp21\\napplication/mp4\t\t\t\t\tmp4s\\n# application/mpeg4-generic\\n# application/mpeg4-iod\\n# application/mpeg4-iod-xmt\\n# application/msc-ivr+xml\\n# application/msc-mixer+xml\\napplication/msword\t\t\t\tdoc dot\\napplication/mxf\t\t\t\t\tmxf\\n# application/nasdata\\n# application/news-checkgroups\\n# application/news-groupinfo\\n# application/news-transmission\\n# application/nss\\n# application/ocsp-request\\n# application/ocsp-response\\napplication/octet-stream\tbin dms lrf mar so dist distz pkg bpk dump elc deploy\\napplication/oda\t\t\t\t\toda\\napplication/oebps-package+xml\t\t\topf\\napplication/ogg\t\t\t\t\togx\\napplication/omdoc+xml\t\t\t\tomdoc\\napplication/onenote\t\t\t\tonetoc onetoc2 onetmp onepkg\\napplication/oxps\t\t\t\toxps\\n# application/parityfec\\napplication/patch-ops-error+xml\t\t\txer\\napplication/pdf\t\t\t\t\tpdf\\napplication/pgp-encrypted\t\t\tpgp\\n# application/pgp-keys\\napplication/pgp-signature\t\t\tasc sig\\napplication/pics-rules\t\t\t\tprf\\n# application/pidf+xml\\n# application/pidf-diff+xml\\napplication/pkcs10\t\t\t\tp10\\napplication/pkcs7-mime\t\t\t\tp7m p7c\\napplication/pkcs7-signature\t\t\tp7s\\napplication/pkcs8\t\t\t\tp8\\napplication/pkix-attr-cert\t\t\tac\\napplication/pkix-cert\t\t\t\tcer\\napplication/pkix-crl\t\t\t\tcrl\\napplication/pkix-pkipath\t\t\tpkipath\\napplication/pkixcmp\t\t\t\tpki\\napplication/pls+xml\t\t\t\tpls\\n# application/poc-settings+xml\\napplication/postscript\t\t\t\tai eps ps\\n# application/prs.alvestrand.titrax-sheet\\napplication/prs.cww\t\t\t\tcww\\n# application/prs.nprend\\n# application/prs.plucker\\n# application/prs.rdf-xml-crypt\\n# application/prs.xsf+xml\\napplication/pskc+xml\t\t\t\tpskcxml\\n# application/qsig\\napplication/rdf+xml\t\t\t\trdf\\napplication/reginfo+xml\t\t\t\trif\\napplication/relax-ng-compact-syntax\t\trnc\\n# application/remote-printing\\napplication/resource-lists+xml\t\t\trl\\napplication/resource-lists-diff+xml\t\trld\\n# application/riscos\\n# application/rlmi+xml\\napplication/rls-services+xml\t\t\trs\\napplication/rpki-ghostbusters\t\t\tgbr\\napplication/rpki-manifest\t\t\tmft\\napplication/rpki-roa\t\t\t\troa\\n# application/rpki-updown\\napplication/rsd+xml\t\t\t\trsd\\napplication/rss+xml\t\t\t\trss\\napplication/rtf\t\t\t\t\trtf\\n# application/rtx\\n# application/samlassertion+xml\\n# application/samlmetadata+xml\\napplication/sbml+xml\t\t\t\tsbml\\napplication/scvp-cv-request\t\t\tscq\\napplication/scvp-cv-response\t\t\tscs\\napplication/scvp-vp-request\t\t\tspq\\napplication/scvp-vp-response\t\t\tspp\\napplication/sdp\t\t\t\t\tsdp\\n# application/set-payment\\napplication/set-payment-initiation\t\tsetpay\\n# application/set-registration\\napplication/set-registration-initiation\t\tsetreg\\n# application/sgml\\n# application/sgml-open-catalog\\napplication/shf+xml\t\t\t\tshf\\n# application/sieve\\n# application/simple-filter+xml\\n# application/simple-message-summary\\n# application/simplesymbolcontainer\\n# application/slate\\n# application/smil\\napplication/smil+xml\t\t\t\tsmi smil\\n# application/soap+fastinfoset\\n# application/soap+xml\\napplication/sparql-query\t\t\trq\\napplication/sparql-results+xml\t\t\tsrx\\n# application/spirits-event+xml\\napplication/srgs\t\t\t\tgram\\napplication/srgs+xml\t\t\t\tgrxml\\napplication/sru+xml\t\t\t\tsru\\napplication/ssdl+xml\t\t\t\tssdl\\napplication/ssml+xml\t\t\t\tssml\\n# application/tamp-apex-update\\n# application/tamp-apex-update-confirm\\n# application/tamp-community-update\\n# application/tamp-community-update-confirm\\n# application/tamp-error\\n# application/tamp-sequence-adjust\\n# application/tamp-sequence-adjust-confirm\\n# application/tamp-status-query\\n# application/tamp-status-response\\n# application/tamp-update\\n# application/tamp-update-confirm\\napplication/tei+xml\t\t\t\ttei teicorpus\\napplication/thraud+xml\t\t\t\ttfi\\n# application/timestamp-query\\n# application/timestamp-reply\\napplication/timestamped-data\t\t\ttsd\\n# application/tve-trigger\\n# application/ulpfec\\n# application/vcard+xml\\n# application/vemmi\\n# application/vividence.scriptfile\\n# application/vnd.3gpp.bsf+xml\\napplication/vnd.3gpp.pic-bw-large\t\tplb\\napplication/vnd.3gpp.pic-bw-small\t\tpsb\\napplication/vnd.3gpp.pic-bw-var\t\t\tpvb\\n# application/vnd.3gpp.sms\\n# application/vnd.3gpp2.bcmcsinfo+xml\\n# application/vnd.3gpp2.sms\\napplication/vnd.3gpp2.tcap\t\t\ttcap\\napplication/vnd.3m.post-it-notes\t\tpwn\\napplication/vnd.accpac.simply.aso\t\taso\\napplication/vnd.accpac.simply.imp\t\timp\\napplication/vnd.acucobol\t\t\tacu\\napplication/vnd.acucorp\t\t\t\tatc acutc\\napplication/vnd.adobe.air-application-installer-package+zip\tair\\napplication/vnd.adobe.formscentral.fcdt\t\tfcdt\\napplication/vnd.adobe.fxp\t\t\tfxp fxpl\\n# application/vnd.adobe.partial-upload\\napplication/vnd.adobe.xdp+xml\t\t\txdp\\napplication/vnd.adobe.xfdf\t\t\txfdf\\n# application/vnd.aether.imp\\n# application/vnd.ah-barcode\\napplication/vnd.ahead.space\t\t\tahead\\napplication/vnd.airzip.filesecure.azf\t\tazf\\napplication/vnd.airzip.filesecure.azs\t\tazs\\napplication/vnd.amazon.ebook\t\t\tazw\\napplication/vnd.americandynamics.acc\t\tacc\\napplication/vnd.amiga.ami\t\t\tami\\n# application/vnd.amundsen.maze+xml\\napplication/vnd.android.package-archive\t\tapk\\napplication/vnd.anser-web-certificate-issue-initiation\tcii\\napplication/vnd.anser-web-funds-transfer-initiation\tfti\\napplication/vnd.antix.game-component\t\tatx\\napplication/vnd.apple.installer+xml\t\tmpkg\\napplication/vnd.apple.mpegurl\t\t\tm3u8\\n# application/vnd.arastra.swi\\napplication/vnd.aristanetworks.swi\t\tswi\\napplication/vnd.astraea-software.iota\t\tiota\\napplication/vnd.audiograph\t\t\taep\\n# application/vnd.autopackage\\n# application/vnd.avistar+xml\\napplication/vnd.blueice.multipass\t\tmpm\\n# application/vnd.bluetooth.ep.oob\\napplication/vnd.bmi\t\t\t\tbmi\\napplication/vnd.businessobjects\t\t\trep\\n# application/vnd.cab-jscript\\n# application/vnd.canon-cpdl\\n# application/vnd.canon-lips\\n# application/vnd.cendio.thinlinc.clientconf\\napplication/vnd.chemdraw+xml\t\t\tcdxml\\napplication/vnd.chipnuts.karaoke-mmd\t\tmmd\\napplication/vnd.cinderella\t\t\tcdy\\n# application/vnd.cirpack.isdn-ext\\napplication/vnd.claymore\t\t\tcla\\napplication/vnd.cloanto.rp9\t\t\trp9\\napplication/vnd.clonk.c4group\t\t\tc4g c4d c4f c4p c4u\\napplication/vnd.cluetrust.cartomobile-config\t\tc11amc\\napplication/vnd.cluetrust.cartomobile-config-pkg\tc11amz\\n# application/vnd.collection+json\\n# application/vnd.commerce-battelle\\napplication/vnd.commonspace\t\t\tcsp\\napplication/vnd.contact.cmsg\t\t\tcdbcmsg\\napplication/vnd.cosmocaller\t\t\tcmc\\napplication/vnd.crick.clicker\t\t\tclkx\\napplication/vnd.crick.clicker.keyboard\t\tclkk\\napplication/vnd.crick.clicker.palette\t\tclkp\\napplication/vnd.crick.clicker.template\t\tclkt\\napplication/vnd.crick.clicker.wordbank\t\tclkw\\napplication/vnd.criticaltools.wbs+xml\t\twbs\\napplication/vnd.ctc-posml\t\t\tpml\\n# application/vnd.ctct.ws+xml\\n# application/vnd.cups-pdf\\n# application/vnd.cups-postscript\\napplication/vnd.cups-ppd\t\t\tppd\\n# application/vnd.cups-raster\\n# application/vnd.cups-raw\\n# application/vnd.curl\\napplication/vnd.curl.car\t\t\tcar\\napplication/vnd.curl.pcurl\t\t\tpcurl\\n# application/vnd.cybank\\napplication/vnd.dart\t\t\t\tdart\\napplication/vnd.data-vision.rdz\t\t\trdz\\napplication/vnd.dece.data\t\t\tuvf uvvf uvd uvvd\\napplication/vnd.dece.ttml+xml\t\t\tuvt uvvt\\napplication/vnd.dece.unspecified\t\tuvx uvvx\\napplication/vnd.dece.zip\t\t\tuvz uvvz\\napplication/vnd.denovo.fcselayout-link\t\tfe_launch\\n# application/vnd.dir-bi.plate-dl-nosuffix\\napplication/vnd.dna\t\t\t\tdna\\napplication/vnd.dolby.mlp\t\t\tmlp\\n# application/vnd.dolby.mobile.1\\n# application/vnd.dolby.mobile.2\\napplication/vnd.dpgraph\t\t\t\tdpg\\napplication/vnd.dreamfactory\t\t\tdfac\\napplication/vnd.ds-keypoint\t\t\tkpxx\\napplication/vnd.dvb.ait\t\t\t\tait\\n# application/vnd.dvb.dvbj\\n# application/vnd.dvb.esgcontainer\\n# application/vnd.dvb.ipdcdftnotifaccess\\n# application/vnd.dvb.ipdcesgaccess\\n# application/vnd.dvb.ipdcesgaccess2\\n# application/vnd.dvb.ipdcesgpdd\\n# application/vnd.dvb.ipdcroaming\\n# application/vnd.dvb.iptv.alfec-base\\n# application/vnd.dvb.iptv.alfec-enhancement\\n# application/vnd.dvb.notif-aggregate-root+xml\\n# application/vnd.dvb.notif-container+xml\\n# application/vnd.dvb.notif-generic+xml\\n# application/vnd.dvb.notif-ia-msglist+xml\\n# application/vnd.dvb.notif-ia-registration-request+xml\\n# application/vnd.dvb.notif-ia-registration-response+xml\\n# application/vnd.dvb.notif-init+xml\\n# application/vnd.dvb.pfr\\napplication/vnd.dvb.service\t\t\tsvc\\n# application/vnd.dxr\\napplication/vnd.dynageo\t\t\t\tgeo\\n# application/vnd.easykaraoke.cdgdownload\\n# application/vnd.ecdis-update\\napplication/vnd.ecowin.chart\t\t\tmag\\n# application/vnd.ecowin.filerequest\\n# application/vnd.ecowin.fileupdate\\n# application/vnd.ecowin.series\\n# application/vnd.ecowin.seriesrequest\\n# application/vnd.ecowin.seriesupdate\\n# application/vnd.emclient.accessrequest+xml\\napplication/vnd.enliven\t\t\t\tnml\\n# application/vnd.eprints.data+xml\\napplication/vnd.epson.esf\t\t\tesf\\napplication/vnd.epson.msf\t\t\tmsf\\napplication/vnd.epson.quickanime\t\tqam\\napplication/vnd.epson.salt\t\t\tslt\\napplication/vnd.epson.ssf\t\t\tssf\\n# application/vnd.ericsson.quickcall\\napplication/vnd.eszigno3+xml\t\t\tes3 et3\\n# application/vnd.etsi.aoc+xml\\n# application/vnd.etsi.cug+xml\\n# application/vnd.etsi.iptvcommand+xml\\n# application/vnd.etsi.iptvdiscovery+xml\\n# application/vnd.etsi.iptvprofile+xml\\n# application/vnd.etsi.iptvsad-bc+xml\\n# application/vnd.etsi.iptvsad-cod+xml\\n# application/vnd.etsi.iptvsad-npvr+xml\\n# application/vnd.etsi.iptvservice+xml\\n# application/vnd.etsi.iptvsync+xml\\n# application/vnd.etsi.iptvueprofile+xml\\n# application/vnd.etsi.mcid+xml\\n# application/vnd.etsi.overload-control-policy-dataset+xml\\n# application/vnd.etsi.sci+xml\\n# application/vnd.etsi.simservs+xml\\n# application/vnd.etsi.tsl+xml\\n# application/vnd.etsi.tsl.der\\n# application/vnd.eudora.data\\napplication/vnd.ezpix-album\t\t\tez2\\napplication/vnd.ezpix-package\t\t\tez3\\n# application/vnd.f-secure.mobile\\napplication/vnd.fdf\t\t\t\tfdf\\napplication/vnd.fdsn.mseed\t\t\tmseed\\napplication/vnd.fdsn.seed\t\t\tseed dataless\\n# application/vnd.ffsns\\n# application/vnd.fints\\napplication/vnd.flographit\t\t\tgph\\napplication/vnd.fluxtime.clip\t\t\tftc\\n# application/vnd.font-fontforge-sfd\\napplication/vnd.framemaker\t\t\tfm frame maker book\\napplication/vnd.frogans.fnc\t\t\tfnc\\napplication/vnd.frogans.ltf\t\t\tltf\\napplication/vnd.fsc.weblaunch\t\t\tfsc\\napplication/vnd.fujitsu.oasys\t\t\toas\\napplication/vnd.fujitsu.oasys2\t\t\toa2\\napplication/vnd.fujitsu.oasys3\t\t\toa3\\napplication/vnd.fujitsu.oasysgp\t\t\tfg5\\napplication/vnd.fujitsu.oasysprs\t\tbh2\\n# application/vnd.fujixerox.art-ex\\n# application/vnd.fujixerox.art4\\n# application/vnd.fujixerox.hbpl\\napplication/vnd.fujixerox.ddd\t\t\tddd\\napplication/vnd.fujixerox.docuworks\t\txdw\\napplication/vnd.fujixerox.docuworks.binder\txbd\\n# application/vnd.fut-misnet\\napplication/vnd.fuzzysheet\t\t\tfzs\\napplication/vnd.genomatix.tuxedo\t\ttxd\\n# application/vnd.geocube+xml\\napplication/vnd.geogebra.file\t\t\tggb\\napplication/vnd.geogebra.tool\t\t\tggt\\napplication/vnd.geometry-explorer\t\tgex gre\\napplication/vnd.geonext\t\t\t\tgxt\\napplication/vnd.geoplan\t\t\t\tg2w\\napplication/vnd.geospace\t\t\tg3w\\n# application/vnd.globalplatform.card-content-mgt\\n# application/vnd.globalplatform.card-content-mgt-response\\napplication/vnd.gmx\t\t\t\tgmx\\napplication/vnd.google-earth.kml+xml\t\tkml\\napplication/vnd.google-earth.kmz\t\tkmz\\napplication/vnd.grafeq\t\t\t\tgqf gqs\\n# application/vnd.gridmp\\napplication/vnd.groove-account\t\t\tgac\\napplication/vnd.groove-help\t\t\tghf\\napplication/vnd.groove-identity-message\t\tgim\\napplication/vnd.groove-injector\t\t\tgrv\\napplication/vnd.groove-tool-message\t\tgtm\\napplication/vnd.groove-tool-template\t\ttpl\\napplication/vnd.groove-vcard\t\t\tvcg\\n# application/vnd.hal+json\\napplication/vnd.hal+xml\t\t\t\thal\\napplication/vnd.handheld-entertainment+xml\tzmm\\napplication/vnd.hbci\t\t\t\thbci\\n# application/vnd.hcl-bireports\\napplication/vnd.hhe.lesson-player\t\tles\\napplication/vnd.hp-hpgl\t\t\t\thpgl\\napplication/vnd.hp-hpid\t\t\t\thpid\\napplication/vnd.hp-hps\t\t\t\thps\\napplication/vnd.hp-jlyt\t\t\t\tjlt\\napplication/vnd.hp-pcl\t\t\t\tpcl\\napplication/vnd.hp-pclxl\t\t\tpclxl\\n# application/vnd.httphone\\napplication/vnd.hydrostatix.sof-data\t\tsfd-hdstx\\n# application/vnd.hzn-3d-crossword\\n# application/vnd.ibm.afplinedata\\n# application/vnd.ibm.electronic-media\\napplication/vnd.ibm.minipay\t\t\tmpy\\napplication/vnd.ibm.modcap\t\t\tafp listafp list3820\\napplication/vnd.ibm.rights-management\t\tirm\\napplication/vnd.ibm.secure-container\t\tsc\\napplication/vnd.iccprofile\t\t\ticc icm\\napplication/vnd.igloader\t\t\tigl\\napplication/vnd.immervision-ivp\t\t\tivp\\napplication/vnd.immervision-ivu\t\t\tivu\\n# application/vnd.informedcontrol.rms+xml\\n# application/vnd.informix-visionary\\n# application/vnd.infotech.project\\n# application/vnd.infotech.project+xml\\n# application/vnd.innopath.wamp.notification\\napplication/vnd.insors.igm\t\t\tigm\\napplication/vnd.intercon.formnet\t\txpw xpx\\napplication/vnd.intergeo\t\t\ti2g\\n# application/vnd.intertrust.digibox\\n# application/vnd.intertrust.nncp\\napplication/vnd.intu.qbo\t\t\tqbo\\napplication/vnd.intu.qfx\t\t\tqfx\\n# application/vnd.iptc.g2.conceptitem+xml\\n# application/vnd.iptc.g2.knowledgeitem+xml\\n# application/vnd.iptc.g2.newsitem+xml\\n# application/vnd.iptc.g2.newsmessage+xml\\n# application/vnd.iptc.g2.packageitem+xml\\n# application/vnd.iptc.g2.planningitem+xml\\napplication/vnd.ipunplugged.rcprofile\t\trcprofile\\napplication/vnd.irepository.package+xml\t\tirp\\napplication/vnd.is-xpr\t\t\t\txpr\\napplication/vnd.isac.fcs\t\t\tfcs\\napplication/vnd.jam\t\t\t\tjam\\n# application/vnd.japannet-directory-service\\n# application/vnd.japannet-jpnstore-wakeup\\n# application/vnd.japannet-payment-wakeup\\n# application/vnd.japannet-registration\\n# application/vnd.japannet-registration-wakeup\\n# application/vnd.japannet-setstore-wakeup\\n# application/vnd.japannet-verification\\n# application/vnd.japannet-verification-wakeup\\napplication/vnd.jcp.javame.midlet-rms\t\trms\\napplication/vnd.jisp\t\t\t\tjisp\\napplication/vnd.joost.joda-archive\t\tjoda\\napplication/vnd.kahootz\t\t\t\tktz ktr\\napplication/vnd.kde.karbon\t\t\tkarbon\\napplication/vnd.kde.kchart\t\t\tchrt\\napplication/vnd.kde.kformula\t\t\tkfo\\napplication/vnd.kde.kivio\t\t\tflw\\napplication/vnd.kde.kontour\t\t\tkon\\napplication/vnd.kde.kpresenter\t\t\tkpr kpt\\napplication/vnd.kde.kspread\t\t\tksp\\napplication/vnd.kde.kword\t\t\tkwd kwt\\napplication/vnd.kenameaapp\t\t\thtke\\napplication/vnd.kidspiration\t\t\tkia\\napplication/vnd.kinar\t\t\t\tkne knp\\napplication/vnd.koan\t\t\t\tskp skd skt skm\\napplication/vnd.kodak-descriptor\t\tsse\\napplication/vnd.las.las+xml\t\t\tlasxml\\n# application/vnd.liberty-request+xml\\napplication/vnd.llamagraphics.life-balance.desktop\tlbd\\napplication/vnd.llamagraphics.life-balance.exchange+xml\tlbe\\napplication/vnd.lotus-1-2-3\t\t\t123\\napplication/vnd.lotus-approach\t\t\tapr\\napplication/vnd.lotus-freelance\t\t\tpre\\napplication/vnd.lotus-notes\t\t\tnsf\\napplication/vnd.lotus-organizer\t\t\torg\\napplication/vnd.lotus-screencam\t\t\tscm\\napplication/vnd.lotus-wordpro\t\t\tlwp\\napplication/vnd.macports.portpkg\t\tportpkg\\n# application/vnd.marlin.drm.actiontoken+xml\\n# application/vnd.marlin.drm.conftoken+xml\\n# application/vnd.marlin.drm.license+xml\\n# application/vnd.marlin.drm.mdcf\\napplication/vnd.mcd\t\t\t\tmcd\\napplication/vnd.medcalcdata\t\t\tmc1\\napplication/vnd.mediastation.cdkey\t\tcdkey\\n# application/vnd.meridian-slingshot\\napplication/vnd.mfer\t\t\t\tmwf\\napplication/vnd.mfmp\t\t\t\tmfm\\napplication/vnd.micrografx.flo\t\t\tflo\\napplication/vnd.micrografx.igx\t\t\tigx\\napplication/vnd.mif\t\t\t\tmif\\n# application/vnd.minisoft-hp3000-save\\n# application/vnd.mitsubishi.misty-guard.trustweb\\napplication/vnd.mobius.daf\t\t\tdaf\\napplication/vnd.mobius.dis\t\t\tdis\\napplication/vnd.mobius.mbk\t\t\tmbk\\napplication/vnd.mobius.mqy\t\t\tmqy\\napplication/vnd.mobius.msl\t\t\tmsl\\napplication/vnd.mobius.plc\t\t\tplc\\napplication/vnd.mobius.txf\t\t\ttxf\\napplication/vnd.mophun.application\t\tmpn\\napplication/vnd.mophun.certificate\t\tmpc\\n# application/vnd.motorola.flexsuite\\n# application/vnd.motorola.flexsuite.adsi\\n# application/vnd.motorola.flexsuite.fis\\n# application/vnd.motorola.flexsuite.gotap\\n# application/vnd.motorola.flexsuite.kmr\\n# application/vnd.motorola.flexsuite.ttc\\n# application/vnd.motorola.flexsuite.wem\\n# application/vnd.motorola.iprm\\napplication/vnd.mozilla.xul+xml\t\t\txul\\napplication/vnd.ms-artgalry\t\t\tcil\\n# application/vnd.ms-asf\\napplication/vnd.ms-cab-compressed\t\tcab\\n# application/vnd.ms-color.iccprofile\\napplication/vnd.ms-excel\t\t\txls xlm xla xlc xlt xlw\\napplication/vnd.ms-excel.addin.macroenabled.12\t\txlam\\napplication/vnd.ms-excel.sheet.binary.macroenabled.12\txlsb\\napplication/vnd.ms-excel.sheet.macroenabled.12\t\txlsm\\napplication/vnd.ms-excel.template.macroenabled.12\txltm\\napplication/vnd.ms-fontobject\t\t\teot\\napplication/vnd.ms-htmlhelp\t\t\tchm\\napplication/vnd.ms-ims\t\t\t\tims\\napplication/vnd.ms-lrm\t\t\t\tlrm\\n# application/vnd.ms-office.activex+xml\\napplication/vnd.ms-officetheme\t\t\tthmx\\n# application/vnd.ms-opentype\\n# application/vnd.ms-package.obfuscated-opentype\\napplication/vnd.ms-pki.seccat\t\t\tcat\\napplication/vnd.ms-pki.stl\t\t\tstl\\n# application/vnd.ms-playready.initiator+xml\\napplication/vnd.ms-powerpoint\t\t\tppt pps pot\\napplication/vnd.ms-powerpoint.addin.macroenabled.12\t\tppam\\napplication/vnd.ms-powerpoint.presentation.macroenabled.12\tpptm\\napplication/vnd.ms-powerpoint.slide.macroenabled.12\t\tsldm\\napplication/vnd.ms-powerpoint.slideshow.macroenabled.12\t\tppsm\\napplication/vnd.ms-powerpoint.template.macroenabled.12\t\tpotm\\n# application/vnd.ms-printing.printticket+xml\\napplication/vnd.ms-project\t\t\tmpp mpt\\n# application/vnd.ms-tnef\\n# application/vnd.ms-wmdrm.lic-chlg-req\\n# application/vnd.ms-wmdrm.lic-resp\\n# application/vnd.ms-wmdrm.meter-chlg-req\\n# application/vnd.ms-wmdrm.meter-resp\\napplication/vnd.ms-word.document.macroenabled.12\tdocm\\napplication/vnd.ms-word.template.macroenabled.12\tdotm\\napplication/vnd.ms-works\t\t\twps wks wcm wdb\\napplication/vnd.ms-wpl\t\t\t\twpl\\napplication/vnd.ms-xpsdocument\t\t\txps\\napplication/vnd.mseq\t\t\t\tmseq\\n# application/vnd.msign\\n# application/vnd.multiad.creator\\n# application/vnd.multiad.creator.cif\\n# application/vnd.music-niff\\napplication/vnd.musician\t\t\tmus\\napplication/vnd.muvee.style\t\t\tmsty\\napplication/vnd.mynfc\t\t\t\ttaglet\\n# application/vnd.ncd.control\\n# application/vnd.ncd.reference\\n# application/vnd.nervana\\n# application/vnd.netfpx\\napplication/vnd.neurolanguage.nlu\t\tnlu\\napplication/vnd.nitf\t\t\t\tntf nitf\\napplication/vnd.noblenet-directory\t\tnnd\\napplication/vnd.noblenet-sealer\t\t\tnns\\napplication/vnd.noblenet-web\t\t\tnnw\\n# application/vnd.nokia.catalogs\\n# application/vnd.nokia.conml+wbxml\\n# application/vnd.nokia.conml+xml\\n# application/vnd.nokia.isds-radio-presets\\n# application/vnd.nokia.iptv.config+xml\\n# application/vnd.nokia.landmark+wbxml\\n# application/vnd.nokia.landmark+xml\\n# application/vnd.nokia.landmarkcollection+xml\\n# application/vnd.nokia.n-gage.ac+xml\\napplication/vnd.nokia.n-gage.data\t\tngdat\\napplication/vnd.nokia.n-gage.symbian.install\tn-gage\\n# application/vnd.nokia.ncd\\n# application/vnd.nokia.pcd+wbxml\\n# application/vnd.nokia.pcd+xml\\napplication/vnd.nokia.radio-preset\t\trpst\\napplication/vnd.nokia.radio-presets\t\trpss\\napplication/vnd.novadigm.edm\t\t\tedm\\napplication/vnd.novadigm.edx\t\t\tedx\\napplication/vnd.novadigm.ext\t\t\text\\n# application/vnd.ntt-local.file-transfer\\n# application/vnd.ntt-local.sip-ta_remote\\n# application/vnd.ntt-local.sip-ta_tcp_stream\\napplication/vnd.oasis.opendocument.chart\t\todc\\napplication/vnd.oasis.opendocument.chart-template\totc\\napplication/vnd.oasis.opendocument.database\t\todb\\napplication/vnd.oasis.opendocument.formula\t\todf\\napplication/vnd.oasis.opendocument.formula-template\todft\\napplication/vnd.oasis.opendocument.graphics\t\todg\\napplication/vnd.oasis.opendocument.graphics-template\totg\\napplication/vnd.oasis.opendocument.image\t\todi\\napplication/vnd.oasis.opendocument.image-template\toti\\napplication/vnd.oasis.opendocument.presentation\t\todp\\napplication/vnd.oasis.opendocument.presentation-template\totp\\napplication/vnd.oasis.opendocument.spreadsheet\t\tods\\napplication/vnd.oasis.opendocument.spreadsheet-template\tots\\napplication/vnd.oasis.opendocument.text\t\t\todt\\napplication/vnd.oasis.opendocument.text-master\t\todm\\napplication/vnd.oasis.opendocument.text-template\tott\\napplication/vnd.oasis.opendocument.text-web\t\toth\\n# application/vnd.obn\\n# application/vnd.oftn.l10n+json\\n# application/vnd.oipf.contentaccessdownload+xml\\n# application/vnd.oipf.contentaccessstreaming+xml\\n# application/vnd.oipf.cspg-hexbinary\\n# application/vnd.oipf.dae.svg+xml\\n# application/vnd.oipf.dae.xhtml+xml\\n# application/vnd.oipf.mippvcontrolmessage+xml\\n# application/vnd.oipf.pae.gem\\n# application/vnd.oipf.spdiscovery+xml\\n# application/vnd.oipf.spdlist+xml\\n# application/vnd.oipf.ueprofile+xml\\n# application/vnd.oipf.userprofile+xml\\napplication/vnd.olpc-sugar\t\t\txo\\n# application/vnd.oma-scws-config\\n# application/vnd.oma-scws-http-request\\n# application/vnd.oma-scws-http-response\\n# application/vnd.oma.bcast.associated-procedure-parameter+xml\\n# application/vnd.oma.bcast.drm-trigger+xml\\n# application/vnd.oma.bcast.imd+xml\\n# application/vnd.oma.bcast.ltkm\\n# application/vnd.oma.bcast.notification+xml\\n# application/vnd.oma.bcast.provisioningtrigger\\n# application/vnd.oma.bcast.sgboot\\n# application/vnd.oma.bcast.sgdd+xml\\n# application/vnd.oma.bcast.sgdu\\n# application/vnd.oma.bcast.simple-symbol-container\\n# application/vnd.oma.bcast.smartcard-trigger+xml\\n# application/vnd.oma.bcast.sprov+xml\\n# application/vnd.oma.bcast.stkm\\n# application/vnd.oma.cab-address-book+xml\\n# application/vnd.oma.cab-feature-handler+xml\\n# application/vnd.oma.cab-pcc+xml\\n# application/vnd.oma.cab-user-prefs+xml\\n# application/vnd.oma.dcd\\n# application/vnd.oma.dcdc\\napplication/vnd.oma.dd2+xml\t\t\tdd2\\n# application/vnd.oma.drm.risd+xml\\n# application/vnd.oma.group-usage-list+xml\\n# application/vnd.oma.pal+xml\\n# application/vnd.oma.poc.detailed-progress-report+xml\\n# application/vnd.oma.poc.final-report+xml\\n# application/vnd.oma.poc.groups+xml\\n# application/vnd.oma.poc.invocation-descriptor+xml\\n# application/vnd.oma.poc.optimized-progress-report+xml\\n# application/vnd.oma.push\\n# application/vnd.oma.scidm.messages+xml\\n# application/vnd.oma.xcap-directory+xml\\n# application/vnd.omads-email+xml\\n# application/vnd.omads-file+xml\\n# application/vnd.omads-folder+xml\\n# application/vnd.omaloc-supl-init\\napplication/vnd.openofficeorg.extension\t\toxt\\n# application/vnd.openxmlformats-officedocument.custom-properties+xml\\n# application/vnd.openxmlformats-officedocument.customxmlproperties+xml\\n# application/vnd.openxmlformats-officedocument.drawing+xml\\n# application/vnd.openxmlformats-officedocument.drawingml.chart+xml\\n# application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\\n# application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\\n# application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\\n# application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\\n# application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\\n# application/vnd.openxmlformats-officedocument.extended-properties+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.comments+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\\napplication/vnd.openxmlformats-officedocument.presentationml.presentation\tpptx\\n# application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\\napplication/vnd.openxmlformats-officedocument.presentationml.slide\tsldx\\n# application/vnd.openxmlformats-officedocument.presentationml.slide+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\\napplication/vnd.openxmlformats-officedocument.presentationml.slideshow\tppsx\\n# application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.tags+xml\\napplication/vnd.openxmlformats-officedocument.presentationml.template\tpotx\\n# application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\\n# application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\\napplication/vnd.openxmlformats-officedocument.spreadsheetml.sheet\txlsx\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\\napplication/vnd.openxmlformats-officedocument.spreadsheetml.template\txltx\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\\n# application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\\n# application/vnd.openxmlformats-officedocument.theme+xml\\n# application/vnd.openxmlformats-officedocument.themeoverride+xml\\n# application/vnd.openxmlformats-officedocument.vmldrawing\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\\napplication/vnd.openxmlformats-officedocument.wordprocessingml.document\tdocx\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\\napplication/vnd.openxmlformats-officedocument.wordprocessingml.template\tdotx\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\\n# application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\\n# application/vnd.openxmlformats-package.core-properties+xml\\n# application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\\n# application/vnd.openxmlformats-package.relationships+xml\\n# application/vnd.quobject-quoxdocument\\n# application/vnd.osa.netdeploy\\napplication/vnd.osgeo.mapguide.package\t\tmgp\\n# application/vnd.osgi.bundle\\napplication/vnd.osgi.dp\t\t\t\tdp\\napplication/vnd.osgi.subsystem\t\t\tesa\\n# application/vnd.otps.ct-kip+xml\\napplication/vnd.palm\t\t\t\tpdb pqa oprc\\n# application/vnd.paos.xml\\napplication/vnd.pawaafile\t\t\tpaw\\napplication/vnd.pg.format\t\t\tstr\\napplication/vnd.pg.osasli\t\t\tei6\\n# application/vnd.piaccess.application-licence\\napplication/vnd.picsel\t\t\t\tefif\\napplication/vnd.pmi.widget\t\t\twg\\n# application/vnd.poc.group-advertisement+xml\\napplication/vnd.pocketlearn\t\t\tplf\\napplication/vnd.powerbuilder6\t\t\tpbd\\n# application/vnd.powerbuilder6-s\\n# application/vnd.powerbuilder7\\n# application/vnd.powerbuilder7-s\\n# application/vnd.powerbuilder75\\n# application/vnd.powerbuilder75-s\\n# application/vnd.preminet\\napplication/vnd.previewsystems.box\t\tbox\\napplication/vnd.proteus.magazine\t\tmgz\\napplication/vnd.publishare-delta-tree\t\tqps\\napplication/vnd.pvi.ptid1\t\t\tptid\\n# application/vnd.pwg-multiplexed\\n# application/vnd.pwg-xhtml-print+xml\\n# application/vnd.qualcomm.brew-app-res\\napplication/vnd.quark.quarkxpress\t\tqxd qxt qwd qwt qxl qxb\\n# application/vnd.radisys.moml+xml\\n# application/vnd.radisys.msml+xml\\n# application/vnd.radisys.msml-audit+xml\\n# application/vnd.radisys.msml-audit-conf+xml\\n# application/vnd.radisys.msml-audit-conn+xml\\n# application/vnd.radisys.msml-audit-dialog+xml\\n# application/vnd.radisys.msml-audit-stream+xml\\n# application/vnd.radisys.msml-conf+xml\\n# application/vnd.radisys.msml-dialog+xml\\n# application/vnd.radisys.msml-dialog-base+xml\\n# application/vnd.radisys.msml-dialog-fax-detect+xml\\n# application/vnd.radisys.msml-dialog-fax-sendrecv+xml\\n# application/vnd.radisys.msml-dialog-group+xml\\n# application/vnd.radisys.msml-dialog-speech+xml\\n# application/vnd.radisys.msml-dialog-transform+xml\\n# application/vnd.rainstor.data\\n# application/vnd.rapid\\napplication/vnd.realvnc.bed\t\t\tbed\\napplication/vnd.recordare.musicxml\t\tmxl\\napplication/vnd.recordare.musicxml+xml\t\tmusicxml\\n# application/vnd.renlearn.rlprint\\napplication/vnd.rig.cryptonote\t\t\tcryptonote\\napplication/vnd.rim.cod\t\t\t\tcod\\napplication/vnd.rn-realmedia\t\t\trm\\napplication/vnd.rn-realmedia-vbr\t\trmvb\\napplication/vnd.route66.link66+xml\t\tlink66\\n# application/vnd.rs-274x\\n# application/vnd.ruckus.download\\n# application/vnd.s3sms\\napplication/vnd.sailingtracker.track\t\tst\\n# application/vnd.sbm.cid\\n# application/vnd.sbm.mid2\\n# application/vnd.scribus\\n# application/vnd.sealed.3df\\n# application/vnd.sealed.csf\\n# application/vnd.sealed.doc\\n# application/vnd.sealed.eml\\n# application/vnd.sealed.mht\\n# application/vnd.sealed.net\\n# application/vnd.sealed.ppt\\n# application/vnd.sealed.tiff\\n# application/vnd.sealed.xls\\n# application/vnd.sealedmedia.softseal.html\\n# application/vnd.sealedmedia.softseal.pdf\\napplication/vnd.seemail\t\t\t\tsee\\napplication/vnd.sema\t\t\t\tsema\\napplication/vnd.semd\t\t\t\tsemd\\napplication/vnd.semf\t\t\t\tsemf\\napplication/vnd.shana.informed.formdata\t\tifm\\napplication/vnd.shana.informed.formtemplate\titp\\napplication/vnd.shana.informed.interchange\tiif\\napplication/vnd.shana.informed.package\t\tipk\\napplication/vnd.simtech-mindmapper\t\ttwd twds\\napplication/vnd.smaf\t\t\t\tmmf\\n# application/vnd.smart.notebook\\napplication/vnd.smart.teacher\t\t\tteacher\\n# application/vnd.software602.filler.form+xml\\n# application/vnd.software602.filler.form-xml-zip\\napplication/vnd.solent.sdkm+xml\t\t\tsdkm sdkd\\napplication/vnd.spotfire.dxp\t\t\tdxp\\napplication/vnd.spotfire.sfs\t\t\tsfs\\n# application/vnd.sss-cod\\n# application/vnd.sss-dtf\\n# application/vnd.sss-ntf\\napplication/vnd.stardivision.calc\t\tsdc\\napplication/vnd.stardivision.draw\t\tsda\\napplication/vnd.stardivision.impress\t\tsdd\\napplication/vnd.stardivision.math\t\tsmf\\napplication/vnd.stardivision.writer\t\tsdw vor\\napplication/vnd.stardivision.writer-global\tsgl\\napplication/vnd.stepmania.package\t\tsmzip\\napplication/vnd.stepmania.stepchart\t\tsm\\n# application/vnd.street-stream\\napplication/vnd.sun.xml.calc\t\t\tsxc\\napplication/vnd.sun.xml.calc.template\t\tstc\\napplication/vnd.sun.xml.draw\t\t\tsxd\\napplication/vnd.sun.xml.draw.template\t\tstd\\napplication/vnd.sun.xml.impress\t\t\tsxi\\napplication/vnd.sun.xml.impress.template\tsti\\napplication/vnd.sun.xml.math\t\t\tsxm\\napplication/vnd.sun.xml.writer\t\t\tsxw\\napplication/vnd.sun.xml.writer.global\t\tsxg\\napplication/vnd.sun.xml.writer.template\t\tstw\\n# application/vnd.sun.wadl+xml\\napplication/vnd.sus-calendar\t\t\tsus susp\\napplication/vnd.svd\t\t\t\tsvd\\n# application/vnd.swiftview-ics\\napplication/vnd.symbian.install\t\t\tsis sisx\\napplication/vnd.syncml+xml\t\t\txsm\\napplication/vnd.syncml.dm+wbxml\t\t\tbdm\\napplication/vnd.syncml.dm+xml\t\t\txdm\\n# application/vnd.syncml.dm.notification\\n# application/vnd.syncml.ds.notification\\napplication/vnd.tao.intent-module-archive\ttao\\napplication/vnd.tcpdump.pcap\t\t\tpcap cap dmp\\napplication/vnd.tmobile-livetv\t\t\ttmo\\napplication/vnd.trid.tpt\t\t\ttpt\\napplication/vnd.triscape.mxs\t\t\tmxs\\napplication/vnd.trueapp\t\t\t\ttra\\n# application/vnd.truedoc\\n# application/vnd.ubisoft.webplayer\\napplication/vnd.ufdl\t\t\t\tufd ufdl\\napplication/vnd.uiq.theme\t\t\tutz\\napplication/vnd.umajin\t\t\t\tumj\\napplication/vnd.unity\t\t\t\tunityweb\\napplication/vnd.uoml+xml\t\t\tuoml\\n# application/vnd.uplanet.alert\\n# application/vnd.uplanet.alert-wbxml\\n# application/vnd.uplanet.bearer-choice\\n# application/vnd.uplanet.bearer-choice-wbxml\\n# application/vnd.uplanet.cacheop\\n# application/vnd.uplanet.cacheop-wbxml\\n# application/vnd.uplanet.channel\\n# application/vnd.uplanet.channel-wbxml\\n# application/vnd.uplanet.list\\n# application/vnd.uplanet.list-wbxml\\n# application/vnd.uplanet.listcmd\\n# application/vnd.uplanet.listcmd-wbxml\\n# application/vnd.uplanet.signal\\napplication/vnd.vcx\t\t\t\tvcx\\n# application/vnd.vd-study\\n# application/vnd.vectorworks\\n# application/vnd.verimatrix.vcas\\n# application/vnd.vidsoft.vidconference\\napplication/vnd.visio\t\t\t\tvsd vst vss vsw\\napplication/vnd.visionary\t\t\tvis\\n# application/vnd.vividence.scriptfile\\napplication/vnd.vsf\t\t\t\tvsf\\n# application/vnd.wap.sic\\n# application/vnd.wap.slc\\napplication/vnd.wap.wbxml\t\t\twbxml\\napplication/vnd.wap.wmlc\t\t\twmlc\\napplication/vnd.wap.wmlscriptc\t\t\twmlsc\\napplication/vnd.webturbo\t\t\twtb\\n# application/vnd.wfa.wsc\\n# application/vnd.wmc\\n# application/vnd.wmf.bootstrap\\n# application/vnd.wolfram.mathematica\\n# application/vnd.wolfram.mathematica.package\\napplication/vnd.wolfram.player\t\t\tnbp\\napplication/vnd.wordperfect\t\t\twpd\\napplication/vnd.wqd\t\t\t\twqd\\n# application/vnd.wrq-hp3000-labelled\\napplication/vnd.wt.stf\t\t\t\tstf\\n# application/vnd.wv.csp+wbxml\\n# application/vnd.wv.csp+xml\\n# application/vnd.wv.ssp+xml\\napplication/vnd.xara\t\t\t\txar\\napplication/vnd.xfdl\t\t\t\txfdl\\n# application/vnd.xfdl.webform\\n# application/vnd.xmi+xml\\n# application/vnd.xmpie.cpkg\\n# application/vnd.xmpie.dpkg\\n# application/vnd.xmpie.plan\\n# application/vnd.xmpie.ppkg\\n# application/vnd.xmpie.xlim\\napplication/vnd.yamaha.hv-dic\t\t\thvd\\napplication/vnd.yamaha.hv-script\t\thvs\\napplication/vnd.yamaha.hv-voice\t\t\thvp\\napplication/vnd.yamaha.openscoreformat\t\t\tosf\\napplication/vnd.yamaha.openscoreformat.osfpvg+xml\tosfpvg\\n# application/vnd.yamaha.remote-setup\\napplication/vnd.yamaha.smaf-audio\t\tsaf\\napplication/vnd.yamaha.smaf-phrase\t\tspf\\n# application/vnd.yamaha.through-ngn\\n# application/vnd.yamaha.tunnel-udpencap\\napplication/vnd.yellowriver-custom-menu\t\tcmp\\napplication/vnd.zul\t\t\t\tzir zirz\\napplication/vnd.zzazz.deck+xml\t\t\tzaz\\napplication/voicexml+xml\t\t\tvxml\\n# application/vq-rtcpxr\\n# application/watcherinfo+xml\\n# application/whoispp-query\\n# application/whoispp-response\\napplication/widget\t\t\t\twgt\\napplication/winhlp\t\t\t\thlp\\n# application/wita\\n# application/wordperfect5.1\\napplication/wsdl+xml\t\t\t\twsdl\\napplication/wspolicy+xml\t\t\twspolicy\\napplication/x-7z-compressed\t\t\t7z\\napplication/x-abiword\t\t\t\tabw\\napplication/x-ace-compressed\t\t\tace\\n# application/x-amf\\napplication/x-apple-diskimage\t\t\tdmg\\napplication/x-authorware-bin\t\t\taab x32 u32 vox\\napplication/x-authorware-map\t\t\taam\\napplication/x-authorware-seg\t\t\taas\\napplication/x-bcpio\t\t\t\tbcpio\\napplication/x-bittorrent\t\t\ttorrent\\napplication/x-blorb\t\t\t\tblb blorb\\napplication/x-bzip\t\t\t\tbz\\napplication/x-bzip2\t\t\t\tbz2 boz\\napplication/x-cbr\t\t\t\tcbr cba cbt cbz cb7\\napplication/x-cdlink\t\t\t\tvcd\\napplication/x-cfs-compressed\t\t\tcfs\\napplication/x-chat\t\t\t\tchat\\napplication/x-chess-pgn\t\t\t\tpgn\\napplication/x-conference\t\t\tnsc\\n# application/x-compress\\napplication/x-cpio\t\t\t\tcpio\\napplication/x-csh\t\t\t\tcsh\\napplication/x-debian-package\t\t\tdeb udeb\\napplication/x-dgc-compressed\t\t\tdgc\\napplication/x-director\t\t\tdir dcr dxr cst cct cxt w3d fgd swa\\napplication/x-doom\t\t\t\twad\\napplication/x-dtbncx+xml\t\t\tncx\\napplication/x-dtbook+xml\t\t\tdtb\\napplication/x-dtbresource+xml\t\t\tres\\napplication/x-dvi\t\t\t\tdvi\\napplication/x-envoy\t\t\t\tevy\\napplication/x-eva\t\t\t\teva\\napplication/x-font-bdf\t\t\t\tbdf\\n# application/x-font-dos\\n# application/x-font-framemaker\\napplication/x-font-ghostscript\t\t\tgsf\\n# application/x-font-libgrx\\napplication/x-font-linux-psf\t\t\tpsf\\napplication/x-font-otf\t\t\t\totf\\napplication/x-font-pcf\t\t\t\tpcf\\napplication/x-font-snf\t\t\t\tsnf\\n# application/x-font-speedo\\n# application/x-font-sunos-news\\napplication/x-font-ttf\t\t\t\tttf ttc\\napplication/x-font-type1\t\t\tpfa pfb pfm afm\\napplication/x-font-woff\t\t\t\twoff\\n# application/x-font-vfont\\napplication/x-freearc\t\t\t\tarc\\napplication/x-futuresplash\t\t\tspl\\napplication/x-gca-compressed\t\t\tgca\\napplication/x-glulx\t\t\t\tulx\\napplication/x-gnumeric\t\t\t\tgnumeric\\napplication/x-gramps-xml\t\t\tgramps\\napplication/x-gtar\t\t\t\tgtar\\n# application/x-gzip\\napplication/x-hdf\t\t\t\thdf\\napplication/x-install-instructions\t\tinstall\\napplication/x-iso9660-image\t\t\tiso\\napplication/x-java-jnlp-file\t\t\tjnlp\\napplication/x-latex\t\t\t\tlatex\\napplication/x-lzh-compressed\t\t\tlzh lha\\napplication/x-mie\t\t\t\tmie\\napplication/x-mobipocket-ebook\t\t\tprc mobi\\napplication/x-ms-application\t\t\tapplication\\napplication/x-ms-shortcut\t\t\tlnk\\napplication/x-ms-wmd\t\t\t\twmd\\napplication/x-ms-wmz\t\t\t\twmz\\napplication/x-ms-xbap\t\t\t\txbap\\napplication/x-msaccess\t\t\t\tmdb\\napplication/x-msbinder\t\t\t\tobd\\napplication/x-mscardfile\t\t\tcrd\\napplication/x-msclip\t\t\t\tclp\\napplication/x-msdownload\t\t\texe dll com bat msi\\napplication/x-msmediaview\t\t\tmvb m13 m14\\napplication/x-msmetafile\t\t\twmf wmz emf emz\\napplication/x-msmoney\t\t\t\tmny\\napplication/x-mspublisher\t\t\tpub\\napplication/x-msschedule\t\t\tscd\\napplication/x-msterminal\t\t\ttrm\\napplication/x-mswrite\t\t\t\twri\\napplication/x-netcdf\t\t\t\tnc cdf\\napplication/x-nzb\t\t\t\tnzb\\napplication/x-pkcs12\t\t\t\tp12 pfx\\napplication/x-pkcs7-certificates\t\tp7b spc\\napplication/x-pkcs7-certreqresp\t\t\tp7r\\napplication/x-rar-compressed\t\t\trar\\napplication/x-research-info-systems\t\tris\\napplication/x-sh\t\t\t\tsh\\napplication/x-shar\t\t\t\tshar\\napplication/x-shockwave-flash\t\t\tswf\\napplication/x-silverlight-app\t\t\txap\\napplication/x-sql\t\t\t\tsql\\napplication/x-stuffit\t\t\t\tsit\\napplication/x-stuffitx\t\t\t\tsitx\\napplication/x-subrip\t\t\t\tsrt\\napplication/x-sv4cpio\t\t\t\tsv4cpio\\napplication/x-sv4crc\t\t\t\tsv4crc\\napplication/x-t3vm-image\t\t\tt3\\napplication/x-tads\t\t\t\tgam\\napplication/x-tar\t\t\t\ttar\\napplication/x-tcl\t\t\t\ttcl\\napplication/x-tex\t\t\t\ttex\\napplication/x-tex-tfm\t\t\t\ttfm\\napplication/x-texinfo\t\t\t\ttexinfo texi\\napplication/x-tgif\t\t\t\tobj\\napplication/x-ustar\t\t\t\tustar\\napplication/x-wais-source\t\t\tsrc\\napplication/x-x509-ca-cert\t\t\tder crt\\napplication/x-xfig\t\t\t\tfig\\napplication/x-xliff+xml\t\t\t\txlf\\napplication/x-xpinstall\t\t\t\txpi\\napplication/x-xz\t\t\t\txz\\napplication/x-zmachine\t\t\t\tz1 z2 z3 z4 z5 z6 z7 z8\\n# application/x400-bp\\napplication/xaml+xml\t\t\t\txaml\\n# application/xcap-att+xml\\n# application/xcap-caps+xml\\napplication/xcap-diff+xml\t\t\txdf\\n# application/xcap-el+xml\\n# application/xcap-error+xml\\n# application/xcap-ns+xml\\n# application/xcon-conference-info-diff+xml\\n# application/xcon-conference-info+xml\\napplication/xenc+xml\t\t\t\txenc\\napplication/xhtml+xml\t\t\t\txhtml xht\\n# application/xhtml-voice+xml\\napplication/xml\t\t\t\t\txml xsl\\napplication/xml-dtd\t\t\t\tdtd\\n# application/xml-external-parsed-entity\\n# application/xmpp+xml\\napplication/xop+xml\t\t\t\txop\\napplication/xproc+xml\t\t\t\txpl\\napplication/xslt+xml\t\t\t\txslt\\napplication/xspf+xml\t\t\t\txspf\\napplication/xv+xml\t\t\t\tmxml xhvml xvml xvm\\napplication/yang\t\t\t\tyang\\napplication/yin+xml\t\t\t\tyin\\napplication/zip\t\t\t\t\tzip\\n# audio/1d-interleaved-parityfec\\n# audio/32kadpcm\\n# audio/3gpp\\n# audio/3gpp2\\n# audio/ac3\\naudio/adpcm\t\t\t\t\tadp\\n# audio/amr\\n# audio/amr-wb\\n# audio/amr-wb+\\n# audio/asc\\n# audio/atrac-advanced-lossless\\n# audio/atrac-x\\n# audio/atrac3\\naudio/basic\t\t\t\t\tau snd\\n# audio/bv16\\n# audio/bv32\\n# audio/clearmode\\n# audio/cn\\n# audio/dat12\\n# audio/dls\\n# audio/dsr-es201108\\n# audio/dsr-es202050\\n# audio/dsr-es202211\\n# audio/dsr-es202212\\n# audio/dv\\n# audio/dvi4\\n# audio/eac3\\n# audio/evrc\\n# audio/evrc-qcp\\n# audio/evrc0\\n# audio/evrc1\\n# audio/evrcb\\n# audio/evrcb0\\n# audio/evrcb1\\n# audio/evrcwb\\n# audio/evrcwb0\\n# audio/evrcwb1\\n# audio/example\\n# audio/fwdred\\n# audio/g719\\n# audio/g722\\n# audio/g7221\\n# audio/g723\\n# audio/g726-16\\n# audio/g726-24\\n# audio/g726-32\\n# audio/g726-40\\n# audio/g728\\n# audio/g729\\n# audio/g7291\\n# audio/g729d\\n# audio/g729e\\n# audio/gsm\\n# audio/gsm-efr\\n# audio/gsm-hr-08\\n# audio/ilbc\\n# audio/ip-mr_v2.5\\n# audio/isac\\n# audio/l16\\n# audio/l20\\n# audio/l24\\n# audio/l8\\n# audio/lpc\\naudio/midi\t\t\t\t\tmid midi kar rmi\\n# audio/mobile-xmf\\naudio/mp4\t\t\t\t\tmp4a\\n# audio/mp4a-latm\\n# audio/mpa\\n# audio/mpa-robust\\naudio/mpeg\t\t\t\t\tmpga mp2 mp2a mp3 m2a m3a\\n# audio/mpeg4-generic\\n# audio/musepack\\naudio/ogg\t\t\t\t\toga ogg spx\\n# audio/opus\\n# audio/parityfec\\n# audio/pcma\\n# audio/pcma-wb\\n# audio/pcmu-wb\\n# audio/pcmu\\n# audio/prs.sid\\n# audio/qcelp\\n# audio/red\\n# audio/rtp-enc-aescm128\\n# audio/rtp-midi\\n# audio/rtx\\naudio/s3m\t\t\t\t\ts3m\\naudio/silk\t\t\t\t\tsil\\n# audio/smv\\n# audio/smv0\\n# audio/smv-qcp\\n# audio/sp-midi\\n# audio/speex\\n# audio/t140c\\n# audio/t38\\n# audio/telephone-event\\n# audio/tone\\n# audio/uemclip\\n# audio/ulpfec\\n# audio/vdvi\\n# audio/vmr-wb\\n# audio/vnd.3gpp.iufp\\n# audio/vnd.4sb\\n# audio/vnd.audiokoz\\n# audio/vnd.celp\\n# audio/vnd.cisco.nse\\n# audio/vnd.cmles.radio-events\\n# audio/vnd.cns.anp1\\n# audio/vnd.cns.inf1\\naudio/vnd.dece.audio\t\t\t\tuva uvva\\naudio/vnd.digital-winds\t\t\t\teol\\n# audio/vnd.dlna.adts\\n# audio/vnd.dolby.heaac.1\\n# audio/vnd.dolby.heaac.2\\n# audio/vnd.dolby.mlp\\n# audio/vnd.dolby.mps\\n# audio/vnd.dolby.pl2\\n# audio/vnd.dolby.pl2x\\n# audio/vnd.dolby.pl2z\\n# audio/vnd.dolby.pulse.1\\naudio/vnd.dra\t\t\t\t\tdra\\naudio/vnd.dts\t\t\t\t\tdts\\naudio/vnd.dts.hd\t\t\t\tdtshd\\n# audio/vnd.dvb.file\\n# audio/vnd.everad.plj\\n# audio/vnd.hns.audio\\naudio/vnd.lucent.voice\t\t\t\tlvp\\naudio/vnd.ms-playready.media.pya\t\tpya\\n# audio/vnd.nokia.mobile-xmf\\n# audio/vnd.nortel.vbk\\naudio/vnd.nuera.ecelp4800\t\t\tecelp4800\\naudio/vnd.nuera.ecelp7470\t\t\tecelp7470\\naudio/vnd.nuera.ecelp9600\t\t\tecelp9600\\n# audio/vnd.octel.sbc\\n# audio/vnd.qcelp\\n# audio/vnd.rhetorex.32kadpcm\\naudio/vnd.rip\t\t\t\t\trip\\n# audio/vnd.sealedmedia.softseal.mpeg\\n# audio/vnd.vmx.cvsd\\n# audio/vorbis\\n# audio/vorbis-config\\naudio/webm\t\t\t\t\tweba\\naudio/x-aac\t\t\t\t\taac\\naudio/x-aiff\t\t\t\t\taif aiff aifc\\naudio/x-caf\t\t\t\t\tcaf\\naudio/x-flac\t\t\t\t\tflac\\naudio/x-matroska\t\t\t\tmka\\naudio/x-mpegurl\t\t\t\t\tm3u\\naudio/x-ms-wax\t\t\t\t\twax\\naudio/x-ms-wma\t\t\t\t\twma\\naudio/x-pn-realaudio\t\t\t\tram ra\\naudio/x-pn-realaudio-plugin\t\t\trmp\\n# audio/x-tta\\naudio/x-wav\t\t\t\t\twav\\naudio/xm\t\t\t\t\txm\\nchemical/x-cdx\t\t\t\t\tcdx\\nchemical/x-cif\t\t\t\t\tcif\\nchemical/x-cmdf\t\t\t\t\tcmdf\\nchemical/x-cml\t\t\t\t\tcml\\nchemical/x-csml\t\t\t\t\tcsml\\n# chemical/x-pdb\\nchemical/x-xyz\t\t\t\t\txyz\\nimage/bmp\t\t\t\t\tbmp\\nimage/cgm\t\t\t\t\tcgm\\n# image/example\\n# image/fits\\nimage/g3fax\t\t\t\t\tg3\\nimage/gif\t\t\t\t\tgif\\nimage/ief\t\t\t\t\tief\\n# image/jp2\\nimage/jpeg\t\t\t\t\tjpeg jpg jpe\\n# image/jpm\\n# image/jpx\\nimage/ktx\t\t\t\t\tktx\\n# image/naplps\\nimage/png\t\t\t\t\tpng\\nimage/prs.btif\t\t\t\t\tbtif\\n# image/prs.pti\\nimage/sgi\t\t\t\t\tsgi\\nimage/svg+xml\t\t\t\t\tsvg svgz\\n# image/t38\\nimage/tiff\t\t\t\t\ttiff tif\\n# image/tiff-fx\\nimage/vnd.adobe.photoshop\t\t\tpsd\\n# image/vnd.cns.inf2\\nimage/vnd.dece.graphic\t\t\t\tuvi uvvi uvg uvvg\\nimage/vnd.dvb.subtitle\t\t\t\tsub\\nimage/vnd.djvu\t\t\t\t\tdjvu djv\\nimage/vnd.dwg\t\t\t\t\tdwg\\nimage/vnd.dxf\t\t\t\t\tdxf\\nimage/vnd.fastbidsheet\t\t\t\tfbs\\nimage/vnd.fpx\t\t\t\t\tfpx\\nimage/vnd.fst\t\t\t\t\tfst\\nimage/vnd.fujixerox.edmics-mmr\t\t\tmmr\\nimage/vnd.fujixerox.edmics-rlc\t\t\trlc\\n# image/vnd.globalgraphics.pgb\\n# image/vnd.microsoft.icon\\n# image/vnd.mix\\nimage/vnd.ms-modi\t\t\t\tmdi\\nimage/vnd.ms-photo\t\t\t\twdp\\nimage/vnd.net-fpx\t\t\t\tnpx\\n# image/vnd.radiance\\n# image/vnd.sealed.png\\n# image/vnd.sealedmedia.softseal.gif\\n# image/vnd.sealedmedia.softseal.jpg\\n# image/vnd.svf\\nimage/vnd.wap.wbmp\t\t\t\twbmp\\nimage/vnd.xiff\t\t\t\t\txif\\nimage/webp\t\t\t\t\twebp\\nimage/x-3ds\t\t\t\t\t3ds\\nimage/x-cmu-raster\t\t\t\tras\\nimage/x-cmx\t\t\t\t\tcmx\\nimage/x-freehand\t\t\t\tfh fhc fh4 fh5 fh7\\nimage/x-icon\t\t\t\t\tico\\nimage/x-mrsid-image\t\t\t\tsid\\nimage/x-pcx\t\t\t\t\tpcx\\nimage/x-pict\t\t\t\t\tpic pct\\nimage/x-portable-anymap\t\t\t\tpnm\\nimage/x-portable-bitmap\t\t\t\tpbm\\nimage/x-portable-graymap\t\t\tpgm\\nimage/x-portable-pixmap\t\t\t\tppm\\nimage/x-rgb\t\t\t\t\trgb\\nimage/x-tga\t\t\t\t\ttga\\nimage/x-xbitmap\t\t\t\t\txbm\\nimage/x-xpixmap\t\t\t\t\txpm\\nimage/x-xwindowdump\t\t\t\txwd\\n# message/cpim\\n# message/delivery-status\\n# message/disposition-notification\\n# message/example\\n# message/external-body\\n# message/feedback-report\\n# message/global\\n# message/global-delivery-status\\n# message/global-disposition-notification\\n# message/global-headers\\n# message/http\\n# message/imdn+xml\\n# message/news\\n# message/partial\\nmessage/rfc822\t\t\t\t\teml mime\\n# message/s-http\\n# message/sip\\n# message/sipfrag\\n# message/tracking-status\\n# message/vnd.si.simp\\n# model/example\\nmodel/iges\t\t\t\t\tigs iges\\nmodel/mesh\t\t\t\t\tmsh mesh silo\\nmodel/vnd.collada+xml\t\t\t\tdae\\nmodel/vnd.dwf\t\t\t\t\tdwf\\n# model/vnd.flatland.3dml\\nmodel/vnd.gdl\t\t\t\t\tgdl\\n# model/vnd.gs-gdl\\n# model/vnd.gs.gdl\\nmodel/vnd.gtw\t\t\t\t\tgtw\\n# model/vnd.moml+xml\\nmodel/vnd.mts\t\t\t\t\tmts\\n# model/vnd.parasolid.transmit.binary\\n# model/vnd.parasolid.transmit.text\\nmodel/vnd.vtu\t\t\t\t\tvtu\\nmodel/vrml\t\t\t\t\twrl vrml\\nmodel/x3d+binary\t\t\t\tx3db x3dbz\\nmodel/x3d+vrml\t\t\t\t\tx3dv x3dvz\\nmodel/x3d+xml\t\t\t\t\tx3d x3dz\\n# multipart/alternative\\n# multipart/appledouble\\n# multipart/byteranges\\n# multipart/digest\\n# multipart/encrypted\\n# multipart/example\\n# multipart/form-data\\n# multipart/header-set\\n# multipart/mixed\\n# multipart/parallel\\n# multipart/related\\n# multipart/report\\n# multipart/signed\\n# multipart/voice-message\\n# text/1d-interleaved-parityfec\\ntext/cache-manifest\t\t\t\tappcache\\ntext/calendar\t\t\t\t\tics ifb\\ntext/css\t\t\t\t\tcss\\ntext/csv\t\t\t\t\tcsv\\n# text/directory\\n# text/dns\\n# text/ecmascript\\n# text/enriched\\n# text/example\\n# text/fwdred\\ntext/html\t\t\t\t\thtml htm\\n# text/javascript\\ntext/n3\t\t\t\t\t\tn3\\n# text/parityfec\\ntext/plain\t\t\t\t\ttxt text conf def list log in\\n# text/prs.fallenstein.rst\\ntext/prs.lines.tag\t\t\t\tdsc\\n# text/vnd.radisys.msml-basic-layout\\n# text/red\\n# text/rfc822-headers\\ntext/richtext\t\t\t\t\trtx\\n# text/rtf\\n# text/rtp-enc-aescm128\\n# text/rtx\\ntext/sgml\t\t\t\t\tsgml sgm\\n# text/t140\\ntext/tab-separated-values\t\t\ttsv\\ntext/troff\t\t\t\t\tt tr roff man me ms\\ntext/turtle\t\t\t\t\tttl\\n# text/ulpfec\\ntext/uri-list\t\t\t\t\turi uris urls\\ntext/vcard\t\t\t\t\tvcard\\n# text/vnd.abc\\ntext/vnd.curl\t\t\t\t\tcurl\\ntext/vnd.curl.dcurl\t\t\t\tdcurl\\ntext/vnd.curl.scurl\t\t\t\tscurl\\ntext/vnd.curl.mcurl\t\t\t\tmcurl\\n# text/vnd.dmclientscript\\ntext/vnd.dvb.subtitle\t\t\t\tsub\\n# text/vnd.esmertec.theme-descriptor\\ntext/vnd.fly\t\t\t\t\tfly\\ntext/vnd.fmi.flexstor\t\t\t\tflx\\ntext/vnd.graphviz\t\t\t\tgv\\ntext/vnd.in3d.3dml\t\t\t\t3dml\\ntext/vnd.in3d.spot\t\t\t\tspot\\n# text/vnd.iptc.newsml\\n# text/vnd.iptc.nitf\\n# text/vnd.latex-z\\n# text/vnd.motorola.reflex\\n# text/vnd.ms-mediapackage\\n# text/vnd.net2phone.commcenter.command\\n# text/vnd.si.uricatalogue\\ntext/vnd.sun.j2me.app-descriptor\t\tjad\\n# text/vnd.trolltech.linguist\\n# text/vnd.wap.si\\n# text/vnd.wap.sl\\ntext/vnd.wap.wml\t\t\t\twml\\ntext/vnd.wap.wmlscript\t\t\t\twmls\\ntext/x-asm\t\t\t\t\ts asm\\ntext/x-c\t\t\t\t\tc cc cxx cpp h hh dic\\ntext/x-fortran\t\t\t\t\tf for f77 f90\\ntext/x-java-source\t\t\t\tjava\\ntext/x-opml\t\t\t\t\topml\\ntext/x-pascal\t\t\t\t\tp pas\\ntext/x-nfo\t\t\t\t\tnfo\\ntext/x-setext\t\t\t\t\tetx\\ntext/x-sfv\t\t\t\t\tsfv\\ntext/x-uuencode\t\t\t\t\tuu\\ntext/x-vcalendar\t\t\t\tvcs\\ntext/x-vcard\t\t\t\t\tvcf\\n# text/xml\\n# text/xml-external-parsed-entity\\n# video/1d-interleaved-parityfec\\nvideo/3gpp\t\t\t\t\t3gp\\n# video/3gpp-tt\\nvideo/3gpp2\t\t\t\t\t3g2\\n# video/bmpeg\\n# video/bt656\\n# video/celb\\n# video/dv\\n# video/example\\nvideo/h261\t\t\t\t\th261\\nvideo/h263\t\t\t\t\th263\\n# video/h263-1998\\n# video/h263-2000\\nvideo/h264\t\t\t\t\th264\\n# video/h264-rcdo\\n# video/h264-svc\\nvideo/jpeg\t\t\t\t\tjpgv\\n# video/jpeg2000\\nvideo/jpm\t\t\t\t\tjpm jpgm\\nvideo/mj2\t\t\t\t\tmj2 mjp2\\n# video/mp1s\\n# video/mp2p\\n# video/mp2t\\nvideo/mp4\t\t\t\t\tmp4 mp4v mpg4\\n# video/mp4v-es\\nvideo/mpeg\t\t\t\t\tmpeg mpg mpe m1v m2v\\n# video/mpeg4-generic\\n# video/mpv\\n# video/nv\\nvideo/ogg\t\t\t\t\togv\\n# video/parityfec\\n# video/pointer\\nvideo/quicktime\t\t\t\t\tqt mov\\n# video/raw\\n# video/rtp-enc-aescm128\\n# video/rtx\\n# video/smpte292m\\n# video/ulpfec\\n# video/vc1\\n# video/vnd.cctv\\nvideo/vnd.dece.hd\t\t\t\tuvh uvvh\\nvideo/vnd.dece.mobile\t\t\t\tuvm uvvm\\n# video/vnd.dece.mp4\\nvideo/vnd.dece.pd\t\t\t\tuvp uvvp\\nvideo/vnd.dece.sd\t\t\t\tuvs uvvs\\nvideo/vnd.dece.video\t\t\t\tuvv uvvv\\n# video/vnd.directv.mpeg\\n# video/vnd.directv.mpeg-tts\\n# video/vnd.dlna.mpeg-tts\\nvideo/vnd.dvb.file\t\t\t\tdvb\\nvideo/vnd.fvt\t\t\t\t\tfvt\\n# video/vnd.hns.video\\n# video/vnd.iptvforum.1dparityfec-1010\\n# video/vnd.iptvforum.1dparityfec-2005\\n# video/vnd.iptvforum.2dparityfec-1010\\n# video/vnd.iptvforum.2dparityfec-2005\\n# video/vnd.iptvforum.ttsavc\\n# video/vnd.iptvforum.ttsmpeg2\\n# video/vnd.motorola.video\\n# video/vnd.motorola.videop\\nvideo/vnd.mpegurl\t\t\t\tmxu m4u\\nvideo/vnd.ms-playready.media.pyv\t\tpyv\\n# video/vnd.nokia.interleaved-multimedia\\n# video/vnd.nokia.videovoip\\n# video/vnd.objectvideo\\n# video/vnd.sealed.mpeg1\\n# video/vnd.sealed.mpeg4\\n# video/vnd.sealed.swf\\n# video/vnd.sealedmedia.softseal.mov\\nvideo/vnd.uvvu.mp4\t\t\t\tuvu uvvu\\nvideo/vnd.vivo\t\t\t\t\tviv\\nvideo/webm\t\t\t\t\twebm\\nvideo/x-f4v\t\t\t\t\tf4v\\nvideo/x-fli\t\t\t\t\tfli\\nvideo/x-flv\t\t\t\t\tflv\\nvideo/x-m4v\t\t\t\t\tm4v\\nvideo/x-matroska\t\t\t\tmkv mk3d mks\\nvideo/x-mng\t\t\t\t\tmng\\nvideo/x-ms-asf\t\t\t\t\tasf asx\\nvideo/x-ms-vob\t\t\t\t\tvob\\nvideo/x-ms-wm\t\t\t\t\twm\\nvideo/x-ms-wmv\t\t\t\t\twmv\\nvideo/x-ms-wmx\t\t\t\t\twmx\\nvideo/x-ms-wvx\t\t\t\t\twvx\\nvideo/x-msvideo\t\t\t\t\tavi\\nvideo/x-sgi-movie\t\t\t\tmovie\\nvideo/x-smv\t\t\t\t\tsmv\\nx-conference/x-cooltalk\t\t\t\tice\";\n\n  entries = list.split(\"\\n\");\n\n  entries = _(entries).reject(function(x) {\n    return x.substr(0, 1) === \"#\";\n  });\n\n  entries = _(entries).map(function(x) {\n    return x.split(/\\s+/g);\n  });\n\n  lookUp = {};\n\n  for (_i = 0, _len = entries.length; _i < _len; _i++) {\n    _ref = entries[_i], a = _ref[0], b = _ref[1];\n    lookUp[a] = b;\n    lookUp[b] = a;\n  }\n\n  module.exports = lookUp;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/mime.js"
));
require.register("talkshow.js/build/lib/SplitDataSource.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var SplitDataSource;\n\n  SplitDataSource = (function() {\n    function SplitDataSource(ds1, ds2, splitColumn) {\n      this.ds1 = ds1;\n      this.ds2 = ds2;\n      this.splitColumn = splitColumn;\n    }\n\n    SplitDataSource.prototype.enterCell = function(x, y, cb) {\n      return (x < this.splitColumn ? this.ds1 : this.ds2).enterCell(x, y, cb);\n    };\n\n    SplitDataSource.prototype.cellForPosition = function(x, y, cb) {\n      return (x < this.splitColumn ? this.ds1 : this.ds2).cellForPosition(x, y, cb);\n    };\n\n    return SplitDataSource;\n\n  })();\n\n  module.exports = SplitDataSource;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/SplitDataSource.js"
));
require.register("talkshow.js/build/lib/ModalDialog.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var ModalDialog, keyboardInput,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  keyboardInput = require('./KeyboardInput');\n\n  ModalDialog = (function() {\n    function ModalDialog(selector, callback) {\n      var self;\n\n      this.callback = callback;\n      this.handleKey = __bind(this.handleKey, this);\n      keyboardInput.pushModalKeyHandler(this);\n      this.dialogElement = $(selector);\n      this.dialogElement.show();\n      self = this;\n      this.dialogElement.find('.choice').unbind('click').click(function() {\n        return self.handleButton($(this).attr(\"type\"));\n      });\n    }\n\n    ModalDialog.prototype.handleButton = function(name) {\n      if (this.callback) {\n        this.callback(name);\n      }\n      return this.close();\n    };\n\n    ModalDialog.prototype.close = function() {\n      this.dialogElement.hide();\n      keyboardInput.popModalKeyHandler();\n      if (this.callback) {\n        return this.callback(null);\n      }\n    };\n\n    ModalDialog.prototype.handleKey = function(e) {\n      switch (String.fromCharCode(e.keyCode)) {\n        case 'J':\n          return this.leftKeyPressed();\n        case 'N':\n          return this.rightKeyPressed();\n        case 'M':\n          return this.middleKeyPressed();\n      }\n    };\n\n    ModalDialog.prototype.leftKeyPressed = function() {};\n\n    ModalDialog.prototype.rightKeyPressed = function() {\n      return this.close();\n    };\n\n    ModalDialog.prototype.middleKeyPressed = function() {};\n\n    return ModalDialog;\n\n  })();\n\n  module.exports = ModalDialog;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/ModalDialog.js"
));
require.register("talkshow.js/build/lib/ImagePlayer.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var ImagePlayer, ModalDialog,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  ModalDialog = require('./ModalDialog');\n\n  ImagePlayer = (function(_super) {\n    __extends(ImagePlayer, _super);\n\n    function ImagePlayer(dataURI, cb) {\n      ImagePlayer.__super__.constructor.call(this, '.imagePlayer .dialog', cb);\n      this.img = $('.imagePlayer img')[0];\n      $(this.img).attr(\"src\", dataURI);\n    }\n\n    return ImagePlayer;\n\n  })(ModalDialog);\n\n  module.exports = ImagePlayer;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/ImagePlayer.js"
));
require.register("talkshow.js/build/lib/AudioPlayer.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var AudioPlayer, ModalDialog,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  ModalDialog = require('./ModalDialog');\n\n  AudioPlayer = (function(_super) {\n    __extends(AudioPlayer, _super);\n\n    function AudioPlayer(dataURI, cb) {\n      var _this = this;\n\n      AudioPlayer.__super__.constructor.call(this, '.audioPlayer .dialog', cb);\n      this.audio = $(\".audioPlayer audio\")[0];\n      $(this.audio).attr(\"src\", dataURI);\n      this.audio.play();\n      $(this.audio).bind(\"ended\", function() {\n        return _this.close();\n      });\n    }\n\n    AudioPlayer.prototype.handleButton = function(name) {\n      switch (name) {\n        case \"pause\":\n          return this.leftKeyPressed();\n        case \"back\":\n          return this.close();\n      }\n    };\n\n    AudioPlayer.prototype.leftKeyPressed = function() {\n      return this.audio.pause();\n    };\n\n    AudioPlayer.prototype.close = function() {\n      AudioPlayer.__super__.close.apply(this, arguments);\n      return this.audio.pause();\n    };\n\n    return AudioPlayer;\n\n  })(ModalDialog);\n\n  module.exports = AudioPlayer;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/AudioPlayer.js"
));
require.register("talkshow.js/build/lib/Scanner.js", Function("exports, require, module",
"// Generated by CoffeeScript 1.6.2\n(function() {\n  var Scanner;\n\n  Scanner = (function() {\n    function Scanner(positions, delegate) {\n      var _this = this;\n\n      this.positions = positions;\n      this.delegate = delegate;\n      $(\"#vert\").css(\"left\", \"0px\");\n      $(\"#vert\").css(\"top\", $(\"#grid\").offset().top - 10 + \"px\");\n      $(\"#horiz\").css(\"top\", $(\"#grid\").offset().top(-40 + \"px\"));\n      $(\"#horiz\").css(\"left\", $(\"#grid\").offset().left(-32 + \"px\"));\n      this.scannerStates = [\"hold\", \"vert\", \"horiz\"];\n      this.scannerState = 0;\n      this.animOptions = {\n        duration: 5000,\n        easing: \"linear\",\n        step: function(now, fx) {\n          var axis, index, klass, offsets;\n\n          axis = fx.elem.id;\n          if (axis !== _this.scannerStates[_this.scannerState]) {\n            return;\n          }\n          offsets = _this.positions[axis];\n          klass = \"current_\" + axis;\n          index = 0;\n          while (now > offsets[index] && index < offsets.length) {\n            index++;\n          }\n          $(\"#grid table tr td\").removeClass(klass);\n          if (axis === \"horiz\") {\n            return $(\"#grid table tr td:nth-child(\" + index + \")\").addClass(klass);\n          } else {\n            return $(\"#grid table tr\").eq(index - 1 > 0 ? index - 1 : 0).find(\"td\").addClass(klass);\n          }\n        }\n      };\n    }\n\n    Scanner.prototype.animate = function(axis, animOptions) {\n      var animOptions2, propNames, props, value;\n\n      $('#' + axis).show();\n      propNames = {\n        horiz: \"left\",\n        vert: \"top\"\n      };\n      value = axis === \"horiz\" ? $(\"#grid\").width() : $(\"#grid\").height();\n      props = {};\n      props[propNames[axis]] = \"+=\" + value;\n      $('#' + axis).animate(props, animOptions);\n      props[propNames[axis]] = \"-=\" + value;\n      animOptions2 = _.clone(animOptions);\n      return $('#' + axis).animate(props, animOptions2);\n    };\n\n    Scanner.prototype.advance = function() {\n      var cell, i, old, row, x, y, _ref;\n\n      old = this.scannerState;\n      i = (this.scannerState + 1) % this.scannerStates.length;\n      if (old !== 0) {\n        $(\"#\" + this.scannerStates[old]).hide();\n      }\n      if (i !== 0) {\n        this.animate(this.scannerStates[i], animOptions);\n      } else {\n        cell = $(\".current_vert.current_horiz\");\n        row = cell.closest(\"tr\");\n        x = cell.index();\n        y = row.index();\n        $(\"td\").removeClass(\"current_vert\").removeClass(\"current_horiz\");\n        if ((_ref = this.delegate) != null) {\n          _ref.enterCell(x, y);\n        }\n      }\n      return this.scannerState = i;\n    };\n\n    return Scanner;\n\n  })();\n\n  module.exports = Scanner;\n\n}).call(this);\n//@ sourceURL=talkshow.js/build/lib/Scanner.js"
));
require.alias("visionmedia-mocha/mocha.js", "talkshow.js/deps/mocha/mocha.js");
require.alias("visionmedia-mocha/mocha.js", "talkshow.js/deps/mocha/index.js");
require.alias("visionmedia-mocha/mocha.js", "visionmedia-mocha/index.js");

require.alias("chaijs-chai/index.js", "talkshow.js/deps/chai/index.js");
require.alias("chaijs-chai/lib/chai.js", "talkshow.js/deps/chai/lib/chai.js");
require.alias("chaijs-chai/lib/chai/assertion.js", "talkshow.js/deps/chai/lib/chai/assertion.js");
require.alias("chaijs-chai/lib/chai/error.js", "talkshow.js/deps/chai/lib/chai/error.js");
require.alias("chaijs-chai/lib/chai/core/assertions.js", "talkshow.js/deps/chai/lib/chai/core/assertions.js");
require.alias("chaijs-chai/lib/chai/interface/assert.js", "talkshow.js/deps/chai/lib/chai/interface/assert.js");
require.alias("chaijs-chai/lib/chai/interface/expect.js", "talkshow.js/deps/chai/lib/chai/interface/expect.js");
require.alias("chaijs-chai/lib/chai/interface/should.js", "talkshow.js/deps/chai/lib/chai/interface/should.js");
require.alias("chaijs-chai/lib/chai/utils/addChainableMethod.js", "talkshow.js/deps/chai/lib/chai/utils/addChainableMethod.js");
require.alias("chaijs-chai/lib/chai/utils/addMethod.js", "talkshow.js/deps/chai/lib/chai/utils/addMethod.js");
require.alias("chaijs-chai/lib/chai/utils/addProperty.js", "talkshow.js/deps/chai/lib/chai/utils/addProperty.js");
require.alias("chaijs-chai/lib/chai/utils/eql.js", "talkshow.js/deps/chai/lib/chai/utils/eql.js");
require.alias("chaijs-chai/lib/chai/utils/flag.js", "talkshow.js/deps/chai/lib/chai/utils/flag.js");
require.alias("chaijs-chai/lib/chai/utils/getActual.js", "talkshow.js/deps/chai/lib/chai/utils/getActual.js");
require.alias("chaijs-chai/lib/chai/utils/getEnumerableProperties.js", "talkshow.js/deps/chai/lib/chai/utils/getEnumerableProperties.js");
require.alias("chaijs-chai/lib/chai/utils/getMessage.js", "talkshow.js/deps/chai/lib/chai/utils/getMessage.js");
require.alias("chaijs-chai/lib/chai/utils/getName.js", "talkshow.js/deps/chai/lib/chai/utils/getName.js");
require.alias("chaijs-chai/lib/chai/utils/getPathValue.js", "talkshow.js/deps/chai/lib/chai/utils/getPathValue.js");
require.alias("chaijs-chai/lib/chai/utils/getProperties.js", "talkshow.js/deps/chai/lib/chai/utils/getProperties.js");
require.alias("chaijs-chai/lib/chai/utils/index.js", "talkshow.js/deps/chai/lib/chai/utils/index.js");
require.alias("chaijs-chai/lib/chai/utils/inspect.js", "talkshow.js/deps/chai/lib/chai/utils/inspect.js");
require.alias("chaijs-chai/lib/chai/utils/objDisplay.js", "talkshow.js/deps/chai/lib/chai/utils/objDisplay.js");
require.alias("chaijs-chai/lib/chai/utils/overwriteMethod.js", "talkshow.js/deps/chai/lib/chai/utils/overwriteMethod.js");
require.alias("chaijs-chai/lib/chai/utils/overwriteProperty.js", "talkshow.js/deps/chai/lib/chai/utils/overwriteProperty.js");
require.alias("chaijs-chai/lib/chai/utils/test.js", "talkshow.js/deps/chai/lib/chai/utils/test.js");
require.alias("chaijs-chai/lib/chai/utils/transferFlags.js", "talkshow.js/deps/chai/lib/chai/utils/transferFlags.js");
require.alias("chaijs-chai/lib/chai/utils/type.js", "talkshow.js/deps/chai/lib/chai/utils/type.js");
require.alias("chaijs-chai/index.js", "talkshow.js/deps/chai/index.js");
require.alias("chaijs-chai/index.js", "chaijs-chai/index.js");

require.alias("talkshow.js/build/main.js", "talkshow.js/index.js");

if (typeof exports == "object") {
  module.exports = require("talkshow.js");
} else if (typeof define == "function" && define.amd) {
  define(function(){ return require("talkshow.js"); });
} else {
  window["main"] = require("talkshow.js");
}})();