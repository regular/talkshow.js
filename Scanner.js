// Generated by CoffeeScript 1.3.3
(function() {
  var Scanner;

  Scanner = (function() {

    function Scanner(positions, delegate) {
      var _this = this;
      this.positions = positions;
      this.delegate = delegate;
      $("#vert").css("left", "0px");
      $("#vert").css("top", $("#grid").offset().top - 10 + "px");
      $("#horiz").css("top", $("#grid").offset().top(-40 + "px"));
      $("#horiz").css("left", $("#grid").offset().left(-32 + "px"));
      this.scannerStates = ["hold", "vert", "horiz"];
      this.scannerState = 0;
      this.animOptions = {
        duration: 5000,
        easing: "linear",
        step: function(now, fx) {
          var axis, index, klass, offsets;
          axis = fx.elem.id;
          if (axis !== _this.scannerStates[_this.scannerState]) {
            return;
          }
          offsets = _this.positions[axis];
          klass = "current_" + axis;
          index = 0;
          while (now > offsets[index] && index < offsets.length) {
            index++;
          }
          $("#grid table tr td").removeClass(klass);
          if (axis === "horiz") {
            return $("#grid table tr td:nth-child(" + index + ")").addClass(klass);
          } else {
            return $("#grid table tr").eq(index - 1 > 0 ? index - 1 : 0).find("td").addClass(klass);
          }
        }
      };
    }

    Scanner.prototype.animate = function(axis, animOptions) {
      var animOptions2, propNames, props, value;
      $('#' + axis).show();
      propNames = {
        horiz: "left",
        vert: "top"
      };
      value = axis === "horiz" ? $("#grid").width() : $("#grid").height();
      props = {};
      props[propNames[axis]] = "+=" + value;
      $('#' + axis).animate(props, animOptions);
      props[propNames[axis]] = "-=" + value;
      animOptions2 = _.clone(animOptions);
      return $('#' + axis).animate(props, animOptions2);
    };

    Scanner.prototype.advance = function() {
      var cell, i, old, row, x, y, _ref;
      old = this.scannerState;
      i = (this.scannerState + 1) % this.scannerStates.length;
      if (old !== 0) {
        $("#" + this.scannerStates[old]).hide();
      }
      if (i !== 0) {
        this.animate(this.scannerStates[i], animOptions);
      } else {
        cell = $(".current_vert.current_horiz");
        row = cell.closest("tr");
        x = cell.index();
        y = row.index();
        $("td").removeClass("current_vert").removeClass("current_horiz");
        if ((_ref = this.delegate) != null) {
          _ref.enterCell(x, y);
        }
      }
      return this.scannerState = i;
    };

    return Scanner;

  })();

  window.Scanner = Scanner;

}).call(this);
